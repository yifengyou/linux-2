This is the README using the ITE IT8705 and IT8712 CIR port for LIRC.

The IT8705 for example can be found on the ECS K7S5A.

The driver supports receiving (MODE2) and sending (PULSE). It seems
sending 'LIRC_CAN_SEND_PULSE' isn't optimal for this type of hardware.
But because I don't know how to implement 'LIRC_CAN_SEND_CODE', I did
it this way.

Attention:
Because of missing hardware, the following hasn't been tested:
a) receiving with demodulator enabled,
b) sending (debugging output looks good) and
c) using IT8712

Any help and/or additions etc. is welcome.

lirc_it87 knows about the following module-parameters:
MODULE_DESCRIPTION("LIRC driver for ITE IT8712/IT8705 CIR port");
MODULE_PARM(io, "i");
MODULE_PARM_DESC(io, "I/O base address (default: 0x310)");
MODULE_PARM(irq, "i");
MODULE_PARM_DESC(irq, "Interrupt (1,3-12) (default: 7)");
MODULE_PARM(it87_enable_demodulator, "i");
MODULE_PARM_DESC(it87_enable_demodulator, "Receiver demodulator
	enable/disable (1/0), default: 0");


Usage:

a) io and irq:

If the driver finds the IT8705/12-CIR port initialized, io and irq of
the preinitialized hardware is used by the driver. If both values are
read 0x0 from the hardware, the default or given value is used.
Note: I experienced using irq=3. The driver initialized without any
problems, but no irqs are recognized by the system. I had to switch
back to default, irq 7.
      
b) it87_enable_demodulator:

The demodulator for the receiver can be switched off (default within
the driver). If you need the demodulator simple enable it by the
following way: it87_enable_demodulator=1.

Hans-Günter Lütke Uphues
