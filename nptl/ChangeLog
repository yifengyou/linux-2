2005-10-24  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/sem_trywait.S: Remove unnecessary
	versioned_symbol use.

2005-07-11  Jakub Jelinek  <jakub@redhat.com>

	[BZ #1102]
	* sysdeps/pthread/pthread.h (PTHREAD_MUTEX_INITIALIZER,
	PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP,
	PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP,
	PTHREAD_MUTEX_ADAPTIVE_NP, PTHREAD_RWLOCK_INITIALIZER,
	PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP,
	PTHREAD_COND_INITIALIZER): Supply zeros for all fields
	in the structure.
	* Makefile (tests): Add tst-initializers1.
	(CFLAGS-tst-initializers1.c): Set.
	* tst-initializers1.c: New test.

2005-05-03  Ulrich Drepper  <drepper@redhat.com>

	[BZ #915]
	* sysdeps/pthread/pthread.h: Avoid empty initializers.

2005-04-27  Ulrich Drepper  <drepper@redhat.com>

	[BZ #1075]
	* tst-cancel17.c (do_test): Add arbitrary factor to make sure
	aio_write blocks.

2005-04-05  Jakub Jelinek  <jakub@redhat.com>

	[BZ #1102]
	* sysdeps/pthread/pthread.h (__pthread_cleanup_routine): Use
	__inline instead of inline.
	* sysdeps/pthread/bits/libc-lock.h (__libc_cleanup_routine): Likewise.

2005-03-23  Ulrich Drepper  <drepper@redhat.com>

	[BZ #1112]
	* pthread_create.c (__pthread_create_2_1): Rename syscall error
	variable to scerr.

2005-02-25  Roland McGrath  <roland@redhat.com>

	* alloca_cutoff.c: Correct license text.
	* tst-unload.c: Likewise.
	* sysdeps/pthread/allocalim.h: Likewise.
	* sysdeps/pthread/pt-initfini.c: Likewise.
	* sysdeps/pthread/bits/libc-lock.h: Likewise.
	* sysdeps/pthread/bits/sigthread.h: Likewise.
	* sysdeps/unix/sysv/linux/bits/local_lim.h: Likewise.
	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Likewise.

2005-02-14  Alan Modra  <amodra@bigpond.net.au>

	[BZ #721]
	* sysdeps/powerpc/tcb-offsets.sym (thread_offsetof): Redefine to suit
	gcc4.

2005-02-07  Richard Henderson  <rth@redhat.com>

	[BZ #787]
	* sysdeps/pthread/pthread.h (__sigsetjmp): Use pointer as first
	argument.

2005-01-26  Jakub Jelinek  <jakub@redhat.com>

	[BZ #737]
	* sysdeps/unix/sysv/linux/i386/i486/sem_trywait.S (__new_sem_trywait):
	Use direct %gs segment access or, if NO_TLS_DIRECT_SEG_REFS,
	at least gotntpoff relocation and addition.
	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S (sem_timedwait):
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S (__new_sem_post):
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_wait.S (__new_sem_wait):
	Likewise.

2004-12-27  Ulrich Drepper  <drepper@redhat.com>

	[BZ #744]
	* init.c (__pthread_initialize_minimal_internal): Use __sigemptyset.

2004-12-21  Jakub Jelinek  <jakub@redhat.com>

	[BZ #723]
	* sysdeps/i386/tls.h (CALL_THREAD_FCT): Maintain 16 byte alignment of
	%esp.
	* Makefile (tests): Add tst-align2.
	* tst-align2.c: New test.
	* sysdeps/i386/Makefile (CFLAGS-tst-align{,2}.c): Add
	-mpreferred-stack-boundary=4.

2004-12-21  Jakub Jelinek  <jakub@redhat.com>

	[BZ #723]
	* sysdeps/i386/tls.h (CALL_THREAD_FCT): Maintain 16 byte alignment of
	%esp.
	* Makefile (tests): Add tst-align2.
	* tst-align2.c: New test.
	* sysdeps/i386/Makefile (CFLAGS-tst-align{,2}.c): Add
	-mpreferred-stack-boundary=4.

2004-12-18  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc64/bits/local_lim.h:
	New file removed withdrawn for the moment.

2004-12-17  Richard Henderson  <rth@redhat.com>

	* sysdeps/unix/sysv/linux/alpha/clone.S: New file.
	* sysdeps/alpha/tcb-offsets.sym (TID_OFFSET): New.

2004-12-16  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc64/bits/local_lim.h: New file.
	Increased PTHREAD_STACK_MIN.

	* tst-context1.c (stacks): Use bigger stack size.

2004-12-16  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/sparc/sparc32/clone.S: New file.
	* sysdeps/sparc/tcb-offsets.sym: Add TID.

2004-12-15  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/s390-32/clone.S: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/clone.S: New file.
	* sysdeps/s390/tcb-offsets.sym (TID): Add.

2004-12-15  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc32/clone.S: New file.

2004-12-14  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/powerpc/tcb-offsets.sym: Add TID.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/clone.S: New file.

	* tst-getpid1.c: If child crashes, report this first.  Print which
	signal.

2004-12-09  Ulrich Drepper  <drepper@redhat.com>

	* init.c (__pthread_initialize_minimal_internal): Also unblock
	SIGSETXID.

2004-12-01  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/bits/posix_opt.h (_POSIX_CPUTIME,
	_POSIX_THREAD_CPUTIME): Define to 0.
	* sysdeps/pthread/timer_create.c (timer_create): Remove unused code
	handling CLOCK_PROCESS_CPUTIME_ID and CLOCK_THREAD_CPUTIME_ID.
	* sysdeps/pthread/timer_routines.c (__timer_signal_thread_pclk,
	__timer_signal_thread_tclk): Remove.
	(init_module): Remove their initialization.
	(thread_cleanup): Remove their cleanup assertions.
	* sysdeps/pthread/posix-timer.h (__timer_signal_thread_pclk,
	__timer_signal_thread_tclk): Remove.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Removed.
	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h: Removed.
	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h: Removed.

2004-12-07  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/ia64/tcb-offsets.sym (TID): Add.
	* sysdeps/unix/sysv/linux/ia64/clone2.S: New file.

	* Makefile (tests): Add tst-getpid2.
	* tst-getpid1.c (TEST_CLONE_FLAGS): Define.
	(do_test): Use it.  Use __clone2 instead of clone on ia64.
	* tst-getpid2.c: New test.

2004-12-07  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/clone.S: New file.

2004-12-04  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-getpid1.
	* tst-getpid1.c: New file.
	* sysdeps/unix/sysv/linux/i386/clone.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/clone.S: New file.

2004-12-02  Roland McGrath  <roland@redhat.com>

	* Makefile (libpthread-nonshared): Variable removed.
	($(objpfx)libpthread_nonshared.a): Target removed.
	($(inst_libdir)/libpthread_nonshared.a): Likewise.
	These are now handled by generic magic from
	libpthread-static-only-routines being set.

2004-11-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/bits/posix_opt.h (_POSIX_PRIORITIZED_IO,
	_POSIX2_CHAR_TERM, _POSIX_THREAD_PRIO_INHERIT,
	_POSIX_THREAD_PRIO_PROTECT): Define.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h: Likewise.

2004-11-26  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/bits/posix_opt.h (_POSIX_ADVISORY_INFO,
	_POSIX_SPORADIC_SERVER, _POSIX_THREAD_SPORADIC_SERVER, _POSIX_TRACE,
	_POSIX_TRACE_EVENT_FILTER, _POSIX_TRACE_INHERIT, _POSIX_TRACE_LOG,
	_POSIX_TYPED_MEMORY_OBJECTS, _POSIX_IPV6, _POSIX_RAW_SOCKETS): Define.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h: Likewise.

2004-11-24  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/x86_64/Makefile [nptl]: Define CFLAGS-pthread_create.c.

	* Makefile (libpthread-routines): Add pthread_setschedprio.
	* Versions [libpthread, GLIBC_2.3.4]: Add pthread_setschedprio.
	* sysdeps/pthread/pthread.h: Declare pthread_setschedprio.
	* pthread_setschedprio.c: New file.

2004-11-20  Jakub Jelinek  <jakub@redhat.com>

	* pthread_create.c (pthread_cancel): Add PTHREAD_STATIC_FN_REQUIRE.
	* pthread_cancel.c (pthread_create): Likewise.

	* Makefile (libpthread-routines): Add vars.
	* sysdeps/pthread/createthread.c (__pthread_multiple_threads): Remove.
	* init.c (__default_stacksize, __is_smp): Remove.
	* vars.c: New file.
	* pthreadP.h (__find_thread_by_id): If !SHARED, add weak_function
	and define a wrapper macro.
	(PTHREAD_STATIC_FN_REQUIRE): Define.
	* allocatestack.c (__find_thread_by_id): Undefine.
	* pthread_create (__pthread_keys): Remove.
	(pthread_mutex_lock, pthread_mutex_unlock, pthread_once,
	pthread_key_create, pthread_setspecific, pthread_getspecific): Add
	PTHREAD_STATIC_FN_REQUIRE.

2004-11-18  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/tls.h (DB_THREAD_SELF): Set the correct bias
	parameter to REGISTER macro.

2004-11-17  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/timer_routines.c (__start_helper_thread):
	Make sure SIGCANCEL is blocked as well.

2004-11-10  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/setxid.h: New file.
	* sysdeps/pthread/pthread-functions.h (HAVE_PTR__NPTL_SETXID): Remove.
	(struct xid_command): Add forward decl.
	(struct pthread_functions): Change return type of __nptl_setxid hook
	to int.
	* pthreadP.h (__nptl_setxid): Change return type to int.
	* allocatestack.c (__nptl_setxid): Call INTERNAL_SYSCALL_NCS in the
	calling thread, return its return value and set errno on failure.
	* descr.h (struct xid_command): Change id type to long array.

	* Makefile: Add rules to build and test tst-setuid1 and
	tst-setuid1-static.
	* tst-setuid1.c: New test.
	* tst-setuid1-static.c: New test.

2004-11-10  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-exit3.
	* tst-exit3.c: New test.

2004-11-09  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-exit2.
	* tst-exit2.c: New file.

2004-11-09  Roland McGrath  <roland@redhat.com>

	[BZ #530]
	* sysdeps/pthread/createthread.c (do_clone): Increment __nptl_nthreads
	here, before calling clone.
	* pthread_create.c (start_thread): Don't do it here.

2004-11-02  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/smp.h: Include <errno.h>.

2004-10-29  Kaz  Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/sem_timedwait.S (sem_timedwait):
	Set ETIMEDOUT to errno when time is up.  Tweak to avoid
	assembler warning.

2004-10-28  Jakub Jelinek  <jakub@redhat.com>

	* pthread_create.c (__pthread_create_2_1): Avoid leaking stacks
	if sched_priority is not between minprio and maxprio.

2004-10-25  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Use clock_gettime syscall if exists.

	* sysdeps/unix/sysv/linux/sh/lowlevellock.S
	(__lll_mutex_timedlock_wait): Fix a bad branch condition.

2004-10-24  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/smp.h (is_smp_system): Use
	not-cancelable I/O functions.

2004-10-21  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/lowlevellock.S
	(__lll_mutex_timedlock_wait): If woken but cannot get the lock,
	make sure 2 is stored in the futex and we looked at the old value.
	Fix a few other problems to return the correct value.

2004-10-14  Richard Henderson  <rth@redhat.com>

	* sysdeps/alpha/tcb-offsets.sym (thread_offsetof): Redefine to
	make gcc4 happy.

2004-10-06  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/jmp-unwind.c: Include pthreadP.h instead
	of pthread-functions.h and pthreaddef.h.
	* sysdeps/unix/sysv/linux/s390/jmp-unwind.c: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h (pthread_cond_t):
	Change __data.__nwaiters from int to unsigned int.

	* tst-clock2.c (do_test): Don't fail if _POSIX_THREAD_CPUTIME == 0 and
	sysconf (_SC_THREAD_CPUTIME) returns negative value.

	* allocatestack.c (__find_thread_by_id): Move attribute_hidden
	before return type.

	* sysdeps/s390/jmpbuf-unwind.h: Include bits/wordsize.h.
	(JMPBUF_CFA_UNWINDS_ADJ): Subtract 96 resp. 160 bytes from CFA.

2004-10-06  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel4.c (tf_msgrcv): Check for failure in msgget.  If the
	test fails, remove message queue.
	(tf_msgsnd): Likewise.

2004-10-05  Jakub Jelinek  <jakub@redhat.com>

	* tst-clock1.c: Change #ifdef to #if defined.
	* tst-clock2.c: Likewise.
	* tst-cond11.c: Likewise.

	* sysdeps/pthread/timer_create.c (timer_create): Use
	defined _POSIX_CPUTIME && _POSIX_CPUTIME >= 0 instead of
	defined CLOCK_PROCESS_CPUTIME_ID #ifs and similarly for
	THREAD_CPUTIME.

2004-10-05  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h (_POSIX_CPUTIME,
	_POSIX_THREAD_CPUTIME): Define to 0.

2004-10-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Define _POSIX_CPUTIME
	and _POSIX_THREAD_CPUTIME to zero.
	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h: Likewise.
	* tst-barrier2.c: Fix testing for POSIX feature.
	* tst-clock1.c: Likewise.
	* tst-clock2.c: Likewise.
	* tst-cond11.c: Likewise.
	* tst-cond4.c: Likewise.
	* tst-cond6.c: Likewise.
	* tst-flock2.c: Likewise.
	* tst-mutex4.c: Likewise.
	* tst-mutex9.c: Likewise.
	* tst-rwlock12.c: Likewise.
	* tst-rwlock4.c: Likewise.
	* tst-signal1.c: Likewise.
	* tst-spin2.c: Likewise.
	* sysdeps/pthread/posix-timer.h: Likewise.
	* sysdeps/pthread/timer_create.c: Likewise.
	* sysdeps/pthread/timer_routines.c: Likewise.

2004-10-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S
	(__lll_mutex_timedlock_wait): Address futex correctly.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(__lll_mutex_timedlock_wait): If woken but cannot get the lock,
	make sure 2 is stored in the futex and we looked at the old value.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S
	(__lll_mutex_timedlock_wait): Likewise.  Fix a few other problems
	which might very well made the code not working at all before.
	[BZ #417]

2004-09-28  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/pthread_kill.c (__pthread_kill): Don't
	allow SIGSETXID to be sent.
	* sysdeps/pthread/sigaction.c (__sigaction): Don't allow action
	for SIGSETXID to be defined.
	* sysdeps/pthread/pthread_sigmask.c (pthread_sigmask): Make sure
	SIGSETXID cannot be blocked.

	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h (pthread_cond_t):
	Add __extension__ to long long types.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.

2004-09-25  Ulrich Drepper  <drepper@redhat.com>

	* descr.h (struct pthread): Add stopped_start field.
	* sysdeps/pthread/createthread.c (create_thread): Set
	start_stopped flag in descriptor for new thread appropriately.
	* pthread_create.c (start_thread): Only take lock to be stopped on
	startup if stopped_start flag says so.

2004-09-24  Ulrich Drepper  <drepper@redhat.com>

	* pthread_create.c (__pthread_create_2_1): Remember whether thread
	is created detached and if yes, do not try to free the stack in case
	the thread creation failed.
	* sysdeps/pthread/createthread.c (do_clone): Free stack here if clone
	call fails.  Don't depend on INTERNAL_SYSCALL_ERRNO return zero in
	case there has been no error.  [BZ #405]

	* pthread_create.c (start_thread): Don't wait for scheduler data
	etc to be set at the beginning of the function.  The cancellation
	infrastructure must have been set up.  And enable async
	cancellation before potentially going to sleep.  [BZ #401]

2004-09-20  Ulrich Drepper  <drepper@redhat.com>

	* Versions: Remove exports for pthread_set*id_np functions.
	* sysdeps/pthread/pthread.h: Remove pthread_set*id_np prototypes
	for now.
	* Makefile: Don't build pthread_set*id code for now.

2004-09-19  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/allocrtsig.c: Allocate second signal for
	internal use.
	* allocatestack.c (__nptl_setxid): New function.
	* descr.h (struct xid_command): Define type.
	* init.c (pthread_functions): Add ptr__nptl_setxid initialization.
	(sighandler_setxid): New function.
	(__pthread_initialize_minimal): Register sighandler_setxid for
	SIGCANCEL.
	* pt-allocrtsig.c: Update comment.
	* pthreadP.h: Define SIGSETXID.  Declare __xidcmd variable.
	Declare __nptl_setxid.
	* sysdeps/pthread/pthread-functions.h: Add ptr__nptl_setxid.
	* sysdeps/pthread/pthread.h: Declare pthread_setgid_np,
	pthread_setuid_np, pthread_setegid_np, pthread_seteuid_np,
	pthread_setregid_np, pthread_setreuid_np, pthread_setresgid_np,
	and pthread_setresuid_np.
	* pthread_setgid_np.c: New file.
	* pthread_setuid_np.c: New file.
	* pthread_setegid_np.c: New file.
	* pthread_seteuid_np.c: New file.
	* pthread_setregid_np.c: New file.
	* pthread_setreuid_np.c: New file.
	* pthread_setresgid_np.c: New file.
	* pthread_setresuid_np.c: New file.
	* Versions [libpthread, GLIBC_2.3.4]: Add pthread_setgid_np,
	pthread_setuid_np, pthread_setegid_np, pthread_seteuid_np,
	pthread_setregid_np, pthread_setreuid_np, pthread_setresgid_np,
	and pthread_setresuid_np.
	* Makefile (libpthread-routines): Add pthread_setuid, pthread_seteuid,
	pthread_setreuid, pthread_setresuid, pthread_setgid, pthread_setegid,
	pthread_setregid, and pthread_setresgid.

2004-09-18  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (allocate_stack): Return EAGAIN instead of
	ENOMEM when out of memory.

2004-09-10  Roland McGrath  <roland@redhat.com>

	[BZ #379]
	* allocatestack.c (allocate_stack): Remove [__ASSUME_CLONE_STOPPED]
	code, since we don't try to use the broken CLONE_STOPPED any more.
	* pthread_create.c (start_thread): Likewise.

2004-09-15  Richard Henderson  <rth@redhat.com>

	* sysdeps/unix/sysv/linux/alpha/vfork.S: Use libc_hidden_def.

2004-09-01  David Mosberger  <davidm@hpl.hp.com>

	* sysdeps/unix/sysv/linux/ia64/jmpbuf-unwind.h
	(__libc_unwind_longjmp): Delete macro and declare as function.
	* sysdeps/unix/sysv/linux/ia64/Makefile (sysdep_routines): Mention
	__ia64_longjmp, sigstack_longjmp, and __sigstack_longjmp for
	nptl directory.
	* sysdeps/unix/sysv/linux/ia64/__ia64_longjmp.S: New file.
	* sysdeps/unix/sysv/linux/ia64/__sigstack_longjmp.c: New file.
	* sysdeps/unix/sysv/linux/ia64/unwind_longjmp.c: New file.

2004-09-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h: Make rwlock prototypes available also
	for __USE_XOPEN2K.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h: Define rwlock
	types also for __USE_XOPEN2K.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.
	[BZ #320]

2004-09-08  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h
	(PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP): Make safe for C++.
	(PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP): Likewise.
	(PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP): Likewise.
	(PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP): Likewise.
	[BZ #375]

2004-09-07  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h: Allow
	PSEUDO to be used with . prefix.

	* sysdeps/unix/sysv/linux/alpha/pthread_once.c (__pthread_once):
	Use atomic_increment instead of atomic_exchange_and_add.
	* sysdeps/unix/sysv/linux/sparc/pthread_once.c (__pthread_once):
	Likewise.
	* sysdeps/unix/sysv/linux/ia64/pthread_once.c (__pthread_once):
	Likewise.
	* sysdeps/unix/sysv/linux/powerpc/pthread_once.c (__pthread_once):
	Likewise.

	* allocatestack.c (allocate_stack): Use atomic_increment_val
	instead of atomic_exchange_and_add.
	* sysdeps/unix/sysv/linux/sem_post.c (__new_sem_post): Likewise.
	* sysdeps/unix/sysv/linux/powerpc/sem_post.c (__new_sem_post):
	Likewise.
	* sysdeps/pthread/pthread_barrier_wait.c (pthread_barrier_wait):
	Likewise.

	* sysdeps/pthread/pthread.h (pthread_once): Remove __THROW since
	the initialization function might throw.

2005-09-05  Richard Henderson  <rth@redhat.com>

	* sysdeps/unix/sysv/linux/alpha/sysdep-cancel.h (SINGLE_THREAD_P):
	Move definition inside libpthread, libc, librt check.  Provide
	definition for rtld.

2004-09-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/alpha/jmpbuf-unwind.h: Define __libc_unwind_longjmp.
	* sysdeps/i386/jmpbuf-unwind.h: Likewise
	* sysdeps/powerpc/jmpbuf-unwind.h: Likewise.
	* sysdeps/s390/jmpbuf-unwind.h: Likewise.
	* sysdeps/sh/jmpbuf-unwind.h: Likewise.
	* sysdeps/sparc/sparc32/jmpbuf-unwind.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/jmpbuf-unwind.h: Likewise.
	* sysdeps/x86_64/jmpbuf-unwind.h: Likewise.
	* unwind.c: Use it.

	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_cond_t):
	Rename __data.__clock to __data.__nwaiters, make it unsigned int.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h (pthread_cond_t):
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S:
	Decrement __nwaiters.  If pthread_cond_destroy has been called and
	this is the last waiter, signal pthread_cond_destroy caller and
	avoid using the pthread_cond_t structure after unlock.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	Read clock type from the least significant bits of __nwaiters instead
	of __clock.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/internaltypes.h: Define COND_CLOCK_BITS.

2004-08-31  Jakub Jelinek  <jakub@redhat.com>

	[BZ #342]
	* Makefile (tests): Add tst-cond20 and tst-cond21.
	* tst-cond20.c: New test.
	* tst-cond21.c: New test.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h
	(pthread_cond_t): Rename __data.__clock to __data.__nwaiters, make
	it unsigned int.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h (pthread_cond_t):
	Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h
	(pthread_cond_t): Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h (pthread_cond_t):
	Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h (pthread_cond_t):
	Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h (pthread_cond_t):
	Likewise.
	* sysdeps/unix/sysv/linux/lowlevelcond.sym (cond_clock): Remove.
	(cond_nwaiters): New.
	(clock_bits): New.
	* pthread_cond_destroy.c (__pthread_cond_destroy): Return EBUSY
	if there are waiters not signalled yet.
	Wait until all already signalled waiters wake up.
	* sysdeps/pthread/pthread_cond_wait.c (__condvar_cleanup): Decrement
	__nwaiters.  If pthread_cond_destroy has been called and this is the
	last waiter, signal pthread_cond_destroy caller and avoid using
	the pthread_cond_t structure after unlock.
	(__pthread_cond_wait): Increment __nwaiters in the beginning,
	decrement it when leaving.  If pthread_cond_destroy has been called
	and this is the last waiter, signal pthread_cond_destroy caller.
	* sysdeps/pthread/pthread_cond_timedwait.c (__pthread_cond_timedwait):
	Likewise.  Read clock type from the least significant bits of
	__nwaiters instead of __clock.
	* pthread_condattr_setclock.c (pthread_condattr_setclock): Check
	whether clock ID can be encoded in COND_CLOCK_BITS bits.
	* pthread_condattr_getclock.c (pthread_condattr_getclock): Decode
	clock type just from the last COND_CLOCK_BITS bits of value.
	* pthread_cond_init.c (__pthread_cond_init): Initialize __nwaiters
	instead of __clock, just from second bit of condattr's value.

2004-08-30  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Include
	bits/wordsize.h.  Make the header match i386 header when __WORDSIZE
	!= 64.
	* sysdeps/unix/sysv/linux/x86_64/bits/semaphore.h: Likewise.

2004-08-15  Roland McGrath  <roland@frob.com>

	* pthread_atfork.c: Update copyright terms including special exception
	for these trivial files, which are statically linked into executables
	that use dynamic linking for the significant library code.

2004-08-09  Jakub Jelinek  <jakub@redhat.com>

	* DESIGN-rwlock.txt: Add decreasing of nr_readers_queued to
	pthread_rwlock_rdlock.
	* sysdeps/pthread/pthread_rwlock_rdlock (__pthread_rwlock_rdlock):
	Decrease __nr_readers_queued after reacquiring lock.
	* sysdeps/pthread/pthread_rwlock_timedrdlock
	(pthread_rwlock_timedrdlock): Likewise.
	Reported by Bob Cook <bobcook47@hotmail.com>.

2004-08-11  Jakub Jelinek  <jakub@redhat.com>

	* tst-rwlock14.c (tf): Read main thread handle from *ARG
	before pthread_barrier_wait.

2004-08-07  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S:
	Remove unnecessary exception handling data.

2004-07-23  Jakub Jelinek  <jakub@redhat.com>

	[BZ #284]
	* sysdeps/pthread/pthread.h (pthread_getcpuclockid): Use __clockid_t
	instead of clockid_t.

2004-07-21  Roland McGrath  <roland@redhat.com>

	* Makefile ($(objpfx)multidir.mk): Use $(make-target-directory).

2004-07-19  Roland McGrath  <roland@redhat.com>

	* tst-cancel4.c (tf_waitid): Use WEXITED flag bit if available.

2004-07-02  Roland McGrath  <roland@redhat.com>

	* configure: Don't exit.

2004-07-14  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Check for invalid nanosecond in
	timeout value.

2004-07-07  Ulrich Drepper  <drepper@redhat.com>

	* Makefile: Add rules to build and run tst-fini1.
	* tst-fini1.c: New file.
	* tst-fini1mod.c: New file.

2004-07-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Define NO_CANCELLATION
	if no cancellation support is needed.
	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/sparc32/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/sparc64/sysdep-cancel.h: Likewise.

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h: Define __NR_futex
	only if not already defined.

2004-07-05  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_unlock): Use
	constraint "m" instead of "0" for futex.

	* shlib-versions: Add powerpc64-.*-linux.*.

2004-07-04  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedrdlock.S
	(pthread_rwlock_timedrdlock): Use cmpq instead of cmpl to check
	for valid tv_nsec.
	* tst-rwlock14.c (do_test): Test for invalid tv_nsec equal to
	1 billion and 64-bit tv_nsec which is valid when truncated to 32
	bits.

2004-06-29  Roland McGrath  <roland@redhat.com>

	* Banner: NPTL no longer has its own version number.
	* Makefile (nptl-version): Variable removed.
	* sysdeps/pthread/Makefile (CFLAGS-confstr.c): Set LIBPTHREAD_VERSION
	using $(version), the glibc version number.

2004-06-29  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/pthread_once.S (__pthread_once):
	Fix branch offset for a PLT entry.
	* sysdeps/unix/sysv/linux/sh/sem_post.S (__new_sem_post):
	Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_timedwait.S (sem_timedwait):
	Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_trywait.S (__new_sem_trywait):
	Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S (__new_sem_wait):
	Likewise.

2004-06-28  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/alpha/tcb-offsets.sym (MULTIPLE_THREADS_OFFSET): Define
	unconditionally.

2004-06-28  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread_rwlock_timedwrlock.c
	(pthread_rwlock_timedwrlock): Return EINVAL if tv_nsec is negative,
	instead of tv_sec.
	* sysdeps/pthread/pthread_rwlock_timedrdlock.c
	(pthread_rwlock_timedrdlock): Likewise.

2004-06-22  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (lll_futex_requeue):
	Set __r7 to val, not mutex.

2004-06-27  Ulrich Drepper  <drepper@redhat.com>

	* Makefile: Add rules to build tst-rwlock14.
	* tst-rwlock14.c: New file.

2004-06-24  Boris Hu  <boris.hu@intel.com>

	* sysdeps/pthread/pthread_rwlock_timedrdlock.c: Add timeout validation
	check.
	* sysdeps/pthread/pthread_rwlock_timedwrlock.c: Likewise.

2004-06-19  Andreas Jaeger  <aj@suse.de>

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Fix
	assembler in last patch.

2004-06-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Also check for negativ nanoseconds.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Check for invalid nanosecond in
	timeout value.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* tst-cond19.c: New file.
	* Makefile: Add rules to build and run tst-cond19.

2004-06-15  Steven Munroe  <sjmunroe@us.ibm.com>

	* tst-context1.c (GUARD_PATTERN): Defined.
	(tst_context_t): Define struct containing ucontext_t & guard words.
	(ctx): Declare as an array of tst_context_t.
	(fct): Verify uc_link & guard words are still valid.
	(tf): Initialize guard words in ctx.  Adjust ctx refs for new struct.

2004-06-13  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_signal.S
	(__pthread_cond_signal): Increment __futex at the same time as
	__wakeup_seq or __total_seq.  Pass address of __futex instead of
	address of low 32-bits of __wakeup_seq to futex syscall.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S
	(__pthread_cond_wait): Likewise.  Pass __futex value from before
	releasing internal lock to FUTEX_WAIT.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S
	(FUTEX_CMP_REQUEUE): Define.
	(__pthread_cond_broadcast): Set __futex to 2 * __total_seq.
	Use FUTEX_CMP_REQUEUE operation instead of FUTEX_REQUEUE.
	Pass __futex value from before the unlock and __futex address instead
	of address of low 32-bits of __wakeup_seq to futex syscall.
	Fallback to FUTEX_WAKE all on any errors.

2004-06-08  Jakub Jelinek  <jakub@redhat.com>

	* pthread_mutexattr_getpshared.c (pthread_mutex_getpshared): Fix
	comment typo.
	* pthread_mutexattr_gettype.c (pthread_mutexattr_gettype): Likewise.
	* pthread_mutexattr_init.c (__pthread_mutexattr_init): Likewise.
	* pthread_mutexattr_settype.c (__pthread_mutexattr_settype): Likewise.
	* pthread_mutexattr_setpshared.c (pthread_mutexattr_setpshared):
	Likewise.  Reported by Bob Cook <bobcook47@hotmail.com>.

2004-06-11  Martin Schwidefsky  <schwidefsky@de.ibm.com>

	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (lll_compare_and_swap):
	Add memory clobber to inline assembly.
	(__lll_mutex_trylock): Likewise.
	(__lll_mutex_cond_trylock): Likewise.

2004-06-07  Martin Schwidefsky  <schwidefsky@de.ibm.com>

	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (lll_futex_requeue):
	Pass val argument as 6th system call argument in %r7.

2004-05-21  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-cond16.
	* sysdeps/unix/sysv/linux/lowlevelcond.sym (cond_futex): Add.
	* pthread_cond_init.c (__pthread_cond_init): Clear __data.__futex.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/i386/pthread_cond_signal.S
	(__pthread_cond_signal): Increment __futex at the same time as
	__wakeup_seq or __total_seq.  Pass address of __futex instead of
	address of low 32-bits of __wakeup_seq to futex syscall.
	* sysdeps/unix/sysv/linux/i386/pthread_cond_wait.S
	(__pthread_cond_wait): Likewise.  Pass __futex value from before
	releasing internal lock to FUTEX_WAIT.
	* sysdeps/unix/sysv/linux/i386/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/i386/pthread_cond_broadcast.S
	(FUTEX_CMP_REQUEUE): Define.
	(__pthread_cond_broadcast): Set __futex to 2 * __total_seq.
	Use FUTEX_CMP_REQUEUE operation instead of FUTEX_REQUEUE.
	Pass __futex value from before the unlock and __futex address instead
	of address of low 32-bits of __wakeup_seq to futex syscall.
	Fallback to FUTEX_WAKE all on any errors.
	* sysdeps/unix/sysv/linux/alpha/lowlevellock.h (FUTEX_CMP_REQUEUE):
	Define.
	(lll_futex_requeue): Add val argument, use FUTEX_CMP_REQUEUE
	internally.  Return non-zero if error, zero if success.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (FUTEX_CMP_REQUEUE):
	Define.
	(lll_futex_requeue): Add val argument, return 1 unconditionally
	for the time being.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h (FUTEX_CMP_REQUEUE):
	Define.
	(lll_futex_requeue): Add val argument, use FUTEX_CMP_REQUEUE
	internally.  Return non-zero if error, zero if success.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h
	(pthread_cond_t): Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/sparc/lowlevellock.h (FUTEX_CMP_REQUEUE):
	Define.
	(lll_futex_requeue): Add val argument, use FUTEX_CMP_REQUEUE
	internally.  Return non-zero if error, zero if success.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (FUTEX_CMP_REQUEUE):
	Define.
	(lll_futex_requeue): Add val argument, use FUTEX_CMP_REQUEUE
	internally.  Return non-zero if error, zero if success.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h (pthread_cond_t):
	Add __data.__futex field, reshuffle __data.__clock.
	* sysdeps/pthread/pthread_cond_signal.c (__pthread_cond_signal):
	Increment __futex at the same time as __wakeup_seq or __total_seq.
	Pass address of __futex instead of address of low 32-bits of
	__wakeup_seq to futex syscall.
	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait): Likewise.
	Pass __futex value from before releasing internal lock
	to FUTEX_WAIT.
	* sysdeps/pthread/pthread_cond_timedwait.c (__pthread_cond_timedwait):
	Likewise.  Avoid unnecessary shadowing of variables.
	* sysdeps/pthread/pthread_cond_broadcast.c (__pthread_cond_broadcast):
	Set __futex to 2 * __total_seq.  Pass __futex value from before the
	unlock and __futex address instead of address of low 32-bits of
	__wakeup_seq to futex_requeue macro, adjust for new return value
	meaning.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S
	(__pthread_cond_signal): Increment __futex at the same time as
	__wakeup_seq or __total_seq.  Pass address of __futex instead of
	address of low 32-bits of __wakeup_seq to futex syscall.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S
	(__pthread_cond_wait): Likewise.  Pass __futex value from before
	releasing internal lock to FUTEX_WAIT.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S
	(FUTEX_CMP_REQUEUE): Define.
	(__pthread_cond_broadcast): Set __futex to 2 * __total_seq.
	Use FUTEX_CMP_REQUEUE operation instead of FUTEX_REQUEUE.
	Pass __futex value from before the unlock and __futex address instead
	of address of low 32-bits of __wakeup_seq to futex syscall.
	Fallback to FUTEX_WAKE all on any errors.

2004-06-03  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/lowlevellock.h (lll_mutex_lock):
	Add nop to align the end of critical section.
	(lll_mutex_cond_lock, lll_mutex_timedlock): Likewise.

2004-06-01  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h (pthread_cond_t):
	Add __broadcast_seq field.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S: Mark
	all waiters as woken with woken_seq and bump broadcast counter.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: Use new
	__broadcast_seq.  Increment __woken_seq correctly when cleanuped.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.
	Comment typo fixes.  Avoid returning -ETIMEDOUT.

2004-06-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__condvar_tw_cleanup): Fix access to saved broadcast_seq value.
	Reported by Kaz Kojima.

2004-05-25  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/aio_misc.h: New file.

2004-05-21  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait): Compare
	__broadcast_seq with bc_seq after acquiring internal lock instead of
	before it.

2004-05-18  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (.NOTPARALLEL): Only serialize make check/xcheck, not
	compilation.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Avoid returning -ETIMEDOUT.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h
	(pthread_cond_t): Add __data.__broadcast_seq field.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S
	(FRAME_SIZE): Define.
	(__pthread_cond_timedwait): Use it.  Store/check broadcast_seq.
	Comment typo fixes.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S (FRAME_SIZE):
	Define.
	(__pthread_cond_wait): Use it.  Store/check broadcast_seq.  Comment
	typo fixes.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S
	(__pthread_cond_broadcast): Increment broadcast_seq.  Comment typo
	fixes.

2004-05-18  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/lowlevelcond.sym: Add broadcast_seq entry.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h (pthread_cond_t):
	Add __broadcast_seq field.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S: Mark
	all waiters as woken with woken_seq and bump broadcast counter.
	* sysdeps/pthread/pthread_cond_broadcast.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Use new
	__broadcast_seq field.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/pthread/pthread_cond_wait.c: Likewise.
	* sysdeps/pthread/pthread_cond_timedwait.c: Likewise.
	* pthread_cond_init.c: Initialize __broadcast_seq field.
	* Makefile (tests): Add tst-cond17 and tst-cond18.
	Add .NOTPARALLEL goal.
	* tst-cond16.c: New file.  From Jakub.
	* tst-cond17.c: New file.  From Jakub.
	* tst-cond18.c: New file.  From Jakub.

2004-05-16  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S: Correct some
	unwind info.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S:
	Parametrize frame size.  Correct some unwind info.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.

2004-05-04  Jakub Jelinek  <jakub@redhat.com>

	* tst-stack3.c: Note testing functionality beyond POSIX.

2004-05-04  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h (USE___THREAD):
	Change conditional from ifdef to if.

2004-04-23  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h (SYSDEP_CANCEL_ERRNO,
	SYSDEP_CANCEL_ERROR): Define.
	(PSEUDO): Use it.

2004-05-01  Jakub Jelinek  <jakub@redhat.com>

	* Versions (libpthread): Remove __pthread_cleanup_upto@@GLIBC_PRIVATE.

2004-04-20  Jakub Jelinek  <jakub@redhat.com>

	* sem_unlink.c (sem_unlink): Change EPERM into EACCES.

2004-04-19  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/sem_timedwait.S: Add frame info.
	Use HIDDEN_JUMPTARGET to jump to __pthread_unwind.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S: Remove unneeded frame
	info.  Use HIDDEN_JUMPTARGET to jump to __pthread_unwind.

2004-04-19  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/timer_routines.c: Make sure helper
	thread has all signals blocked.

2004-04-18  Andreas Jaeger  <aj@suse.de>

	* sysdeps/unix/sysv/linux/x86_64/bits/semaphore.h
	(SEM_VALUE_MAX): Add missing brace.

2004-04-17  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/Makefile (tests): Add tst-mqueue8x
	in rt subdir.
	(CFLAGS-tst-mqueue8x.c): Add -fexceptions.
	* sysdeps/pthread/tst-mqueue8x.c: New test.
	* tst-cancel4.c: Update comment about message queues.

	* sysdeps/pthread/timer_gettime.c (timer_gettime): For expired timer
	return it_value { 0, 0 }.
	* sysdeps/pthread/timer_create.c (timer_create): Handle SIGEV_NONE
	like SIGEV_SIGNAL.
	* sysdeps/pthread/timer_routines.c (thread_expire_timer): Remove
	assertion for SIGEV_NONE.
	(thread_attr_compare): Compare all attributes, not just a partial
	subset.

2004-04-17  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/mq_notify.c: Include stdlib.h.

2004-04-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/alpha/bits/semaphore.h (SEM_VALUE_MAX):
	Just use a plain number.
	* sysdeps/unix/sysv/linux/i386/bits/semaphore.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/semaphore.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/semaphore.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/semaphore.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/semaphore.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/semaphore.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/semaphore.h: Likewise.

2004-04-16  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: Remove unneeded
	frame info.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.

2004-04-15  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/timer_routines.c: Include errno.h.
	(timer_helper_thread): Use inline rt_sigtimedwait syscall instead
	of calling sigwaitinfo.

2004-04-16  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (allocate_stack): Set reported_guardsize
	unconditionally.
	* pthread_getattr_np.c (pthread_getattr_np): Use
	reported_guardsize instead of guardsize.
	* descr.h (struct pthread): Add reported_guardsize field.

2004-04-13  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/mq_notify.c: Shut up GCC warning.

2004-04-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/mq-notify.c: New file.

2004-04-08  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/bits/local_lim.h (MQ_PRIO_MAX): Define.
	* sysdeps/unix/sysv/linux/alpha/bits/local_lim.h (MQ_PRIO_MAX): Define.
	* sysdeps/unix/sysv/linux/ia64/bits/local_lim.h (MQ_PRIO_MAX): Define.
	* sysdeps/unix/sysv/linux/sparc/bits/local_lim.h (MQ_PRIO_MAX): Define.
	* sysdeps/unix/sysv/linux/bits/posix_opt.h (_POSIX_MESSAGE_PASSING):
	Define.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h
	(_POSIX_MESSAGE_PASSING): Define.
	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h
	(_POSIX_MESSAGE_PASSING): Define.
	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h
	(_POSIX_MESSAGE_PASSING): Define.

2004-04-04  Ulrich Drepper  <drepper@redhat.com>

	* tst-context1.c (fct): Check whether correct stack is used.

2004-04-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h: Never use
	matching constraints for asm mem parameters.

	* tst-clock2.c (tf): Don't define unless needed.

2004-03-30  H.J. Lu  <hongjiu.lu@intel.com>

	* Makefile (link-libc-static): Use $(static-gnulib) instead of
	$(gnulib).

2004-03-30  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread-functions.h: Add ptr__nptl_deallocate_tsd.
	* init.c (pthread_functions): Add ptr__nptl_deallocate_tsd.
	* pthreadP.h: Declare __nptl_deallocate_tsd.
	* pthread_create.c (deallocate_tsd): Remove to __nptl_deallocate_tsd.
	Adjust caller.

	* Makefile (tests): Add tst-tsd5.
	* tst-tsd5.c: New file.

2004-03-29  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/pthread_attr_setaffinity.c
	(__pthread_attr_setaffinity_old): Prepend GLIBC_ to version names
	is SHLIB_COMPAT check.
	* sysdeps/unix/sysv/linux/pthread_attr_getaffinity.c
	(__pthread_attr_getaffinity_old): Likewise.
	* sysdeps/unix/sysv/linux/pthread_getaffinity.c
	(__pthread_getaffinity_old): Likewise.
	* sysdeps/unix/sysv/linux/pthread_setaffinity.c
	(__pthread_setaffinity_old): Likewise.

2004-03-26  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (_make_stacks_executable): Call
	_dl_make_stack_executable first.

2004-03-24  Roland McGrath  <roland@redhat.com>

	* sysdeps/i386/pthread_spin_lock.c (pthread_spin_lock): Use "m"
	constraint instead of "0".

2004-03-24  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h
	(lll_mutex_cond_trylock): Define as wrapper around __lll_cond_trylock.

	* sysdeps/unix/sysv/linux/getpid.c (really_getpid): Reorganize
	code to avoid warning.

2004-03-24  Andreas Jaeger  <aj@suse.de>

	* sysdeps/unix/sysv/linux/pthread_attr_setaffinity.c
	(__pthread_attr_setaffinity_old): Remove const.

2004-03-23  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/smp.h: New file.
	* sysdeps/unix/sysv/linux/sh/smp.h: New file.
	* init.c: Define __is_smp.
	(__pthread_initialize_minimal_internal): Call is_smp_system to
	initialize __is_smp.
	* pthreadP.h: Declare __is_smp.
	Define MAX_ADAPTIVE_COUNT is necessary.
	* pthread_mutex_init.c: Add comment regarding __spins field.
	* pthread_mutex_lock.c: Implement adaptive mutex type.
	* pthread_mutex_timedlock.c: Likewise.
	* sysdeps/unix/sysv/linux/pthread_mutex_cond_lock.c: Likewise.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h (pthread_mutex_t):
	Add __spins field.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h: Define
	lll_mutex_cond_trylock.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Likewise.
	Define BUSY_WAIT_NOP.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.

	* tst-mutex5.c: Add support for testing adaptive mutexes.
	* tst-mutex7.c: Likewise.
	* tst-mutex5a.c: New file.
	* tst-mutex7a.c: New file.
	* Makefile (tests): Add tst-mutex5a and tst-mutex7a.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S
	(__lll_mutex_timedlock_wait): Preserve r8 and r9 since the
	vgettimeofday call might destroy the content.

	* sysdeps/ia64/pthread_spin_lock.c (pthread_spin_lock): Use hint
	@pause in the loop.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h (lll_mutex_trylock):
	No need to restrict type of ret.  Make it int.  Add comment.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h (lll_mutex_trylock):
	Remove unnecessary setne instruction.

2004-03-22  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/pthread_getaffinity.c
	(__pthread_getaffinity_new): Use INT_MAX instead of UINT_MAX.
	* pthread_getattr_np.c (pthread_getattr_np): Double size every cycle.
	If realloc fails, break out of the loop.

2004-03-20  Andreas Jaeger  <aj@suse.de>

	* sysdeps/unix/sysv/linux/pthread_setaffinity.c
	(__pthread_setaffinity_old): Fix interface.
	* sysdeps/unix/sysv/linux/pthread_getaffinity.c
	(__pthread_getaffinity_old): Likewise.

	* sysdeps/unix/sysv/linux/pthread_setaffinity.c
	(__pthread_setaffinity_new): Remove duplicate declaration.

2004-03-20  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h (CENABLE): Save
	the return value to a safe register.
	(CDISABLE): Set the function argument correctly.

2004-03-17  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/lowlevel-atomic.h (XCHG): Define.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.S (__lll_mutex_lock_wait):
	Rewrite so that only one locked memory operation per round is needed.
	* sysdeps/unix/sysv/linux/sh/pthread_barrier_wait.S
	(pthread_barrier_wait): After wakeup, release lock only when the
	last thread stopped using the barrier object.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S
	(__pthread_cond_wait): Don't store mutex address if the current
	value is ~0l.  Add correct cleanup support and unwind info.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S
	(__pthread_cond_broadcast): Don't use requeue for pshared condvars.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_signal.S: Update comment.
	* sysdeps/unix/sysv/linux/sh/pthread_once.S (__pthread_once):
	Add correct cleanup support and unwind info.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S (__new_sem_wait): Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h: Add unwind
	information for syscall wrappers.

2004-03-18  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/internaltypes.h (struct pthread_attr): Add
	cpusetsize field, remove next.
	* sysdeps/pthread/pthread.h (pthread_getaffinity_np): Add new second
	parameter for size of the CPU set.
	(pthread_setaffinity_np): Likewise.
	(pthread_attr_getaffinity_np): Likewise.
	(pthread_attr_setaffinity_np): Likewise.
	* sysdeps/unix/sysv/linux/pthread_attr_getaffinity.c: Implement
	interface change, keep compatibility code.
	* sysdeps/unix/sysv/linux/pthread_attr_setaffinity.c: Likewise.
	* sysdeps/unix/sysv/linux/pthread_getaffinity.c: Likewise.
	* sysdeps/unix/sysv/linux/pthread_setaffinity.c: Likewise.
	* pthreadP.h: Remove hidden_proto for pthread_getaffinity_np.  Declare
	__pthread_getaffinity_np.
	* Versions: Add version for changed interfaces.
	* tst-attr3.c: Adjust test for interface change.
	* pthread_getattr_np.c: Query the kernel about the affinity mask with
	increasing buffer sizes.
	* pthread_attr_destroy.c: Remove unused list handling.
	* pthread_attr_init.c: Likewise.

2004-03-17  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/timer_create.c (timer_create): Pass missing
	first argument to clock_getres so we ever enable kernel timers.

2004-03-15  Ulrich Weigand  <uweigand@de.ibm.com>

	* init.c (nptl_version): Add __attribute_used__ to nptl_version.

2004-03-12  Richard Henderson  <rth@redhat.com>

	* sysdeps/unix/sysv/linux/alpha/sysdep-cancel.h: Propagate
	oldvalue from CENABLE to CDISABLE.

2004-03-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/bits/local_lim.h: Define HOST_NAME_MAX.
	* sysdeps/unix/sysv/linux/alpha/bits/local_lim.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/local_lim.h: Likewise.
	* sysdeps/unix/sysv/linux/sparc/bits/local_lim.h: Likewise.

2004-03-11  Richard Henderson  <rth@redhat.com>

	* sysdeps/alpha/tcb-offsets.sym (PID_OFFSET): New.
	* sysdeps/unix/sysv/linux/alpha/pt-vfork.S: Save/restore PID.
	* sysdeps/unix/sysv/linux/alpha/vfork.S: New file.

2004-03-11  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/s390-64/vfork.S (__vfork): Use jgnl
	instead of jnl instruction to jump to SYSCALL_ERROR_LABEL.
	* sysdeps/unix/sysv/linux/s390/s390-64/pt-vfork.S (__vfork): Likewise.

2004-03-11  Jakub Jelinek  <jakub@redhat.com>

	* forward.c (__pthread_cond_broadcast_2_0,
	__pthread_cond_destroy_2_0, __pthread_cond_init_2_0,
	__pthread_cond_signal_2_0, __pthread_cond_wait_2_0,
	__pthread_cond_timedwait_2_0): Use return 0 as defaction instead of 0.

2004-03-11  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/tcb-offsets.sym: Add PID.
	* sysdeps/unix/sysv/linux/sh/pt-vfork.S: Properly handle PID cache.
	* sysdeps/unix/sysv/linux/sh/vfork.S: New file.

2004-03-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc32/vfork.S: No need to
	include <sysdep-cancel.h>, vfork is no cancellation point.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/vfork.S: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/pt-vfork.S: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/pt-vfork.S: Likewise.

2004-03-10  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/s390-32/vfork.S (__vfork): Add
	libc_hidden_def.
	* sysdeps/unix/sysv/linux/s390/s390-64/vfork.S (__vfork): Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/vfork.S (__vfork):
	Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/vfork.S (__vfork):
	Likewise.
	* sysdeps/unix/sysv/linux/sparc/sparc32/vfork.S (__vfork): Likewise.
	* sysdeps/unix/sysv/linux/sparc/sparc64/vfork.S (__vfork): Likewise.
	* sysdeps/unix/sysv/linux/ia64/pt-vfork.S: Include tcb-offsets.h.
	* sysdeps/unix/sysv/linux/ia64/vfork.S (__vfork): Use DO_CALL instead
	of DO_CALL_VIA_BREAK.  Work around a gas problem.

	* sysdeps/unix/sysv/linux/powerpc/pt-vfork.S: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/vfork.S: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/vfork.S: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/pt-vfork.S: New file.
	* sysdeps/powerpc/tcb-offsets.sym: Add PID.

	* sysdeps/unix/sysv/linux/ia64/pt-vfork.S (__vfork): Don't use
	a local register for saving old PID.  Negate PID in parent upon exit.

	* sysdeps/unix/sysv/linux/s390/s390-32/pt-vfork.S: Include
	tcb-offsets.h.
	(__vfork): Negate PID if non-zero and set to INT_MIN if zero
	before syscall, set to the old value in the parent afterwards.
	* sysdeps/unix/sysv/linux/s390/s390-32/vfork.S: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/pt-vfork.S: Include
	tcb-offsets.h.
	(__vfork): Negate PID if non-zero and set to INT_MIN if zero
	before syscall, set to the old value in the parent afterwards.
	* sysdeps/unix/sysv/linux/s390/s390-64/vfork.S: New file.
	* sysdeps/s390/tcb-offsets.sym: Add PID.

	* sysdeps/unix/sysv/linux/sparc/pt-vfork.S: Remove.
	* sysdeps/unix/sysv/linux/sparc/sparc32/vfork.S: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc32/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/vfork.S: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/pt-vfork.S: New file.
	* sysdeps/sparc/tcb-offsets.sym: Add PID.

2004-03-10  Andreas Schwab  <schwab@suse.de>

	* sysdeps/ia64/tcb-offsets.sym: Add PID.
	* sysdeps/unix/sysv/linux/ia64/vfork.S: New file.
	* sysdeps/unix/sysv/linux/ia64/pt-vfork.S: Properly handle PID cache.

2004-03-09  Jakub Jelinek  <jakub@redhat.com>

	* tst-cancel20.c (do_one_test): Clear in_sh_body first.
	* tst-cancel21.c (do_one_test): Likewise.
	Reported by Gordon Jin <gordon.jin@intel.com>.

2004-02-09  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/vfork.S (SAVE_PID): Negate PID
	if non-zero and set to INT_MIN if zero.
	* sysdeps/unix/sysv/linux/x86_64/vfork.S (SAVE_PID): Likewise.
	* sysdeps/unix/sysv/linux/i386/pt-vfork.S: Include tcb-offsets.h.
	(SAVE_PID, RESTORE_PID): Define.
	(__vfork): Use it.
	* sysdeps/unix/sysv/linux/x86_64/pt-vfork.S: Include tcb-offsets.h.
	Use relative path to avoid including NPTL i386/vfork.S.
	(SAVE_PID, RESTORE_PID): Define.
	* sysdeps/unix/sysv/linux/raise.c: Include limits.h.
	(raise): Handle THREAD_SELF->pid INT_MIN the same as 0.
	* Makefile (tests): Add tst-vfork1, tst-vfork2, tst-vfork1x and
	tst-vfork2x.
	(tests-reverse): Add tst-vfork1x and tst-vfork2x.
	* tst-vfork1.c: New test.
	* tst-vfork2.c: New test.
	* tst-vfork1x.c: New test.
	* tst-vfork2x.c: New test.

2004-03-08  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/tcb-offsets.sym: Add PID.
	* sysdeps/x86_64/tcb-offsets.sym: Likewise.
	* sysdeps/unix/sysv/linux/i386/vfork.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/vfork.S: New file.

2004-03-08  Steven Munroe  <sjmunroe@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/Versions: Remove leading tabs.

2004-03-08  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/s390/tls.h (INIT_SYSINFO): _dl_sysinfo is now in
	_rtld_global_ro.

2004-03-07  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/ia64/tls.h (INIT_SYSINFO): _dl_sysinfo is now in
	_rtld_global_ro.

	* tst-once4.c: Remove unnecessary macro definition.

	* tst-mutex7.c (do_test): Limit thread stack size.
	* tst-once2.c (do_test): Likewise.
	* tst-tls3.c (do_test): Likewise.
	* tst-tls1.c (do_test): Likewise.
	* tst-signal3.c (do_test): Likewise.
	* tst-kill6.c (do_test): Likewise.
	* tst-key4.c (do_test): Likewise.
	* tst-join4.c (do_test): Likewise.
	* tst-fork1.c (do_test): Likewise.
	* tst-context1.c (do_test): Likewise.
	* tst-cond2.c (do_test): Likewise.
	* tst-cond10.c (do_test): Likewise.
	* tst-clock2.c (do_test): Likewise.
	* tst-cancel10.c (do_test): Likewise.
	* tst-basic2.c (do_test): Likewise.
	* tst-barrier4.c (do_test): Likewise.

2004-03-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/tls.h: Use GLRO instead of GL where appropriate.

2004-03-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Optimize wakeup test.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S
	(__pthread_cond_wait): Likewise.
	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait): Likewise.
	* sysdeps/pthread/pthread_cond_timedwait.c (__pthread_cond_timedwait):
	Likewise.

2004-02-29  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(__lll_mutex_lock_wait): Optimize a bit more.  Just one copy of
	the atomic instruction needed.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S
	(__lll_mutex_lock_wait): Likewise.

2004-02-28  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cond14 and tst-cond15.
	* tst-cond14.c: New file.
	* tst-cond15.c: New file.

2004-02-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/createthread.c (create_thread): Remove use of
	CLONE_STOPPED.  We cannot use SIGCONT which means CLONE_STOPPED
	needs to be implemented differently to be useful.

2004-02-26  Ulrich Drepper  <drepper@redhat.com>

	* pthread_attr_setschedparam.c: Don't test priority against limits
	here.  Set ATTR_FLAG_SCHED_SET flag.
	* pthread_attr_setschedpolicy.c: Set ATTR_FLAG_POLICY_SET flag.
	* pthread_create.c (__pthread_create_2_1): Copy scheduling attributes
	from parent thread to child.  If attribute is used and scheduling
	parameters are not inherited, copy parameters from attribute or
	compute them.  Check priority value.
	* pthread_getschedparam.c: If the parameters aren't known yet get
	them from the kernel.
	* pthread_setschedparam.c: Set ATTR_FLAG_SCHED_SET and
	ATTR_FLAG_POLICY_SET flag for thread.
	* sysdeps/unix/sysv/linux/internaltypes.h: Define ATTR_FLAG_SCHED_SET
	and ATTR_FLAG_POLICY_SET.

	* sysdeps/pthread/createthread.c: Use tgkill if possible.

	* pthread_attr_getstackaddr.c (__pthread_attr_getstackaddr): Don't
	fail if stack address hasn't been set.  Just return 0.

2004-02-25  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests-nolibpthread): Add tst-unload.  Don't link with
	libpthread for the files in this list.
	(CFLAGS-tst-unload): Removed.
	* tst-unload.c (do_test): Don't use complete path for
	LIBPHREAD_SO.

	* Makefile: Define sonames for tst-tls5mod, tst-_res1mod1, and
	tst-_res1mod2.

2004-02-22  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(__lll_mutex_lock_wait): Rewrite so that only one locked memory
	operation per round is needed.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S
	(__lll_mutex_lock_wait): Likewise.

2004-02-20  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel9.c (cleanup): Don't print to stderr.

2004-02-20  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/jmpbuf-unwind.h (_JMPBUF_UNWINDS_ADJ): Fix variable name.

2004-02-20  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/sparc/sparc32/sysdep-cancel.h
	(__syscall_error_handler2): Call CDISABLE.
	* sysdeps/unix/sysv/linux/sparc/sparc64/sysdep-cancel.h
	(__syscall_error_handler2): Call CDISABLE.

	* sysdeps/pthread/pthread_barrier_wait.c (pthread_barrier_wait):
	Release lock before the loop, don't reacquire it.

	* sysdeps/unix/sysv/linux/ia64/dl-sysdep.h (DL_ARGV_NOT_RELRO): Define.

2004-02-19  Andreas Schwab  <schwab@suse.de>

	* sysdeps/pthread/pthread_barrier_wait.c (pthread_barrier_wait):
	Fix last change.

2004-02-18  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S
	(pthread_barrier_wait): After wakeup, release lock only when the
	last thread stopped using the barrier object.
	* sysdeps/unix/sysv/linux/x86_64/pthread_barrier_wait.S
	(pthread_barrier_wait): Likewise.
	* sysdeps/pthread/pthread_barrier_wait.c (pthread_barrier_wait):
	Likewise.
	* Makefile (tests): Add tst-barrier4.
	* tst-barrier4.c: New file.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Perform timeout test while holding
	internal lock to prevent wakeup race.
	Patch by Dinakar Guniguntala <dgunigun@in.ibm.com>.
	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Likewise.

2004-02-18  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_unlock.S
	(__pthread_rwlock_unlock): Access WRITER as 32-bit value.
	* Makefile (tests): Add tst-rwlock13.
	* tst-rwlock13.c: New test.

2004-02-16  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__condvar_tw_cleanup): Little optimization.
	Patch by Dinakar Guniguntala <dgunigun@in.ibm.com>.

2004-02-16  Steven Munroe  <sjmunroe@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/pt-longjmp.c: Replace libc with
	libpthread as "lib" parameter to SHLIB_COMPAT.
	(__novmx_siglongjmp): Fix typo in function name.
	(__novmx_longjmp): Fix typo in function name.

2004-02-13  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait): Add a
	__builtin_expect.

	* sysdeps/generic/pt-longjmp.c: Moved to...
	* sysdeps/pthread/pt-longjmp.c: ...here.  New file.

2004-01-29  Steven Munroe  <sjmunroe@us.ibm.com>

	* Makefile (libpthread-routines): Add pt-cleanup.
	* pt-longjmp.c: Removed.
	* pt-cleanup.c: Copied __pthread_cleanup_upto to here. New file.
	* sysdeps/generic/pt-longjmp.c: Copied longjmp to here. New file.
	* sysdeps/unix/sysv/linux/powerpc/Versions: New file.
	Version longjmp, siglongjmp for GLIBC_2.3.4.
	* sysdeps/unix/sysv/linux/powerpc/pt-longjmp.c: New File.

2004-02-13  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Optimize.  Drop internal lock earlier.
	Reuse code.  Add __builtin_expects.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Get internal lock in case timeout has
	passed before the futex syscall.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.

2004-01-20  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c: Pretty printing.

	* sysdeps/pthread/createthread.c (create_thread): Don't add
	CLONE_DETACHED bit if it is not necessary.

2004-01-16  Ulrich Drepper  <drepper@redhat.com>

	* pthread_getattr_np.c: Include ldsodefs.h.

2004-01-16  Richard Henderson  <rth@redhat.com>

	* allocatestack.c: Don't declare __libc_stack_end.
	* init.c (__pthread_initialize_minimal_internal): Likewise.
	* pthread_getattr_np.c (pthread_getattr_np): Likewise.

2004-01-15  Richard Henderson  <rth@redhat.com>

	* sysdeps/alpha/tls.h (tcbhead_t): Add private.
	(TLS_INIT_TCB_SIZE, TLS_INIT_TCB_ALIGN, TLS_TCB_SIZE,
	TLS_PRE_TCB_SIZE, TLS_TCB_ALIGN, INSTALL_DTV, INSTALL_NEW_DTV,
	GET_DTV, THREAD_DTV, THREAD_SELF, DB_THREAD_SELF): Match ia64.
	(TLS_TCB_OFFSET, THREAD_ID, NO_TLS_OFFSET): Remove.
	(THREAD_GETMEM, THREAD_GETMEM_NC): Simplify.
	(THREAD_SETMEM, THREAD_SETMEM_NC): Likewise.
	* sysdeps/unix/sysv/linux/alpha/createthread.c (TLS_VALUE): Match ia64.

2004-01-14  Ulrich Drepper  <drepper@redhat.com>

	* init.c (pthread_functions): Make array const.

2004-01-13  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (__make_stacks_executable): Change interface.
	Check parameters.  Pass parameter on to libc counterpart.
	* pthreadP.h: Change declaration.

2004-01-13  Richard Henderson  <rth@redhat.com>

	* pthread_attr_setstack.c (__old_pthread_attr_setstack): Use
	prototype form.
	* pthread_attr_setstacksize.c (__old_pthread_attr_setstacksize):
	Likewise.

	* sysdeps/alpha/Makefile: New file.
	* sysdeps/alpha/tcb-offsets.sym: New file.
	* sysdeps/unix/sysv/linux/alpha/sysdep-cancel.h (SINGLE_THREAD_P):
	Use MULTIPLE_THREADS_OFFSET to implement !libpthread !libc version.

	* sysdeps/unix/sysv/linux/alpha/lowlevellock.h: Rewrite based
	on powerpc version.

2004-01-08  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-backtrace1.
	* tst-backtrace1.c: New test.

2003-12-11  Ulrich Weigand  <uweigand@de.ibm.com>

	* sysdeps/alpha/tls.h (DB_THREAD_SELF): Pass bit size of thread
	register as second parameter to the REGISTER macro.
	* sysdeps/ia64/tls.h (DB_THREAD_SELF): Likewise.
	* sysdeps/powerpc/tls.h (DB_THREAD_SELF): Likewise.
	* sysdeps/sh/tls.h (DB_THREAD_SELF): Likewise.
	* sysdeps/sparc/tls.h (DB_THREAD_SELF): Likewise.
	* sysdeps/s390/tls.h (DB_THREAD_SELF): Pass __WORDSIZE as bit size
	of thread register as second parameter to REGISTER macro in 64 case.

2004-01-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/Makefile (CFLAGS-getpid.c): Removed.
	(CFLAGS-getpid.o): Defined.
	(CFLAGS-getpid.os): Defined.

2003-12-31  Ulrich Drepper  <drepper@redhat.com>

	* pthread_getattr_np.c (pthread_getattr_np): Make sure stack info
	returned for main thread does not overlap with any other VMA.
	Patch by Jakub Jelinek.

2003-12-29  Jakub Jelinek  <jakub@redhat.com>

	* tst-raise1.c: Include stdio.h.

2003-12-23  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/raise.c (raise): Protect pid = selftid
	setting with __ASSUME_TGKILL || defined __NR_tgkill.
	If pid is 0, set it to selftid.
	* sysdeps/unix/sysv/linux/getpid.c (really_getpid): Make inline.
	Don't set self->pid but self->tid.  If self->pid == 0 and self->tid
	!= 0, return self->tid without doing a syscall.
	* descr.h (struct pthread): Move pid field after tid.

	* Makefile (tests): Add tst-raise1.
	* tst-raise1.c: New file.

2003-12-23  Roland McGrath  <roland@redhat.com>

	* tst-oddstacklimit.c: New file.
	* Makefile (tests): Add it.
	(tst-oddstacklimit-ENV): New variable.

	* init.c (__pthread_initialize_minimal_internal): Round stack rlimit
	value up to page size for __default_stacksize.

2003-12-21  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-eintr5.
	* tst-eintr5.c: New file.

	* eintr.c (eintr_source): Prevent sending signal to self.

	* tst-eintr2.c (tf1): Improve error message.

2003-12-20  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/Makefile (CFLAGS-getpid.c): Define.
	* sysdeps/unix/sysv/linux/getpid.c: New file.
	* pthread_cancel.c: Add comment explaining use of PID field.
	* sysdeps/unix/sysv/linux/pthread_kill.c: Likewise.
	* pthread_getattr_np.c: Use abs() when comparing PID and TID fields.
	* sysdeps/unix/sysv/linux/fork.c: Negate PID field of parent
	temporarily to signal the field must not be relied on and updated
	by getpid().
	* sysdeps/unix/sysv/linux/pt-raise.c: Handle case where PID is
	temporarily negative.
	* sysdeps/unix/sysv/linux/raise.c: Likewise.

2003-12-19  Ulrich Drepper  <drepper@redhat.com>

	* eintr.c (setup_eintr): Add new parameter.  Pass to thread function.
	(eintr_source): If ARG != NULL, use pthread_kill.
	* tst-eintr1.c: Adjust for this change.
	* tst-eintr2.c: Likewise.
	* Makefile (tests): Add tst-eintr3 and tst-eintr4.
	* tst-eintr3.c: New file.
	* tst-eintr4.c: New file.

2003-12-19  Jakub Jelinek  <jakub@redhat.com>

	* libc-cancellation.c (__libc_enable_asynccancel): Don't cancel
	if CANCELSTATE_BITMASK is set.
	* sysdeps/pthread/librt-cancellation.c (__librt_enable_asynccancel):
	Likewise.

	* Makefile (tests): Add tst-cancel22 and tst-cancel23.
	(tests-reverse): Add tst-cancel23.
	* tst-cancel22.c: New test.
	* tst-cancel23.c: New test.

2003-12-18  Ulrich Drepper  <drepper@redhat.com>

	* tst-eintr1.c: Better error messages.

	* Makefile (tests): Add tst-eintr2.
	* tst-eintr2.c: New file.

2003-12-18  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-cancel21 and tst-cancelx21.
	(CFLAGS-tst-cancelx21.c): Set.
	* tst-cancel21.c: New test.
	* tst-cancelx21.c: New test.

	* unwind.c (FRAME_LEFT): Add adj argument.  Subtract it from each
	comparison operand.
	(unwind_stop): Use _JMPBUF_CFA_UNWINDS_ADJ macro instead of
	_JMPBUF_CFA_UNWINDS.  Adjust FRAME_LEFT invocations.
	* pt-longjmp.c: Include jmpbuf-unwind.h.
	(__pthread_cleanup_upto): Use _JMPBUF_UNWINDS_ADJ macro instead of
	_JMPBUF_UNWINDS.  Adjust compared pointers.
	* init.c (__pthread_initialize_minimal_internal): Initialize
	pd->stackblock_size.
	* sysdeps/pthread/jmpbuf-unwind.h: Removed.
	* sysdeps/alpha/jmpbuf-unwind.h: New file.
	* sysdeps/i386/jmpbuf-unwind.h: New file.
	* sysdeps/powerpc/jmpbuf-unwind.h: New file.
	* sysdeps/s390/jmpbuf-unwind.h: New file.
	* sysdeps/sh/jmpbuf-unwind.h: New file.
	* sysdeps/sparc/sparc32/jmpbuf-unwind.h: New file.
	* sysdeps/x86_64/jmpbuf-unwind.h: New file.
	* sysdeps/unix/sysv/linux/ia64/jmpbuf-unwind.h: Include stdint.h.
	(_JMPBUF_CFA_UNWINDS): Remove.
	(_JMPBUF_CFA_UNWINDS_ADJ, _JMPBUF_UNWINDS_ADJ): Define.

2003-12-12  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-cancel20 and tst-cancelx20.
	(CFLAGS-tst-cancelx20.c): Set.
	* tst-cancel20.c: New test.
	* tst-cancelx20.c: New test.

2003-12-17  Ulrich Drepper  <drepper@redhat.com>

	* init.c (__pthread_initialize_minimal_internal): Don't treat
	architectures with separate register stack special here when
	computing default stack size.

2003-12-17  Roland McGrath  <roland@redhat.com>

	* Makefile (tst-cancelx7-ARGS): New variable.
	Reportd by Greg Schafer <gschafer@zip.com.au>.

2003-12-17  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-stack3.  Depend on $(objpfx)tst-stack3-mem.
	(generated): Add tst-stack3.mtrace and tst-stack3-mem.
	(tst-stack3-ENV): Set.
	($(objpfx)tst-stack3-mem): New.
	* tst-stack3.c: New test.

2003-12-10  David Mosberger  <davidm@hpl.hp.com>

	* sysdeps/unix/sysv/linux/ia64/pt-initfini.c (_init_EPILOG_BEGINS):
	Add unwind directives.  Drop unused .regstk directive.
	(_fini_EPILOG_BEGINS): Add unwind directives.

2003-12-11  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h (lll_futex_wait):
	Assume parameter is a pointer.
	(lll_futex_wake): Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_futex_wait):
	Likewise.
	(lll_futex_wake): Likewise.
	Reported by Boris Hu.
	* sysdeps/unix/sysv/linux/unregister-atfork.c
	(__unregister_atfork): Pass pointer to refcntr to lll_futex_wait.

	* sysdeps/unix/sysv/linux/sem_wait.c (__new_sem_wait): Simplify a bit.

2003-12-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/bits/libc-lock.h (__rtld_lock_initialize): Define.
	* sysdeps/unix/sysv/linux/fork.c (__libc_fork): Call
	__rtld_lock_initialize for ld.so lock.
	Patch in part by Adam Li <adam.li@intel.com>.

2003-12-02  David Mosberger  <davidm@hpl.hp.com>

	* Makefile (link-libc-static): Remove -lgcc_eh---it's already mentioned
	in $(gnulib).  Also, remove stale comment.

2003-11-12  David Mosberger  <davidm@hpl.hp.com>

	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h (PSEUDO): Take
	advantage of new syscall stub and optimize accordingly.

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (__NR_futex): Rename
	from SYS_futex, to match expectations of
	sysdep.h:DO_INLINE_SYSCALL.
	(lll_futex_clobbers): Remove.
	(lll_futex_timed_wait): Rewrite in terms of DO_INLINE_SYSCALL.
	(lll_futex_wake): Likewise.
	(lll_futex_requeue): Likewise.
	(__lll_mutex_trylock): Rewrite to a macro, so we can include this
	file before DO_INLINE_SYSCALL is defined (proposed by Jakub
	Jelinek).
	(__lll_mutex_lock): Likewise.
	(__lll_mutex_cond_lock): Likewise.
	(__lll_mutex_timed_lock): Likewise.
	(__lll_mutex_unlock): Likewise.
	(__lll_mutex_unlock_force): Likewise.

	* sysdeps/ia64/tls.h: Move declaration of __thread_self up so it
	comes before the include of <sysdep.h>.
	(THREAD_SELF_SYSINFO): New macro.
	(THREAD_SYSINFO): Likewise.
	(INIT_SYSINFO): New macro.
	(TLS_INIT_TP): Call INIT_SYSINFO.

	* sysdeps/ia64/tcb-offsets.sym: Add SYSINFO_OFFSET.

	* sysdeps/pthread/createthread.c (create_thread): Use
	THREAD_SELF_SYSINFO and THREAD_SYSINFO instead of open code.
	* allocatestack.c (allocate_stack): Use THREAD_SYSINFO and
	THREAD_SELF_SYSINFO instead of open code.
	* sysdeps/i386/tls.h (THREAD_SELF_SYSINFO): New macro.
	(THREAD_SYSINFO): Likewise.

	* sysdeps/unix/sysv/linux/ia64/dl-sysdep.h: New file.

	* sysdeps/unix/sysv/linux/ia64/pt-vfork.S: Work around gas problem.

2003-12-06  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/pt-initfini.c: Use .init_array
	instead of .init.  Patch by David Mosberger.

2003-11-30  Thorsten Kukuk  <kukuk@suse.de>

	* sysdeps/pthread/configure.in: Remove broken declaration in C
	cleanup handling check.

2003-11-30  Andreas Jaeger  <aj@suse.de>

	* Makefile (CFLAGS-pt-initfini.s): Add $(fno_unit_at_a_time).
	* sysdeps/unix/sysv/linux/x86_64/Makefile (CFLAGS-pt-initfini.s):
	Likewise.

2003-11-27  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/internaltypes.h (ATTR_FLAG_OLDATTR): Define.
	* pthread_attr_destroy.c: Include shlib-compat.h.
	(__pthread_attr_destroy): Return immediately if ATTR_FLAG_OLDATTR
	is set in iattr->flags.
	* pthread_attr_init.c (__pthread_attr_init_2_0): Set ATTR_FLAG_OLDATTR.

2003-11-21  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (distribute): Add tst-cleanup4aux.c.

	* tst-cond12.c (prepare): Add prototype.  Move after test-skeleton.c
	include.

2003-11-21  Ulrich Drepper  <drepper@redhat.com>

	* tst-cond12.c (do_test): If USE_COND_SIGNAL is defined, use
	pthread_cond_signal.

	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait): Don't
	store mutex address if the current value is ~0l.
	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/pthread/pthread_cond_broadcast.c
	(__pthread_cond_broadcast): Don't use requeue for pshared
	condvars.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S
	(__pthread_cond_wait): Don't store mutex address if the current
	value is ~0l.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S
	(__pthread_cond_broadcast): Don't use requeue for pshared
	condvars.

	* pthread_cond_init.c (__pthread_cond_init): Initialize __mutex
	element with ~0l for pshared condvars, with NULL otherwise.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S
	(__pthread_cond_wait): Don't store mutex address if the current
	value is ~0l.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S
	(__pthread_cond_broadcast): Don't use requeue for pshared
	condvars.

	* Makefile: Add rules to build and run tst-cond12 and tst-cond13.
	* tst-cond12.c: New file.
	* tst-cond13.c: New file.

2003-11-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/configure.in: Make missing forced unwind support
	fatal.

2003-11-11  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Don't declare __pthread_unwind as weak inside libpthread.

2003-11-06  Ulrich Drepper  <drepper@redhat.com>

	* Makefile: Add magic to clean up correctly.

2003-11-05  Jakub Jelinek  <jakub@redhat.com>

	* unwind.c (FRAME_LEFT): Define.
	(unwind_stop): Handle old style cleanups here.
	(__pthread_unwind): Handle old style cleanups only if
	!HAVE_FORCED_UNWIND.
	* Makefile (tests): Add tst-cleanup4 and tst-cleanupx4.
	(CFLAGS-tst-cleanupx4.c): Add -fexceptions.
	($(objpfx)tst-cleanup4): Depend on $(objpfx)tst-cleanup4aux.o.
	($(objpfx)tst-cleanupx4): Likewise.
	* tst-cleanup4.c: New test.
	* tst-cleanup4aux.c: New.
	* tst-cleanupx4.c: New test.

2003-11-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/bits/stdio-lock.h: Use lll_*lock instead of
	lll_mutex_*lock macros to skip atomic operations on some archs.

2003-11-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/tst-timer.c (main): Initialize
	sigev2.sigev_value as well.

2003-10-15  Roland McGrath  <roland@redhat.com>

	* sysdeps/pthread/configure.in: Barf if visibility attribute support
	is missing.
	* sysdeps/pthread/configure: Regenerated.

2003-10-09  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/unix/sysv/linux/sh/lowlevellock.h: Completely revamp the
	locking macros.  No distinction between normal and mutex locking
	anymore.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.S: Rewrite mutex locking.
	Merge bits from lowlevelmutex.S we still need.
	* sysdeps/unix/sysv/linux/sh/libc-lowlevelmutex.S: Remove.
	* sysdeps/unix/sysv/linux/sh/lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/not-cancel.h: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_barrier_wait.S: Adjust for
	new mutex implementation.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_signal.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedrdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedwrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_unlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h (PSEUDO): Also defined
	symbol for entry point to avoid cancellation.

2003-10-07  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Backout 2003-10-02
	changes.
	(SAVE_OLDTYPE_0): Fix a typo.

2003-10-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/pthread_once.S (__pthread_once):
	Check __sigsetjmp return value.  Reported by Daniel Jacobowitz.

2003-10-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h (DOCARGS_1): Use
	correct offset.

2003-10-02  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-cancel19.
	* tst-cancel19.c: New test.

2003-10-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Fix saving and
	restoring of the old cancellation type.

2003-09-30  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/malloc-machine.h: Remove misleading comment.

2003-09-27  Wolfram Gloger  <wg@malloc.de>

	* sysdeps/pthread/malloc-machine.h: New file

2003-09-24  Roland McGrath  <roland@redhat.com>

	* allocatestack.c (__make_stacks_executable): Don't ignore return
	value from _dl_make_stack_executable.

2003-09-24  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (__make_stacks_executable): Also change
	permission of the currently unused stacks.

	* allocatestack.c (change_stack_perm): Split out from
	__make_stacks_executable.
	(allocate_stack): If the required permission changed between the time
	we started preparing the stack and queueing it, change the permission.
	(__make_stacks_executable): Call change_stack_perm.

	* Makefile: Build tst-execstack-mod locally.
	* tst-execstack-mod.c: New file.

2003-09-23  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Only add tst-execstack if have-z-execstack is yes.

2003-09-23  Roland McGrath  <roland@redhat.com>

	* tst-execstack.c: New file.
	* Makefile (tests): Add it.
	($(objpfx)tst-execstack, $(objpfx)tst-execstack.out): New targets.
	(LDFLAGS-tst-execstack): New variable.

	* allocatestack.c (allocate_stack): Use GL(dl_stack_flags) to decide
	whether to use PROT_EXEC for stack mmap.
	(__make_stacks_executable): New function.
	* pthreadP.h: Declare it.
	* init.c (__pthread_initialize_minimal_internal): Set
	GL(dl_make_stack_executable_hook) to that.

2003-09-22  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Adjust for latest
	recommendation from AMD re avoidance of lock prefix.

2003-09-22  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/lowlevellock.c (__lll_timedlock_wait): Use
	lll_futex_timed_wait instead of lll_futex_wait.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c: Removed.
	* sysdeps/unix/sysv/linux/s390/lowlevelmutex.c: Removed.
	* sysdeps/unix/sysv/linux/s390/libc-lowlevellock.c: Removed.
	* sysdeps/unix/sysv/linux/s390/libc-lowlevelmutex.c: Removed.
	* sysdeps/unix/sysv/linux/s390/sem_trywait.c: Removed.
	* sysdeps/unix/sysv/linux/s390/sem_wait.c: Removed.
	* sysdeps/unix/sysv/linux/s390/sem_post.c: Removed.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c: Removed.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.h: Include atomic.h.
	Completely revamp the locking macros.  No distinction between
	normal and mutex locking anymore.
	* sysdeps/unix/sysv/linux/sparc/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (__lll_lock_wait,
	__lll_lock_timedwait): Fix prototypes.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h (__lll_lock_wait,
	__lll_lock_timedwait): Likewise.
	(lll_mutex_lock, lll_mutex_cond_lock): Use _val instead of _bool
	macros, add __builtin_expect.
	(lll_mutex_timedlock): Likewise.  Fix return value.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/i386/i586/libc-lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/i386/i586/lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/i386/i686/libc-lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/i386/i686/lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/x86_64/libc-lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/lowlevelmutex.c: Removed.
	* sysdeps/unix/sysv/linux/libc-lowlevelmutex.c: Removed.

2003-09-22  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(__lll_mutex_lock_wait): Minor optimization to avoid one atomic
	operation if possible.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Don't play tricks
	like jumping over the lock prefix.

2003-09-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Completely revamp the
	locking macros.  No distinction between normal and mutex locking
	anymore.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S: Rewrite mutex
	locking.  Merge bits from lowlevelmutex.S we still need.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/lowlevellock.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S: Removed.
	* sysdeps/unix/sysv/linux/x86_64/lowlevelmutex.S: Removed.
	* Makefile (routines): Remove libc-lowlevelmutex.
	(libpthread-rountines): Remove lowlevelmutex.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S: Adjust
	for new mutex implementation.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_unlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_barrier_wait.S: Likewise
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_unlock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S: Likewise.
	Don't use requeue.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: Likewise.
	* sysdeps/pthread/pthread_cond_signal.c: Don't use requeue.

2003-09-20  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Don't match memory
	in parameters of asm with output parameters.

	* pthread_mutex_unlock.c (__pthread_mutex_unlock_usercnt): Change
	type of DECR parameter to int.
	* pthreadP.h: Adjust prototype of __pthread_mutex_unlock_usercnt.

2003-09-18  Jakub Jelinek  <jakub@redhat.com>

	* tst-attr3.c (tf, do_test): Print stack start/end/size and
	guardsize for each thread.

2003-09-17  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread.h (pthread_getattr_np): Clarify usage.
	* sysdeps/unix/sysv/linux/pthread_attr_setaffinity.c
	(pthread_attr_setaffinity_np): Handle cpuset == NULL.

	* sysdeps/unix/sysv/linux/pthread_attr_getaffinity.c
	(pthread_attr_getaffinity_np): Don't segfault if iattr->cpuset is
	NULL.
	* pthread_getattr_np.c: Set cpuset using pthread_getaffinity_np.
	* pthreadP.h (pthread_getaffinity_np): Add hidden_proto.
	* sysdeps/unix/sysv/linux/pthread_getaffinity.c
	(pthread_getaffinity_np): Add hidden_def.

	* Makefile (tests): Add tst-attr3.
	* tst-attr3.c: New test.

	* sysdeps/i386/Makefile (CFLAGS-tst-align.c): Remove.

2003-09-15  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/i386/Makefile (CFLAGS-pthread_create.c,
	CFLAGS-tst-align.c): Add -mpreferred-stack-boundary=4.

2003-09-17  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (CFLAGS-tst-align.c): Add $(stack-align-test-flags).
	* tst-align.c: Include tst-stack-align.h.
	(tf, do_test): Use TEST_STACK_ALIGN macro.

2003-09-17  Ulrich Drepper  <drepper@redhat.com>

	* pthread_attr_init.c (__pthread_attr_init_2_0): Remove unused
	variable.

2003-09-16  Ulrich Drepper  <drepper@redhat.com>

	* pthread_getattr_np.c (pthread_getattr_np): Correctly fill in the
	stack-related values for the initial thread.

2003-09-15  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (CFLAGS-pthread_once.c): Add $(uses-callbacks).

2003-09-11  Ulrich Drepper  <drepper@redhat.com>

	* pthread_mutex_lock.c: Minor code rearrangements.

2003-09-05  Roland McGrath  <roland@redhat.com>

	* pthread_create.c (__pthread_pthread_sizeof_descr): Removed.
	Instead, include ../nptl_db/db_info.c to do its magic.
	* pthread_key_create.c (__pthread_pthread_keys_max): Removed.
	(__pthread_pthread_key_2ndlevel_size): Likewise.
	* sysdeps/alpha/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/i386/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/ia64/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/powerpc/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/s390/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/sh/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/sparc/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/x86_64/tls.h (DB_THREAD_SELF): New macro.
	* sysdeps/alpha/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/generic/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/i386/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/ia64/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/powerpc/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/s390/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/sh/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/sparc/td_ta_map_lwp2thr.c: File removed.
	* sysdeps/x86_64/td_ta_map_lwp2thr.c: File removed.

2003-09-08  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Change type
	of pthread_t to be compatible with LT.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Likewise.

2003-09-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/not-cancel.h (fcntl_not_cancel): Define.

2003-09-04  Jakub Jelinek  <jakub@redhat.com>

	* unwind-forcedunwind.c: Move to...
	* sysdeps/pthread/unwind-forcedunwind.c: ...here.
	(pthread_cancel_init): Use ARCH_CANCEL_INIT if defined.
	* sysdeps/pthread/jmpbuf-unwind.h: New file.
	* sysdeps/unix/sysv/linux/ia64/unwind-forcedunwind.c: New file.
	* sysdeps/unix/sysv/linux/ia64/jmpbuf-unwind.h: New file.
	* unwind.c: Include jmpbuf-unwind.h.
	(unwind_stop): Use _JMPBUF_CFA_UNWINDS macro.

2003-09-02  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/bits/local_lim.h: New file.
	* sysdeps/unix/sysv/linux/ia64/Versions (libpthread): Export
	pthread_attr_setstack and pthread_attr_setstacksize @@GLIBC_2.3.3.
	* sysdeps/unix/sysv/linux/alpha/bits/local_lim.h: New file.
	* sysdeps/unix/sysv/linux/alpha/Versions: New file.
	* sysdeps/unix/sysv/linux/sparc/bits/local_lim.h: New file.
	* sysdeps/unix/sysv/linux/sparc/Versions: New file.
	* pthread_attr_setstack.c (__old_pthread_attr_setstack): New function.
	(pthread_attr_setstack): If PTHREAD_STACK_MIN != 16384, export
	as @@GLIBC_2.3.2 and also export compatibility @GLIBC_2.2.
	* pthread_attr_setstacksize.c (__old_pthread_attr_setstacksize): New
	function.
	(pthread_attr_setstacksize): If PTHREAD_STACK_MIN != 16384, export
	as @@GLIBC_2.3.2 and also export compatibility @GLIBC_2.1.
	* Makefile (tests): Add tst-stack2.
	* tst-stack2.c: New test.
	* tst-stack1.c: Include limits.h and sys/param.h.
	(do_test): Set size to MAX (4 * getpagesize (), PTHREAD_STACK_MIN).

	* pthread_condattr_setpshared.c: Include errno.h.
	(pthread_condattr_setpshared): Return EINVAL if pshared
	is neither PTHREAD_PROCESS_PRIVATE nor PTHREAD_PROCESS_SHARED.

	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h (PSEUDO): Also
	defined symbol for entry point to avoid cancellation.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h (PSEUDO):
	Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/sysdep-cancel.h (PSEUDO):
	Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h (PSEUDO):
	Likewise.
	* sysdeps/unix/sysv/linux/sparc/sparc32/sysdep-cancel.h (PSEUDO):
	Likewise.
	* sysdeps/unix/sysv/linux/sparc/sparc64/sysdep-cancel.h (PSEUDO):
	Likewise.
	* sysdeps/unix/sysv/linux/i386/not-cancel.h (__open_nocancel,
	__close_nocancel, __read_nocancel, __write_nocancel,
	__waitpid_nocancel): Add attribute_hidden.  If not in libc.so,
	libpthread.so or librt.so, define to corresponding function
	without _nocancel suffix.
	* sysdeps/unix/sysv/linux/s390/not-cancel.h: New file.
	* sysdeps/unix/sysv/linux/powerpc/not-cancel.h: New file.
	* sysdeps/unix/sysv/linux/sparc/not-cancel.h: New file.

	* sysdeps/unix/sysv/linux/x86_64/not-cancel.h: Fix a typo.

2003-09-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/not-cancel.h: New file.
	* sysdeps/unix/sysv/linux/x86_64/not-cancel.h: New file.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Make sure the code
	in subsections has a symbol associated with it.

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h (PSEUDO): Also
	defined symbol for entry point to avoid cancellation.
	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h (PSEUDO): Likewise.

2003-09-01  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests): Add tst-tls5.
	(module-names): Add tst-tls5mod{,a,b,c,d,e,f}.
	($(objpfx)tst-tls5mod{,a,b,c,d,e,f}.so-no-z-defs): Set to yes.
	($(objpfx)tst-tls5): New.
	($(objpfx)tst-tls6.out): Likewise.
	(tests): Depend on $(objpfx)tst-tls6.out.
	* tst-tls3.c: Include stdint.h and pthreaddef.h.
	(do_test): Check pthread_self () return value alignment.
	* tst-tls3mod.c: Include stdint.h and pthreaddef.h.
	(tf): Check pthread_self () return value alignment.
	* tst-tls5.c: New test.
	* tst-tls5.h: New.
	* tst-tls5mod.c: New.
	* tst-tls5moda.c: New.
	* tst-tls5modb.c: New.
	* tst-tls5modc.c: New.
	* tst-tls5modd.c: New.
	* tst-tls5mode.c: New.
	* tst-tls5modf.c: New.
	* tst-tls6.sh: New test.

	* sysdeps/pthread/pthread-functions.h (struct pthread_functions): Add
	ptr___pthread_cond_timedwait and ptr___pthread_cond_timedwait_2_0.
	* init.c (pthread_functions): Initialize them.
	* forward.c (pthread_cond_timedwait@GLIBC_2.0,
	pthread_cond_timedwait@@GLIBC_2.3.2): New forwards.
	* Versions (libc): Export pthread_cond_timedwait@GLIBC_2.0,
	pthread_cond_timedwait@@GLIBC_2.3.2.

2003-09-01  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/alpha/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/alpha/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/alpha/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/alpha/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/alpha/timer_settime.c: New file.
	* sysdeps/unix/sysv/linux/alpha/Versions: New file.

	* sysdeps/unix/sysv/linux/alpha/aio_cancel.c: New file.

	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h: Define
	_POSIX_THREAD_PRIORITY_SCHEDULING.
	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h: Likewise.

2003-08-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/bits/stdio-lock.h (_IO_acquire_lock): Avoid
	nested function, use static inline function from libio.h.
	Code by Richard Henderson.

	* sysdeps/pthread/bits/libc-lock.h: Mark pthread_setcancelstate as
	weak.

2003-08-30  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/sparc/sparc64/Versions: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/timer_settime.c: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc64/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/sparc/sparc32/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/sparc/bits/pthreadtypes.h: New file.
	* sysdeps/unix/sysv/linux/sparc/bits/semaphore.h: New file.
	* sysdeps/unix/sysv/linux/sparc/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/sparc/pthread_once.c: New file.
	* sysdeps/unix/sysv/linux/sparc/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/sparc/fork.c: New file.
	* sysdeps/unix/sysv/linux/sparc/aio_cancel.c: New file.
	* sysdeps/sparc/sparc32/sparcv9/pthread_spin_lock.c: New file.
	* sysdeps/sparc/sparc32/sparcv9/pthread_spin_trylock.c: New file.
	* sysdeps/sparc/sparc32/sparcv9/pthread_spin_unlock.c: New file.
	* sysdeps/sparc/sparc32/pthread_spin_lock.c: New file.
	* sysdeps/sparc/sparc32/pthread_spin_trylock.c: New file.
	* sysdeps/sparc/sparc32/pthreaddef.h: New file.
	* sysdeps/sparc/sparc64/pthread_spin_lock.c: New file.
	* sysdeps/sparc/sparc64/pthread_spin_trylock.c: New file.
	* sysdeps/sparc/sparc64/pthread_spin_unlock.c: New file.
	* sysdeps/sparc/sparc64/pthreaddef.h: New file.
	* sysdeps/sparc/tls.h: New file.
	* sysdeps/sparc/tcb-offsets.sym: New file.
	* sysdeps/sparc/Makefile: New file.
	* sysdeps/sparc/td_ta_map_lwp2thr.c: New file.
	* init.c [__sparc__] (__NR_set_tid_address): Define.

2003-08-29  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/bits/stdio-lock.h (_IO_acquire_lock,
	_IO_release_lock): Define.

2003-08-29  Jakub Jelinek  <jakuB@redhat.com>

	* tst-cancel4.c (tf_sigwait, tf_sigwaitinfo, tf_sigtimedwait): Add
	sigemptyset before sigaddset.  Reported by jreiser@BitWagon.com.

2003-08-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h (pthread_exit): Remove __THROW.
	(__pthread_cleanup_class): Add missing return types of member
	functions.

2003-08-26  Steven Munroe <sjmunroe@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h
	(lll_mutex_unlock_force): Add memory barrier between store and futex
	syscall.

2003-08-25  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel4.c (do_test): Also unlink tempfname and remove
	tempmsg in first loop.

2003-08-18  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Define
	_POSIX_THREAD_PRIORITY_SCHEDULING.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Likewise.

2003-08-07  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/bits/libc-lock.h [_LIBC && SHARED]
	(__rtld_lock_default_lock_recursive,
	__rtld_lock_default_unlock_recursive): Define.
	[_LIBC && SHARED] (__rtld_lock_lock_recursive,
	__rtld_lock_unlock_recursive): Define using
	GL(_dl_rtld_*lock_recursive).
	* init.c (__pthread_initialize_minimal_internal): Initialize
	_dl_rtld_lock_recursive and _dl_rtld_unlock_recursive.
	Lock GL(_dl_load_lock) the same number of times as
	GL(_dl_load_lock) using non-mt implementation was nested.

	* pthreadP.h (__pthread_cleanup_upto): Add hidden_proto.
	* pt-longjmp.c (__pthread_cleanup_upto): Add hidden_def.

2003-08-06  Jakub Jelinek  <jakub@redhat.com>

	* tst-cancel17.c (do_test): Make len2 maximum of page size and
	PIPE_BUF.

2003-08-07  Jakub Jelinek  <jakub@redhat.com>

	* pthread_create.c (__pthread_create_2_0): Clear new_attr.cpuset.

2003-08-03  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/createthread.c (do_clone): Move error handling
	to first syscall error check.  Move syscall error check for tkill
	into __ASSUME_CLONE_STOPPED #ifdef.

2003-08-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/createthread.c (do_clone): If __ASSUME_CLONE_STOPPED
	is not defined, do explicit synchronization.
	(create_thread): Do not lock pd->lock here.  If __ASSUME_CLONE_STOPPED
	is not defined also unlock pd->lock for non-debugging case in case
	it is necessary.
	* pthread_create.c (start_thread): Always get and release pd->lock
	if __ASSUME_CLONE_STOPPED is not defined.
	(start_thread_debug): Removed.  Adjust users.
	* allocatestack.c (allocate_stack): Always initialize lock if
	__ASSUME_CLONE_STOPPED is not defined.
	* Makefile (tests): Add tst-sched1.
	* tst-sched1.c: New file.

	* sysdeps/pthread/createthread.c (do_clone): Only use
	sched_setschduler and pass correct parameters.

2003-07-31  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread.h (pthread_attr_setstackaddr,
	pthread_attr_setstacksize): Change PTHREAD_STACK_SIZE to
	PTHREAD_STACK_MIN in comments.

2003-07-31  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread_cond_timedwait.c (__pthread_cond_timedwait):
	Shut up warnings if INTERNAL_SYSCALL_ERROR_P does not use its first
	argument.
	* sysdeps/unix/sysv/linux/timer_create.c (timer_create): Likewise.
	* pthread_condattr_setclock.c (pthread_condattr_setclock): Likewise.
	* sysdeps/unix/sysv/linux/s390/jmp-unwind.c: Include pthreaddef.h.
	(__pthread_cleanup_upto): Fix prototype.
	(_longjmp_unwind): Adjust caller.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (__lll_mutex_timedlock):
	Change second argument to const struct pointer.
	* tst-sem8.c (main): Remove unused s2 and s3 variables.
	* tst-sem9.c (main): Likewise.
	* unwind.c: Include string.h for strlen prototype.

2003-07-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Don't use cmov unless HAVE_CMOV is defined.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_cond_timedwait.S:
	Define HAVE_CMOV.
	Patch by Nicholas Miell <nmiell@attbi.com>.

2003-07-30  Jakub Jelinek  <jakub@redhat.com>

	* init.c (__pthread_initialize_minimal_internal): Initialize
	GL(dl_init_static_tls).
	* pthreadP.h (__pthread_init_static_tls): New prototype.
	* allocatestack.c (init_one_static_tls, __pthread_init_static_tls):
	New functions.
	* Makefile (tests): Add tst-tls4.
	(modules-names): Add tst-tls4moda and tst-tls4modb.
	($(objpfx)tst-tls4): Link against libdl and libpthread.
	($(objpfx)tst-tls4.out): Depend on tst-tls4moda.so and
	tst-tls4modb.so.
	* tst-tls4.c: New file.
	* tst-tls4moda.c: New file.
	* tst-tls4modb.c: New file.

2003-06-19  Daniel Jacobowitz  <drow@mvista.com>

	* sysdeps/pthread/timer_create.c (timer_create): Call timer_delref
	before __timer_dealloc.
	* sysdeps/pthread/timer_routines.c (__timer_thread_find_matching):
	Don't call list_unlink.

2003-07-29  Roland McGrath  <roland@redhat.com>

	* Makefile [$(build-shared) = yes] (tests): Depend on $(test-modules).

2003-07-25  Jakub Jelinek  <jakub@redhat.com>

	* tst-cancel17.c (do_test): Check if aio_cancel failed.
	Don't reuse struct aiocb A if it failed.
	Write fpathconf (fds[1], _PC_PIPE_BUF) + 2 bytes using aio_write,
	not just one byte, as that does not block.

2003-07-22  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/unwind-resume.c: New file.
	* sysdeps/pthread/Makefile (routines, shared-only-routines): Add
	unwind-resume in csu subdir.
	(CFLAGS-unwind-resume.c, CFLAGS-rt-unwind-resume.c): Compile with
	exceptions.
	(librt-sysdep_routines, librt-shared-only-routines): Add
	rt-unwind-resume.
	* sysdeps/pthread/rt-unwind-resume.c: New file.
	* unwind-forcedunwind.c: New file.
	* Makefile (libpthread-routines): Add unwind-forcedunwind.
	(libpthread-shared-only-routines): Likewise.
	(CFLAGS-unwind-forcedunwind.c): Compile with exceptions.
	* pthreadP.h (pthread_cancel_init): New prototype.
	* pthread_cancel.c (pthread_cancel): Call pthread_cancel_init.

	* sysdeps/pthread/createthread.c (do_thread, create_thread): Make
	attr argument const struct pthread_attr *.

	* res.c (__res_state): Return __resp.
	* descr.h: Include resolv.h.
	(struct pthread): Add res field.
	* pthread_create.c: Include resolv.h.
	(start_thread): Initialize __resp.
	* Makefile (tests): Add tst-_res1.
	(module-names): Add tst-_res1mod1, tst-_res1mod2.
	($(objpfx)tst-_res1mod2.so): Depend on $(objpfx)tst-_res1mod1.so.
	($(objpfx)tst-_res1): Depend on $(objpfx)tst-_res1mod2.so and
	libpthread.
	* tst-_res1.c: New file.
	* tst-_res1mod1.c: New file.
	* tst-_res1mod2.c: New file.

2003-07-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/createthread.c: Don't define CLONE_STOPPED.

	* Makefile: Define various *-no-z-defs variables for test DSOs
	which has undefined symbols.

2003-07-21  Steven Munroe  <sjmunroe@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/pthread_once.c (__pthread_once):
	Retry if the stwcx fails to store once_control.

2003-07-20  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (libpthread-routines): Add pthread_attr_getaffinity and
	pthread_attr_setaffinity.
	* Versions [libpthread] (GLIBC_2.3.3): Likewise.
	* sysdeps/unix/sysv/linux/pthread_attr_getaffinity.c: New file.
	* sysdeps/unix/sysv/linux/pthread_attr_setaffinity.c: New file.
	* pthread_attr_destroy.c: Free cpuset element if allocated.
	* pthread_create.c: Pass iattr as additional parameter to
	create_thread.
	* sysdeps/pthread/createthread.c: If attribute is provided and
	a new thread is created with affinity set or scheduling parameters,
	start thread with CLONE_STOPPED.
	* sysdeps/pthread/pthread.h: Declare pthread_attr_getaffinity and
	pthread_attr_setaffinity.
	* sysdeps/unix/sysv/linux/internaltypes.h (struct pthread_attr): Add
	cpuset element.

2003-07-15  Ulrich Drepper  <drepper@redhat.com>

	* tst-tcancel-wrappers.sh: lseek and llseek are not cancelation points.

2003-07-14  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/configure.in: Require CFI directives also for
	ppc and s390.

2003-07-15  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h (PSEUDO):
	Add cfi directives.

2003-07-12  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/tcb-offsets.sym: Add RESULT, TID, CANCELHANDLING and
	CLEANUP_JMP_BUF.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: Use more
	registers as variables.  Call __pthread_mutex_unlock_usercnt.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_rdlock.S: Store TID
	not self pointer in __writer.  Compare with TID to determine
	deadlocks.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S: Add cancellation support.
	* sysdeps/unix/sysv/linux/sh/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h: Define all the nice
	macros also when compiling librt.

2003-07-11  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (CFLAGS-pthread_once.c): Add -fexceptions
	-fasynchronous-unwind-tables.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/sysdep-cancel.h
	(PSEUDO): Add cfi directives.
	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h (PSEUDO):
	Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h (PSEUDO):
	Likewise.

2003-07-08  Jakub Jelinek  <jakub@redhat.com>

	* pthreadP.h (__pthread_unwind_next, __pthread_register_cancel,
	__pthread_unregister_cancel): Add prototypes and hidden_proto.
	* unwind.c (__pthread_unwind_next): Add hidden_def.
	* cleanup.c (__pthread_register_cancel, __pthread_unregister_cancel):
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_wait.S (__new_sem_wait):
	Use HIDDEN_JUMPTARGET to jump to __pthread_unwind.
	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S (sem_timedwait):
	Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S (sem_wait): Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S (sem_timedwait):
	Likewise.
	* sysdeps/unix/sysv/linux/i386/pthread_once.S (__pthread_once): Use
	HIDDEN_JUMPTARGET to call __pthread_register_cancel,
	__pthread_unregister_cancel and __pthread_unwind_next.

2003-07-04  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h (PSEUDO): Use
	different symbol for the cancellation syscall wrapper and
	non-cancellation syscall wrapper.
	(PSEUDO_END): Define.

2003-07-05  Richard Henderson  <rth@redhat.com>

	* sysdeps/alpha/elf/pt-initfini.c: Avoid .ent/.end.
	* sysdeps/unix/sysv/linux/alpha/lowlevellock.h (lll_futex_wait,
	lll_futex_timed_wait, lll_futex_wake, lll_futex_requeue): On success
	return actual return value from the syscall, not 0.

2003-07-07  Ulrich Drepper  <drepper@redhat.com>

	* descr.h (struct pthread): Add pid field.
	* allocatestack.c (allocate_stack): Initialize pid field in descriptor.
	(__reclaim_stacks): Likewise.
	* init.c (sigcancel_handler): If __ASSUME_CORRECT_SI_PID is defined
	also check for PID of the signal source.
	(__pthread_initialize_minimal_internal): Also initialize pid field
	of initial thread's descriptor.
	* pthread_cancel.c: Use tgkill instead of tkill if possible.
	* sysdeps/unix/sysv/linux/fork.c: Likewise.
	* sysdeps/unix/sysv/linux/pt-raise.c: Likewise.
	* sysdeps/unix/sysv/linux/pthread_kill.c: Likewise.
	* sysdeps/unix/sysv/linux/raise.c: Likewise.

2003-07-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/bits/libc-lock.h (__libc_cleanup_push): Renamed.
	Fix use of parameter.
	(__libc_cleanup_pop): Likewise.

2003-07-04  Ulrich Drepper  <drepper@redhat.com>

	* init.c (sigcancel_handler): Change parameters to match handler
	for SA_SIGACTION.  Check signal number and code to recognize
	invalid invocations.

2003-07-03  Roland McGrath  <roland@redhat.com>

	* sysdeps/ia64/td_ta_map_lwp2thr.c (td_ta_map_lwp2thr):
	Apply sizeof (struct pthread) bias to r13 value.

2003-07-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/configure.in: Require CFI directives.

	* sysdeps/pthread/librt-cancellation.c (__pthread_unwind): Remove
	definition.
	* pthreadP.h (__pthread_unwind): Add hidden_proto if used in
	libpthread compilation.
	* unwind.c (__pthread_unwind): Add hidden_def.
	* Versions (libpthread) [GLIBC_PRIVATE]: Add __pthread_unwind.

2003-07-01  Ulrich Drepper  <drepper@redhat.com>

	* libc-cancellation.c (__libc_cleanup_routine): Define.
	* sysdeps/pthread/bits/libc-lock.h (__pthread_cleanup_push): Define.
	(__pthread_cleanup_pop): Define.

2003-07-01  Richard Henderson  <rth@redhat.com>

	* sysdeps/alpha/elf/pt-initfini.c: New file.
	* sysdeps/alpha/pthread_spin_lock.S: New file.
	* sysdeps/alpha/pthread_spin_trylock.S: New file.
	* sysdeps/alpha/pthreaddef.h: New file.
	* sysdeps/alpha/td_ta_map_lwp2thr.c: New file.
	* sysdeps/alpha/tls.h: New file.
	* sysdeps/unix/sysv/linux/alpha/Makefile: New file.
	* sysdeps/unix/sysv/linux/alpha/bits/pthreadtypes.h: New file.
	* sysdeps/unix/sysv/linux/alpha/bits/semaphore.h: New file.
	* sysdeps/unix/sysv/linux/alpha/createthread.c: New file.
	* sysdeps/unix/sysv/linux/alpha/fork.c: New file.
	* sysdeps/unix/sysv/linux/alpha/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/alpha/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/alpha/pthread_once.c: New file.
	* sysdeps/unix/sysv/linux/alpha/sem_post.c: New file.
	* sysdeps/unix/sysv/linux/alpha/sysdep-cancel.h: New file.

2003-07-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: Add correct
	cleanup support and unwind info.

2003-06-30  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/pthread_once.S (__pthread_once):
	Use correct cleanup handler registration.  Add unwind info.
	* sysdeps/unix/sysv/linux/unwindbuf.sym: New file.
	* sysdeps/unix/sysv/linux/Makefile: Add rule to build unwindbuf.h.
	* tst-once3.c: Add cleanup handler and check it is called.
	* tst-once4.c: Likewise.
	* tst-oncex3.c: New file.
	* tst-oncex4.c: New file.
	* Makefile: Add rules to build and run tst-oncex3 and tst-oncex4.

2003-06-29  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/configure.in: Check for C cleanup handling in gcc.

2003-06-27  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel4.c (tf_msgrcv): Use IPC_PRIVATE in msgget call.
	(tf_msgsnd): Likewise.

	* tst-cancel4.c (tf_msgrcv): Strengthen test against valid
	premature returns a bit more.

2003-06-26  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/librt-cancellation.c: Move __pthread_unwind
	definition to the front.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Rename
	the cleanup functions to make the names unique.  Fix dwarf opcode
	un unwind table.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Rename cleanup
	functions to make the names unique.  Fix CFA offset for two blocks.

2003-06-25  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h (class __pthread_cleanup_class): Add
	missing closing braces.
	Patch by Christophe Saout <christophe@saout.de>.

2003-06-24  Roland McGrath  <roland@redhat.com>

	* pthread_mutex_trylock.c (__pthread_mutex_trylock): Typo fix.

2003-06-24  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/bits/posix_opt.h: New file.
	* sysdeps/unix/sysv/linux/x86_64/bits/posix_opt.h: New file.

	* pthreadP.h: Declare __find_thread_by_id.
	* allocatestack.c [HP_TIMING_AVAIL]: Define __find_thread_by_id.
	* pthread_clock_gettime.c: Allow using other thread's clock.
	* pthread_clock_settime.c: Likewise.
	* sysdeps/pthread/pthread_getcpuclockid.c: Likewise.
	* Makefile: Add rules to build and run tst-clock2.
	* tst-clock2.c: New file.

2003-06-23  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Rewrite
	to use exception-based cleanup handler.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.

	* tst-cond8.c (ch): Announce that we are done.

	* pthreadP.h (__pthread_mutex_cond_lock): Mark with internal_function.

	* tst-cancel17.c (tf): Retry aio_suspend in case of EINTR.
	Also test aio_suspend with timeout value.

2003-06-22  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Mark __pthread_mutex_unlock_usercnt also hidden.
	* pthread_mutex_unlock.c (__pthread_mutex_unlock_usercnt): Add
	attribute_hidden.

	* pthreadP.h (__pthread_mutex_init_internal): Mark hidden.
	(__pthread_mutex_lock_internal): Likewise.
	(__pthread_mutex_unlock_internal): Likewise.
	(__pthread_mutex_unlock_usercnt): Declare.
	* pthread_mutex_destroy.c: Always fail if used in any way.
	* pthread_mutex_init.c: Update comment.
	* pthread_mutex_lock.c: If NO_INCR is not defined adjust __nusers.
	* pthread_mutex_timedlock.c: Adjust __nusers.
	* pthread_mutex_trylock.c: Adjust __nusers.
	* pthread_mutex_unlock.c: Old code is in __pthread_mutex_unlock_usercnt
	and public interfaces are wrapper with pass additional parameter.
	__pthread_mutex_unlock_usercnt does not adjust __nusers if second
	parameter zero.
	* tst-mutex8.c: New file.
	* Makefile (tests): Add tst-mutex8.
	* sysdeps/pthread/pthread_cond_timedwait.c: Call
	__pthread_mutex_unlock_usercnt.
	* sysdeps/pthread/pthread_cond_wait.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/pthread_mutex_cond_lock.c: Define NO_INCR.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_mutex_t):
	Add __nusers.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.

	* pthread_mutex_lock.c: Don't store THREAD_ID in __owner, use TID.
	* pthread_mutex_timedlock.c: Likewise.
	* pthread_mutex_trylock.c: Adjust __nusers.
	* pthread_mutex_unlock.c: Compare with TID not THREAD_ID.
	* tst-mutex9.c: New file.
	* Makefile (tests): Add tst-mutex9.
	* sysdeps/i386/tls.h: Remove THREAD_ID definition.
	* sysdeps/ia64/tls.h: Likewise.
	* sysdeps/powerpc/tls.h: Likewise.
	* sysdeps/s390/tls.h: Likewise.
	* sysdeps/sh/tls.h: Likewise.
	* sysdeps/x86_64/tls.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_mutex_t):
	Change type of __owner.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.

2003-06-19  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/sem_post.c: Move to...
	* sysdeps/unix/sysv/linux/sem_post.c: ...here.

	* sysdeps/unix/sysv/linux/sem_post.c: Move to...
	* sysdeps/unix/sysv/linux/powerpc/sem_post.c: ... here.  Pass nr + 1
	instead of nr to lll_futex_wake.  Only set errno and return -1
	if err < 0.

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h (lll_futex_wait,
	lll_futex_timed_wait, lll_futex_wake, lll_futex_requeue): On success
	return actual return value from the syscall, not 0.

2003-06-18  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel4.c (tf_msgsnd): Don't always use 100 as the type,
	find a random value.
	(tf_msgrcv): Likewise.  Also don't report msgrcv returns if
	errno==EIDRM.

	* sysdeps/unix/sysv/linux/timer_settime.c: Add prototype for
	compat_timer_settime.
	* sysdeps/unix/sysv/linux/timer_gettime.c: Add prototype for
	compat_timer_gettime.
	* sysdeps/unix/sysv/linux/timer_getoverr.c: Add prototype for
	compat_timer_getoverrun.
	* sysdeps/unix/sysv/linux/timer_delete.c: Add prototype for
	compat_timer_delete.

	* pthread_mutex_destroy.c (__pthread_mutex_destroy): For
	error-checking mutex detect busy mutexes.

2003-06-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_mutex_lock):
	Add ax to clobber list.
	(lll_mutex_cond_lock): Likewise.
	(lll_mutex_unlock): Likewise.
	(lll_lock): Likewise.
	(lll_unlock): Likewise.

	* Makefile: Add rules to build and run tst-cancel18 and tst-cancelx18.
	* tst-cancel18.c: New file.
	* tst-cancelx18.c: New file.

	* tst-cancel4.c: Test connect, creat, msgrcv, msgsnd, sendmsg, sendto,
	and tcdrain.

	* Makefile: Add rules to build and run tst-cancel17 and tst-cancel17x.
	* tst-cancel17.c: New file.
	* tst-cancelx17.c: New file.

	* sysdeps/unix/sysv/linux/sigtimedwait.c: New file.
	* sysdeps/unix/sysv/linux/sigwait.c: New file.
	* sysdeps/unix/sysv/linux/sigwaitinfo.c: New file.

	* tst-cancel4.c: Test open, close, pread, pwrite, fsync, and msync.

2003-06-16  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/createthread.c (create_thread): Set
	header.multiple_threads unconditionally.
	* allocatestack.c (allocate_stack): Likewise.
	* descr.h (struct pthread): Add header.multiple_threads
	unconditionally.
	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h (CENABLE, CDISABLE):
	Define for librt.  #error if neither libpthread, libc nor librt.
	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h (CENABLE, CDISABLE):
	Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h (CENABLE,
	CDISABLE): Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/sysdep-cancel.h (CENABLE,
	CDISABLE): Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h (CENABLE,
	CDISABLE): Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h (CENABLE,
	CDISABLE): Likewise.  Access header.multiple_threads outside of
	libc and libpthread.
	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h (CENABLE, CDISABLE):
	Likewise.
	* sysdeps/x86_64/tls.h (tcbhead_t): Add multiple_threads.
	* sysdeps/x86_64/tcb-offsets.sym (MULTIPLE_THREADS_OFFSET): Define.

2003-06-17  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel4.c: Add tests for the socket and signal functions, pause.
	Also test early cancellation before the thread reaches the cancellation
	point.

	* Makefile: Compile forward.c with exceptions.

	* sysdeps/unix/sysv/linux/sleep.c: New file.

2003-06-16  Ulrich Drepper  <drepper@redhat.com>

	* Makefile: Add CFLAGS definition to compile function wrappers
	duplicated from libc with exceptions.
	* tst-cancel4.c: Also check cancellation handlers.

	* Makefile: Add rules to build and run tst-cancel16 and
	tst-cancelx16.  Add missing CFLAGS definitions.
	* tst-cancel16.c: New file.
	* tst-cancelx16.c: New file.

2003-06-15  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h
	(DL_SYSINFO_IMPLEMENTATION): Use CFI opcodes.
	* sysdeps/unix/sysv/linux/i386/i686/dl-sysdep.h
	(DL_SYSINFO_IMPLEMENTATION): Likewise.

	* pthreadP.h (LIBC_CANCEL_ASYNC): Also define for librt.
	(LIBC_CANCEL_RESET): Likewise.
	Declare __librt_enable_asynccancel and __librt_disable_asynccancel.
	* sysdeps/pthread/Makefile (librt-sysdep_routines): Add
	librt-cancellation.
	(CFLAGS-libcrt-cancellation.c): Define.
	* sysdeps/pthread/librt-cancellation.c: New file.
	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Define all the nice
	macros also when compiling librt.
	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h: Likewise.

	* sysdeps/unix/sysv/linux/timer_create.c: Add prototype for
	compat_timer_create.

2003-06-14  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/posix-timer.h (timespec_compare): Always inline.

	* sysdeps/unix/sysv/linux/fork.h: Add libc_hidden_proto for
	__register_atfork.
	* sysdeps/unix/sysv/linux/register-atfork.c (__register_atfork):
	Add libc_hidden_def.

2003-06-13  Roland McGrath  <roland@redhat.com>

	* sysdeps/x86_64/td_ta_map_lwp2thr.c (td_ta_map_lwp2thr): Pass FS
	constant from <sys/reg.h> to ps_get_thread_area, not register contents.

2003-06-11  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (queue_stack): Always inline.
	* ptreadhP.h (__do_cancel): Likewise.

2003-06-10  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c (sem_timedwait): Fix
	a typo.

2003-06-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S
	(__pthread_cond_signal): Remove incorrect second addition for
	cond_lock!=0.

2003-06-09  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S
	(__pthread_cond_signal): Use correct futex pointer in
	__lll_mutex_lock_wait call.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S
	(__pthread_cond_signal): Some more tweaks to handle cond_lock!=0.

2003-06-08  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/s390/sem_wait.c (__new_sem_wait): Make
	cancelable.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c (sem_timedwait):
	Likewise.

	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h: Remove
	hand-written CFI generation code.  Since ENTRY/END also initiated
	CFI frames this caused two CFI sets to be generated.

2003-06-07  Ulrich Drepper  <drepper@redhat.com>

	* cleanup_routine.c: New file.
	* Versions (libpthread) [GLIBC_2.3.3]: Add __pthread_cleanup_routine.
	* sysdeps/pthread/pthread.h: Add support for fully exception-based
	cleanup handling.
	* Makefile (libpthread-routines): Add cleanup_routine.
	Add more CFLAGS variables to compile with exceptions.  Add comments
	why which file needs unwind tables.
	(tests) [have-forced-unwind==yes]: Add tst-cancelx* and tst-cleanupx*
	tests.
	* tst-cancelx1.c: New file.
	* tst-cancelx2.c: New file.
	* tst-cancelx3.c: New file.
	* tst-cancelx4.c: New file.
	* tst-cancelx5.c: New file.
	* tst-cancelx6.c: New file.
	* tst-cancelx7.c: New file.
	* tst-cancelx8.c: New file.
	* tst-cancelx9.c: New file.
	* tst-cancelx10.c: New file.
	* tst-cancelx11.c: New file.
	* tst-cancelx12.c: New file.
	* tst-cancelx13.c: New file.
	* tst-cancelx14.c: New file.
	* tst-cancelx15.c: New file.
	* tst-cleanupx0.c: New file.
	* tst-cleanupx0.expect: New file.
	* tst-cleanupx1.c: New file.
	* tst-cleanupx2.c: New file.
	* tst-cleanupx3.c: New file.

	* tst-cleanup0.c: Make standard compliant.
	* tst-cleanup1.c: Likewise.

	* sysdeps/unix/sysv/linux/sem_timedwait.c: Add cancellation support.
	* sysdeps/unix/sysv/linux/sem_wait.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: Likewise.
	* sysdeps/i386/tcb-offsets.sym: Add RESULT, CANCELHANDLING, and
	CLEANUP_JMP_BUF.
	* sysdeps/x86_64/tcb-offsets.sym: Likewise.
	* tst-cancel12.c: New file.
	* tst-cancel13.c: New file.
	* tst-cancel14.c: New file.
	* tst-cancel15.c: New file.
	* Makefile (tests): Add tst-cancel12, tst-cancel13, tst-cancel14,
	and tst-cancel15.

	* tst-cancel1.c: Add some comments.

	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: Compute relative
	timeout correctly.

2003-06-06  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (CFLAGS-pthread_cancel.c): Define.

2003-06-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_rwlock_t):
	Change type of __writer element to int.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.
	* sysdeps/i386/tcb-offsets.sym: Replace SELF entry with TID entry.
	* sysdeps/x86_64/tcb-offsets.sym: Likewise.
	* pthread_rwlock_trywrlock.c: Store TID not self pointer in __writer.
	Compare with TID to determine deadlocks.
	* sysdeps/pthread/pthread_rwlock_rdlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_timedrdlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_timedwrlock.: Likewise.
	* sysdeps/pthread/pthread_rwlock_wrlock.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_wrlock.S: Likewise.
	* Makefile (tests): Add tst-rwlock12.
	* tst-rwlock12.c: New file.

2003-06-05  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/lowlevellock.c (__lll_lock_wait,
	__lll_timedlock_wait, lll_unlock_wake_cb, __lll_timedwait_tid):
	Remove bogus hidden_proto.
	* sysdeps/unix/sysv/linux/s390/libc-lowlevellock.c (___lll_lock):
	Likewise.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c (___lll_lock,
	lll_unlock_wake_cb, ___lll_timedwait_tid): Likewise.
	* sysdeps/unix/sysv/linux/s390/lowlevelmutex.c (___lll_mutex_lock,
	___lll_mutex_timedlock): Likewise.

2003-06-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S
	(__pthread_cond_signal): Add some code to eventually handle
	cond_lock!=0.

2003-06-01  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-exec4.
	(tst-exec4-ARGS): Define.
	* tst-exec4.c: New file.

2003-05-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/lowlevellock.c (__lll_timedlock_wait):
	Also fail if tv_nsec < 0.
	(__lll_timedwait_tid): Likewise.
	* sysdeps/unix/sysv/linux/sem_timedwait.c (sem_timedwait): Likewise.
	* sysdeps/unix/sysv/linux/i386/lowlevellock.h (lll_timedwait_tid):
	Likewise.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c (___lll_timedwait_tid):
	Likewise.
	* sysdeps/unix/sysv/linux/s390/lowlevelmutex.c (__lll_mutex_timedlock):
	Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c (sem_timedwait):
	Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_timedwait_tid):
	Likewise.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.h (lll_timedwait_tid):
	Likewise.

	* Makefile (tests): Add tst-sem8 and tst-sem9.
	* tst-sem8.c: New file.
	* tst-sem9.c: New file.
	* sem_open.c: Fix creation of in_use record if the file exists but
	no internal record.

	* posix-timer.h: Remove old, unused timer_id2ptr and timer_ptr2id
	definitions.

	* sysdeps/pthread/timer_create.c (timer_create): In case
	evp==NULL, assign timer ID to sival_ptr.

	* descr.h (struct pthread_unwind_buf): Change type of prev element to
	struct pthread_unwind_buf *.
	(struct pthread): Likewise for cleanup_jmp_buf element.

	* cleanup.c (__pthread_register_cancel): Add cast to avoid warning.
	* cleanup_defer.c (__pthread_register_cancel_defer): Likewise.
	* unwind.c (__pthread_unwind_next): Likewise.

2003-05-30  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h
	(lll_futex_timed_wait): Use int for futex value parameter.
	(lll_futex_wake): Likewise.
	(lll_futex_requeue): Likewise.

	* sysdeps/unix/sysv/linux/lowlevellock.c (__lll_lock_wait):
	Replace one memory operation with one register operation.

	* tst-join4.c (do_test): Fix error message.

	* tst-rwlock6.c (do_test): Use correct format specifier.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S
	(__lll_mutex_lock_wait): Replace one memory operation with one
	register operation.
	* sysdeps/unix/sysv/linux/x86_64/lowlevelmutex.S
	(__lll_mutex_lock_wait): Likewise.

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h
	(__lll_mutex_cond_lock): Add one to value parameter of
	__lll_lock_wait to reflect reality in the futex syscall.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h
	(lll_mutex_cond_lock): Likewise.

2003-05-30  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (__lll_mutex_cond_lock):
	New function.
	(lll_mutex_cond_lock): Define.

2003-05-29  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-signal6.
	* tst-signal6.c: New file.

	* sysdeps/unix/sysv/linux/s390/lowlevellock.h
	(__lll_mutex_unlock_force): New function
	(lll_mutex_unlock_force): Use __lll_mutex_unlock_force.

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h
	(__lll_mutex_unlock_force): New function.
	(lll_mutex_unlock_force): Use __lll_mutex_unlock_force.

	* tst-rwlock7.c (do_test): Use correct format specifier.

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (lll_futex_requeue):
	Find break parameter in correct asm argument.

2003-05-27  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (lll_futex_clobbers):
	Remove out4.
	(lll_futex_requeue): Fix __o3 constraint, return negative errno if
	error occured.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h (pthread_cond_t):
	Add __mutex.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.h (FUTEX_REQUEUE,
	lll_futex_requeue, lll_mutex_unlock_force): Define.

2003-05-30  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h
	(pthread_cond_t): Add __mutex.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h (FUTEX_REQUEUE,
	lll_futex_requeue, lll_mutex_unlock_force): Define.

2003-05-28  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/tcb-offsets.sym: Define MUTEX_FUTEX.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h (pthread_cond_t):
	Add __mutex field.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.h (SYSCALL_WITH_INST_PAD):
	Define.
	(lll_futex_wait, lll_futex_wake): Define.
	* sysdeps/unix/sysv/linux/sh/sh4/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S: Try using
	FUTEX_REQUEUE instead of FUTEX_WAIT.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_signal.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Remember
	mutex which was used in condvar structure.  Call
	__pthread_mutex_cond_lock instead of __pthread_mutex_lock_internal.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: Likewise.

	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_rdlock.S: Don't
	include tcb-offsets.h.  Read wakeup value in locked region.
	Use the value of gbr register as THREAD_ID.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedrdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedwrlock.S: Likewise.

	* sysdeps/unix/sysv/linux/sh/sem_trywait.S: Remove futex related
	macros.

2003-05-28  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_broadcast.c
	(__pthread_cond_broadcast): Fix typo: MAX_INT -> INT_MAX.

2003-05-26  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S: Fix
	typo in register name.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: Use parameters
	correctly.  Actually use requeue.  Little optimization.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Store
	mutex address early.  Handle cancellation state as 32-bit value.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	Remove unnecessary label.

2003-05-25  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_broadcast.c: Try using FUTEX_REQUEUE
	instead of FUTEX_WAIT.
	* sysdeps/pthread/pthread_cond_signal.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: Likewise.
	* sysdeps/pthread/pthread_cond_timedwait.c: Remember mutex which was
	used in condvar structure.  Call __pthread_mutex_cond_lock instead
	of __pthread_mutex_lock_internal.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/pthread/pthread_cond_wait.c: Likewise.
	(__condvar_cleanup): Always call __pthread_mutex_cond_lock.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/Makefile (libpthread-sysdep_routines):
	Add pthread_mutex_cond_lock.
	* sysdeps/unix/sysv/linux/lowlevelcond.sym: Add dep_mutex.
	* sysdeps/unix/sysv/linux/pthread_cond_mutex_lock.c: New file.
	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Define
	lll_mutex_cond_lock.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_cond_t):
	Add __mutex field.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.

	* sysdeps/i386/tcb-offsets.sym: Define MUTEX_FUTEX.
	* sysdeps/x86_64/tcb-offsets.sym: Likewise.

	* pthreadP.h: Declare __pthread_mutex_cond_lock.
	* pthread_mutex_lock.c: Define LLL_MUTEX_LOCK if not already defined.
	Use it instead of lll_mutex_lock.  If __pthread_mutex_lock is a
	macro don't define aliases.

	* cancellation.c: Remove __pthread_enable_asynccancel_2.
	* pthreadP.h: Remove declaration of __pthread_enable_asynccancel_2.
	* sysdeps/pthread/pthread_cond_timedwait.c: Use
	__pthread_enable_asynccancel instead of __pthread_enable_asynccancel_2.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/pthread/pthread_cond_wait.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.

2003-05-17  Ulrich Drepper  <drepper@redhat.com>

	* sem_open.c: Fix one endless loop.  Implement correct semantics
	wrt opening the same semaphore more then once.
	* sem_close.c: Adjust for sem_open change.
	* semaphoreP.h: Include <semaphore.h>.  Define struct inuse_sem.
	Declare __sem_mappings, __sem_mappings_lock, __sem_search.
	* Makefile (tests): Add tst-sem7.
	* tst-sem7.c: New file.

2003-05-16  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/register-atfork.c (libc_freeres_fn): Fix
	uninitialized variable braino.

2003-05-16  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/timer_gettime.c (timer_gettime): Correct
	test for syscall availability.

	* sysdeps/unix/sysv/linux/timer_settime.c (timer_settime): Set
	__no_posix_timers to -1 if the syscalls don't exist.

	* pthread_join.c (pthread_join): Set tid field of the joined
	thread to -1.  This isn't necessary but helps to recognize some
	error conditions with almost no cost.

	* allocatestack.c (FREE_P): Also negative values indicate an
	unused stack.

	* unwind.c: Include <unistd.h>.

2003-05-14  Ulrich Drepper  <drepper@redhat.com>

	* Makefile ($(objpfx)$(multidir)): Add rule to create the directory.

2003-05-14  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (crti-objs, crtn-objs): New variables.
	(omit-deps, extra-objs): Add crtn.
	($(objpfx)libpthread.so): Depend on both crti and crtn
	and links to them in multidir.
	($(objpfx)crtn.S, $(objpfx)crtn.o): New rules.

2003-05-12  Steven Munroe  <sjmunroe@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h
	(lll_mutex_unlock): Use atomic_exchange_rel.

2003-05-11  Ulrich Drepper  <drepper@redhat.com>

	* cond-perf.c (cons): Add missing locking around setting of alldone.

2003-05-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/sem_trywait.S: Remove futex
	related macros.
	* sysdeps/unix/sysv/linux/x86_64/sem_trywait.S: Likewise.

2003-05-09  Ulrich Drepper  <drepper@redhat.com>

	* tst-sem6.c: New file.
	* Makefile (tests): Add tst-sem6.

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (___lll_mutex_unlock):
	Use atomic_exchange_rel instead of atomic_exchange.
	* sysdeps/unix/sysv/linux/lowlevellock.c (lll_unlock_wake_cb):
	Likewise.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Improve quality of
	code for lll_futex_wait and lll_futex_wake in static apps.  Use
	vsyscall is possible.

	* sysdeps/unix/sysv/linux/pthread_getaffinity.c: New file.
	* sysdeps/unix/sysv/linux/pthread_setaffinity.c: New file.
	* sysdeps/pthread/pthread.h: Declare pthread_getaffinity_np and
	pthread_setaffinity_np.
	* Versions [libpthread] (GLIBC_2.3.3): Add pthread_getaffinity_np
	and pthread_setaffinity_np.
	* Makefile (libpthread-routines): Add pthread_getaffinity and
	pthread_setaffinity.

	* allocatestack.c (allocate_stack): If ARCH_RETRY_MMAP is defined,
	use it in case mmap to allocate the stack fails.
	* sysdeps/unix/sysv/linux/x86_64/Makefile: Don't define
	ARCH_MAP_FLAGS here.
	* sysdeps/x86_64/pthreaddef.h: Define ARCH_MAP_FLAGS and
	ARCH_RETRY_MMAP.

2003-05-08  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/fork.c: Complete rewrite of the atfork
	handler implementation.  It is now lockless in fork().
	* sysdeps/unix/sysv/linux/register-atfork.c: Likewise.
	* sysdeps/unix/sysv/linux/unregister-atfork.c: Likewise.
	* sysdeps/unix/sysv/linux/fork.h: Don't include <link.h>.  Don't
	declare the __fork_*_lists.
	(struct fork_handler): Include pointers to all three functions.
	Add next, refcntr and need_signal elements.
	(__fork_handlers): New declaration.
	(__register_atfork_malloc): Remove declaration.
	(HAVE_register_atfork_malloc): Remove definition.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c: Remove
	__pthread_child_handler variable.
	(__libc_pthread_init): Use __register_atfork instead of explicitly
	adding to the list.
	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Define lll_futex_wait
	and lll_futex_wake.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Likewise.

	* unwind.c (unwind_cleanup): Print error message and then abort.  This
	function must never be reached.

	* cond-perf.c: New file.

2003-05-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/tls.h (TLS_INIT_TP): Include \n in error message.

2003-05-04  Roland McGrath  <roland@redhat.com>

	* Makefile ($(objpfx)../libc.so): New target.

2003-05-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h
	(pthread_condattr_t): Size is only an int, don't use long for
	alignment.
	(pthread_mutexattr_t): Likewise.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.

2003-05-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/tls.h: Define THREAD_ID.
	* sysdeps/ia64/tls.h: Likewise.
	* sysdeps/powerpc/tls.h: Likewise.
	* sysdeps/s390/tls.h: Likewise.
	* sysdeps/sh/tls.h: Likewise.
	* sysdeps/x86_64/tls.h: Likewise.
	* pthread_mutex_lock.c: Use THREAD_ID instead of THREAD_SELF to
	record ownership.
	* pthread_mutex_timedlock.c: Likewise.
	* pthread_mutex_trylock.c: Likewise.
	* pthread_mutex_unlock.c: Likewise.
	* pthread_rwlock_trywrlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlocklock_rdlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_timedrdlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_timedwrlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_wrlock.c: Likewise.

	* sysdeps/pthread/createthread.c (create_thread): Use CLONE_SYSVSEM
	flag.

2003-04-29  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h
	(__SIZEOF_PTHREAD_COND_T): Define to 48.
	(pthread_rwlock_t): Add 16 bytes of pad instead of 8 before __flags.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h (pthread_cond_t):
	Make __align long long instead of long.
	(pthread_rwlock_t): Formatting.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h
	(pthread_rwlock_t): Formatting.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h
	(pthread_cond_t): Make __align long long instead of long.
	(pthread_rwlock_t): Move __flags field to the same position as in
	linuxthreads.

2003-04-30  Ulrich Drepper  <drepper@redhat.com>

	* tst-rwlock6.c (do_test): Use correct printf format specifiers.
	* tst-rwlock7.c (do_test): Likewise.

2003-04-26  Roland McGrath  <roland@redhat.com>

	* Makefile ($(test-modules)): Depend on $(common-objpfx)shlib.lds.

2003-04-22  Jakub Jelinek  <jakub@redhat.com>

	* allocatestack.c (TLS_TPADJ): Add TLS_PRE_TCB_SIZE instead of
	sizeof (struct pthread).
	(allocate_stack): Subtract TLS_PRE_TCB_SIZE bytes instead of
	1 struct pthread.
	* sysdeps/powerpc/tls.h (TLS_INIT_TCB_SIZE, TLS_TCB_SIZE): Define
	to 0.
	(TLS_INIT_TCB_ALIGN, TLS_TCB_ALIGN): Define to alignment of
	struct pthread.
	(TLS_PRE_TCB_SIZE): Increase to cover tcbhead_t preceeded by pad
	to 32-bit bytes.
	(INSTALL_DTV, GET_DTV, THREAD_DTV): tcbhead_t is immediately before
	tcbp.
	(TLS_INIT_TP, THREAD_SELF, INIT_THREAD_SELF): Don't add TLS_TCB_SIZE
	unneccessarily.
	(NO_TLS_OFFSET): Define.
	* sysdeps/unix/sysv/linux/powerpc/createthread.c (TLS_VALUE): Don't
	add TLS_TCB_SIZE unnecessarily.

2003-04-22  Roland McGrath  <roland@redhat.com>

	* Makeconfig (shared-thread-library): Reverse link order to work
	around linker bug.

2003-04-22  Ulrich Drepper  <drepper@redhat.com>

	* semaphore.h: Fix typo in comment.

2003-04-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/sigfillset.c: New file.

	* init.c (__pthread_initialize_minimal): Don't block SIGTIMER.
	* pthreadP.h: Make SIGTIMER and SIGCANCEL the same.
	* sysdeps/pthread/pthread_sigmask.c: Remove handling of SIGTIMER.
	* sysdeps/pthread/sigaction.c: Likewise.
	* sysdeps/pthread/sigprocmask.c: New file.
	* sysdeps/unix/sysv/linux/allocrtsig.c (current_rtmin): Define as
	__SIGRTMIN+1.
	* sysdeps/unix/sysv/linux/timer_routines.c (timer_helper_thread):
	Block SIGTIMER.  Also handle SI_TKILL events and terminate thread
	in this case.

2003-04-19  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h
	(DL_SYSINFO_IMPLEMENTATION): Add .eh_frame information.

	* sysdeps/unix/sysv/linux/unregister-atfork.c
	(__unregister_atfork): Don't free memory not allocated dynamically.

	* semaphore.h: Remove __THROW marker from cancellation points.
	* nptl/sysdeps/pthread/pthread.h: Likewise.

2003-04-18  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h: Don't mark pthread_testcancel,
	pthread_cancel, pthread_setcancelstate, and pthread_setcanceltype with
	__THROW.

2003-04-16  Jakub Jelinek  <jakub@redhat.com>

	* tst-cancel4.c (do_test): Use %zd instead of %d when printing cnt.

2003-04-15  Roland McGrath  <roland@redhat.com>

	* forward.c (__pthread_unwind): Tweak to avoid warning.

2003-04-15  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Move THREAD_ATOMIC_* replacements to the top.

2003-04-14  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Don't
	overflow CFA advance instructions.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.

2003-04-14  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/i386/tls.h: Rename LOCK to LOCK_PREFIX.
	* sysdeps/i386/pthread_spin_lock.c: Likewise.
	* sysdeps/x86_64/tls.h: Likewise.  Define LOCK_PREFIX if not already
	defined.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Use
	DW_CFA_advance_loc2 for .Laddl-.Lsubl.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Use
	DW_CFA_advance_loc for .Laddl-.Lsubl.

2003-04-13  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Don't use
	position-independent unwind data for static libraries.
	Add missing unwind info.  Add comments.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Add unwind info.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.

2003-04-12  Ulrich Drepper  <drepper@redhat.com>

	* Makefile: Make sure all cancellation points are compiled with
	exception and asynchronous unwind tables.

	* sysdeps/x86_64/tls.h (THREAD_SETMEM): Word around compiler bug
	which mishandles loading of global object addresses in PIC.
	(THREAD_SETMEM_NC): Likewise.

2003-04-11  Ulrich Drepper  <drepper@redhat.com>

	* pthread.h: Define new data structure for cleanup buffer.  Declare
	new cleanup handler interfaces.
	* descr.h: Include <unwind.h> if necessary.  Define pthread_unwind_buf.
	(struct pthread): Add cleanup_jmp_buf pointer.  Define
	HAVE_CLEANUP_JMP_BUF and not HAVE_CANCELBUF.
	* pthreadP.h: Declare __pthread_unwind.  Define __do_cancel to use
	it.  Declare old cleanup handler installation functions.
	* cleanup.c: Rewrite.  Install handler for unwind-based cleanup
	handling.
	* cleanup_defer.c: Likewise.
	* cleanup_compat.c: New file.  Old cleanup code.
	* cleanup_def_compat.c: New file.  Old cleanup code.
	* pthread_create.c (start_thread): Initialize cleanup_jmp_buf element
	if own thread descriptor.
	* unwind.c: New file.
	* forward.c: Add __pthread_unwind.
	* init.c (pthread_functions): Add __pthread_unwind.
	* sysdeps/pthread/pthread-functions.s (struct pthread_functions):
	Add ptr___pthread_unwind.
	* Versions [GLIBC_2.3.3] (libpthread): Export new cleanup handling
	and unwind function.
	* Makefile (libpthread-routines): Add cleanup_compat,
	cleanup_def_compat, and unwind.  Define CFLAGS to enable unwind
	table generation if necessary.
	* version.c: Record whether unwind support is compiled in.
	* sysdeps/pthread/configure.in: Add checks for unwind unterfaces.
	* sysdeps/pthread/bits/libc-lock.h: Add prototypes of the old cleanup
	handler interfaces.
	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Add quite a bit of
	complication to generate unwind information for syscall wrappers.
	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Define
	__cleanup_fct_attribute.

	* Makefile: Add rules to build and run tst-cleanup0.
	* tst-cleanup0.c: New file.
	* tst-cleanup0.expect: New file.

	* pthread_create.c (deallocate_tsd): Don't take parameter.  Adjust
	caller.  Optimize to avoid often unecessary local variable.

2003-04-11  Roland McGrath  <roland@redhat.com>

	* Makefile ($(objpfx)multidir.mk): New target, generated makefile that
	sets variable `multidir'; include that.
	(generated): Add it.
	($(objpfx)$(multidir)/crti.o): New target.
	[$(multidir) != .] (generated-dirs, extra-objs, omit-deps): Add it.

2003-04-11  Ulrich Drepper  <drepper@redhat.com>

	* tst-attr2.c (do_test): Add cast to avoid warning.
	* tst-mutex4.c (do_test): Likewise.

2003-04-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/fork.c (__libc_fork): Reset CPU clocks
	in child.

2003-04-09  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-detach1.
	* tst-detach1.c: New file.

2003-04-08  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h: Remove duplicate
	pthread_cleanup_{push,pop} definitions.

	* tst-barrier2.c: Eliminate warnings.
	* tst-cancel4.c: Likewise.
	* tst-cond4.c: Likewise.
	* tst-cond6.c: Likewise.
	* tst-detach1.c: Likewise.
	* tst-rwlock4.c: Likewise.
	* tst-rwlock6.c: Likewise.
	* tst-rwlock7.c: Likewise.
	* tst-sem3.c: Likewise.
	* tst-spin2.c: Likewise.
	* tst-umask1.c: Likewise.

2003-04-07  Ulrich Drepper  <drepper@redhat.com>

	* pthread_detach.c (pthread_detach): Fix test for invalid TID.

2003-04-06  Ulrich Drepper  <drepper@redhat.com>

	* descr.h (struct pthread): Move cancelhandling member to the front.

2003-04-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/register-atfork.c: Define malloc_prepare,
	malloc_parent, and malloc_child statically.
	(__register_atfork_malloc): New function.
	(free_mem): Don't free any of the malloc_* variables on the list.
	* sysdeps/unix/sysv/linux/fork.h: Declare __register_atfork_malloc.
	Define HAVE_register_atfork_malloc.

2003-04-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/createthread.c (create_thread): Add some more
	comments explaining when to set multiple_threads and when not.

	* pthreadP.h: Define THREAD_ATOMIC_CMPXCHG_VAL and
	THREAD_ATOMIC_BIT_SET if not already defined.
	* sysdeps/i386/tls.h: Define THREAD_ATOMIC_CMPXCHG_VAL and
	THREAD_ATOMIC_BIT_SET:
	* sysdeps/x86_64/tls.h: Likewise.
	* cleanup_defer.c (_pthread_cleanup_push_defer): Rewrite to use
	THREAD_ATOMIC_CMPXCHG_VAL.
	(_pthread_cleanup_pop_restore): Likewise.
	* cancellation.c (__pthread_enable_asynccancel): Likewise.
	(__pthread_enable_asynccancel_2): Likewise.
	(__pthread_disable_asynccancel): Likewise.
	* libc-cancellation.c (__libc_enable_asynccancel): Likewise.
	(__libc_disable_asynccancel): Likewise.
	* init.c (sigcancel_handler): Likewise.
	* pthread_setcancelstate.c (__pthread_setcancelstate): Likewise.
	* pthread_setcanceltype.c (__pthread_setcanceltype): Likewise.

2003-04-03  Ulrich Drepper  <drepper@redhat.com>

	* init.c (sigcancel_handler): Don't set EXITING_BIT here.
	* libc-cancellation.c (__libc_enable_asynccancel): Likewise.
	* pthreadP.h (__do_cancel): Set EXITING_BIT here.
	* Makefile (tests): Add tst-cancel11.
	* tst-cancel11.c: New file.

2003-04-01  Ulrich Drepper  <drepper@redhat.com>

	* pthread_create.c (deallocate_tsd): Clear/free memory after the last
	round, not the first.  Use specific_used flag instead of local
	found_nonzero variable.  Use THREAD_[SG]ETMEM where possible.
	(__free_tcb): Don't call deallocate_tsd here.
	(start_thread): Call deallocate_tsd here.
	* pthread_setspecific.c: Set specific_used flag really only when
	needed.
	* Makefile (tests): Add tst-tsd3.c and tst-tsd4.
	* tst-tsd3.c: New file.
	* tst-tsd4.c: New file.

2003-03-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (__lll_mutex_lock):
	Use atomic_exchange_and_add instead of __lll_add.
	(__lll_mutex_timedlock): Likewise.
	Patch by Ian Wienand.

2003-03-24  Steven Munroe  <sjmunroe@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h
	(SINGLE_THREAD_P): Fix typo.
	* tst-cancel-wrappers.sh: Handle '.'ed symbols.

2003-03-31  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-align.
	* tst-align.c: New file.
	* sysdeps/i386/Makefile: Define CFLAGS-tst-align.

	* sysdeps/i386/tls.h (CALL_THREAD_FCT): Align stack of called
	function correctly.

	* tst-tsd2.c: Add casts to avoid warnings.

2003-03-30  Ulrich Drepper  <drepper@redhat.com>

	* descr.h (struct pthread): Move most often used elements to the front.

2003-03-29  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (libpthread-routines): Add pthread_atfork.
	(libpthread-static-only-routines): Add pthread_atfork.

2003-03-28  Kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/tls.h: Include nptl/descr.h after the definition
	of TLS_DTV_AT_TP.
	(INSTALL_DTV): Add parens.
	(THREAD_GETMEM, THREAD_GETMEM_NC, THREAD_SETMEM, THREAD_SETMEM_NC):
	Use passed descr instead of THREAD_SELF.
	* sysdeps/unix/sysv/linux/sh/lowlevelmutex.S
	(__lll_mutex_timedlock_wait): Correct expected value after
	spurious wakeup.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S:
	Release lock before waking up the waiters.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: Correct exit
	criteria.  Reorderstruct passed to cleanup handler.  Fix
	handling of cancellation and failung pthread_mutex_unlock call.
	Use __pthread_enable_asynccancel_2 instead of
	__pthread_enable_asynccancel.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.
	Return result of lock re-get if it fails.
	* sysdeps/unix/sysv/linux/sh/pthread_once.S: Fix wrong argument
	for __pthread_cleanup_push.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_rdlock.S: Fix
	completely broken rwlock implementation.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedrdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedwrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_unlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_post.S: Fix error value.  Use
	versioned_symbol macro.
	* sysdeps/unix/sysv/linux/sh/sem_trywait.S: Use	versioned_symbol macro.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S: Likewise.

2003-03-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/kernel-posix-timers.h: Don't declare
	__timer_helper_thread.  Declare __start_helper_thread, __helper_once,
	and __helper_tid.
	(struct timer): Remove th and bar field.
	* sysdeps/unix/sysv/linux/timer_create.c (timer_create): Remove
	debugging code.  Create only one helper thread.
	* sysdeps/unix/sysv/linux/timer_delete.c (timer_delete): Don't kill
	helper thread.
	* sysdeps/unix/sysv/linux/timer_routines.c (timer_helper_thread):
	Renamed.  Define statically.  Use thread info from siginfo.
	(__helper_once): New variable.
	(__helper_tid): New variable.
	(__reset_helper_control): New function.
	(__start_helper_thread): New function.

	* pthread_create.c (start_thread): Don't use setjmp inside
	__builtin_expect to work around gcc bug.

	* sysdeps/unix/sysv/linux/timer_delete.c (timer_delete): Even if
	timer_delete syscall fails, but not with ENOSYS, set
	__no_posix_timers.

	* sysdeps/unix/sysv/linux/timer_settime.c [!__ASSUME_POSIX_TIMERS]
	(timer_settime): Fix typo.
	* sysdeps/unix/sysv/linux/timer_getoverr.c
	[!__ASSUME_POSIX_TIMERS] (timer_getoverrun): Likewise.

2003-03-27  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Fix
	offset of cleanupbuf.__prev.

2003-03-26  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/timer_getoverr.c: Fix typo in name
	of included file.

2003-03-26  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/timer_create.c (timer_create): If EVP ==
	NULL provide default definition to syscall.

2003-03-25  Roland McGrath  <roland@redhat.com>

	* sysdeps/pthread/posix-timer.h (TIMER_MAX): Define if not defined.
	(timer_id2ptr): Fix typo.

2003-03-25  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Define SIGCANCEL and SIGTIMER.
	* sysdeps/i386/pthreaddef.h: Remove SIGCANCEL definition.
	* sysdeps/ia64/pthreaddef.h: Likewise.
	* sysdeps/powerpc/pthreaddef.h: Likewise.
	* sysdeps/s390/pthreaddef.h: Likewise.
	* sysdeps/sh/pthreaddef.h: Likewise.
	* sysdeps/x86_64/pthreaddef.h: Likewise.
	* init.c (__pthread_initialize_minimal): Block SIGTIMER.
	* sysdeps/pthread/sigaction.c: Also prevent SIGTIMER handler from
	being changed.
	* sysdeps/pthread/pthread_sigmask.c (pthread_sigmask): Make sure
	SIGTIMER is not unblocked.
	* sysdeps/unix/sysv/linux/allocrtsig.c (current_rtmin): One more
	RT signal taken.
	* sysdeps/unix/sysv/linux/pthread_kill.c: Do not allow SIGTIMER to
	be send.
	* sysdeps/pthread/posix-timer.h (timer_id2ptr, timer_ptr2id): Just
	pass pointer through as ID.
	* sysdeps/unix/sysv/linux/bits/local_lim.h (TIMER_MAX): Removed.
	* sysdeps/unix/sysv/linux/kernel-posix-timers.h: New file.
	* sysdeps/unix/sysv/linux/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/timer_routines.c: New file.
	* sysdeps/unix/sysv/linux/timer_settime.c: New file.
	* sysdeps/unix/sysv/linux/ia64/Versions: New file.
	* sysdeps/unix/sysv/linux/ia64/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/ia64/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/ia64/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/ia64/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/ia64/timer_settime.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/Versions: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/timer_settime.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/Versions: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/timer_settime.c: New file.
	* sysdeps/unix/sysv/linux/x86_64/Versions: New file.
	* sysdeps/unix/sysv/linux/x86_64/compat-timer.h: New file.
	* sysdeps/unix/sysv/linux/x86_64/timer_create.c: New file.
	* sysdeps/unix/sysv/linux/x86_64/timer_delete.c: New file.
	* sysdeps/unix/sysv/linux/x86_64/timer_getoverr.c: New file.
	* sysdeps/unix/sysv/linux/x86_64/timer_gettime.c: New file.
	* sysdeps/unix/sysv/linux/x86_64/timer_settime.c: New file.

	* pthreadP.h: Remove FRAME_LEFT definition.
	* cleanup.c (_pthread_cleanup_push): Don't check for reference to
	already left frame.  Programs which have this problem are not POSIX
	compliant.
	* cleanup_defer.c (_pthread_cleanup_push_defer): Likewise.

2003-03-24  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/tst-timer.c: Check return values of the
	functions we test.

2003-03-23  Roland McGrath  <roland@redhat.com>

	* tst-tls3.c (do_test) [! HAVE___THREAD]: Don't test anything.
	* tst-tls3mod.c: Likewise.
	* tst-tls1.c: Likewise.
	* tst-tls2.c: Likewise.

	* tst-mutex5.c (do_test): Unlock before destroy, otherwise we invoke
	undefined behavior.

	* tst-join5.c (tf1, tf2): Add a cast.

	* Makeconfig (includes): Append -I$(..)nptl to this variable.

	* tst-barrier2.c (do_test) [! _POSIX_THREAD_PROCESS_SHARED]:
	Don't test anything.
	* tst-cond4.c: Likewise.
	* tst-cond6.c: Likewise.
	* tst-flock2.c: Likewise.
	* tst-mutex4.c: Likewise.
	* tst-rwlock4.c: Likewise.
	* tst-signal1.c: Likewise.
	* tst-spin2.c: Likewise.
	* tst-cond11.c [! _POSIX_CLOCK_SELECTION]: Likewise.

	* tst-mutex4.c: Use test-skeleton.c.
	* tst-spin2.c: Likewise.
	* tst-sysconf.c: Likewise.
	* tst-barrier2.c: Likewise.
	* tst-cond4.c: Likewise.
	* tst-cond6.c: Likewise.
	* tst-rwlock4.c: Likewise.
	* tst-unload.c: Likewise.
	* tst-flock2.c (do_test): Use return instead of exit.

2003-03-22  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/fork.c (__fork): Add libc_hidden_def.

2003-03-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h
	(__lll_mutex_trylock): Use atomic_compare_and_exchange_val_acq
	instead of __lll_compare_and_swap.
	* sysdeps/unix/sysv/linux/ia64/pthread_once.c (__pthread_once):
	Likewise.
	Removed definition if __lll_compare_and_swap.

	* cancellation.c: Adjust for new form of compare&exchange macros.
	* cleanup_defer.c: Likewise.
	* init.c: Likewise.
	* libc-cancellation.c: Likewise.
	* old_pthread_cond_broadcast.c: Likewise.
	* old_pthread_cond_signal.c: Likewise.
	* old_pthread_cond_timedwait.c: Likewise.
	* old_pthread_cond_wait.c: Likewise.
	* pthread_cancel.c: Likewise.
	* pthread_create.c: Likewise.
	* pthread_detach.c: Likewise.
	* pthread_join.c: Likewise.
	* pthread_key_delete.c: Likewise.
	* pthread_setcancelstate.c: Likewise.
	* pthread_setcanceltype.c: Likewise.
	* pthread_timedjoin.c: Likewise.
	* pthread_tryjoin.c: Likewise.
	* sysdeps/pthread/createthread.c: Likewise.

2003-03-20  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h: Include <atomic.h>.
	Remove __lll_add, __lll_dec_if_positive, and __lll_test_and_set
	definitions.  Replace uses with calls to atomic_* functions.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/lowlevellock.c: Replace __lll_add and
	__lll_test_and_set calls with atomic_exchange_and_add and
	atomic_exchange calls respectively.
	* sysdeps/unix/sysv/linux/sem_post.c: Likewise.
	* sysdeps/unix/sysv/linux/sem_timedwait.c: Likewise.
	* sysdeps/unix/sysv/linux/sem_trywait.c: Likewise.
	* sysdeps/unix/sysv/linux/sem_wait.c: Likewise.
	* sysdeps/unix/sysv/linux/ia64/pthread_once.c: Likewise.
	* sysdeps/unix/sysv/linux/ia64/sem_port.c: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/pthread_once.c: Likewise.

	* allocatestack.c (allocate_stack): Assume atomic_exchange_and_add
	returns the old value.

2003-03-20  Martin Schwidefsky  <sky@mschwid3.boeblingen.de.ibm.com>

	* sysdeps/s390/pthread_spin_lock.c (pthread_spin_lock): Use type
	int for variable OLDVAL and correct inline assembler contraint.
	* sysdeps/s390/pthread_spin_trylock.c (pthread_spin_trylock): Use
	type int for variable OLD.

	* sysdeps/s390/tls.h (TLS_MULTIPLE_THREADS_IN_TCB): Define it
	only for s390-32.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h
	(SINGLE_THREAD_P): Use global variable __local_multiple_threads
	instead of multiple_threads field in the TCB.

2003-03-19  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/i686/bits/atomic.h: Removed.
	* sysdeps/i386/i586/bits/atomic.h: Removed.
	* sysdeps/i386/i486/bits/atomic.h: Removed.  Moved to glibc.
	* sysdeps/x86_64/bits/atomic.h: Removed.  Moved to glibc.
	* sysdeps/s390/bits/atomic.h: Removed.  Moved to glibc.
	* sysdeps/sh/bits/atomic.h: Removed.  Moved to glibc.
	* sysdeps/ia64/bits/atomic.h: Removed.  Moved to glibc.
	* sysdeps/powerpc/bits/atomic.h: Removed.  Moved to glibc.
	* atomic.h: Removed.  Moved to glibc.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Add
	support for clock selection.

	* sysdeps/pthread/pthread_cond_broadcast.c: Release lock before
	signalling waiters.

2003-03-18  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h (__lll_test_and_set):
	Add __lll_rel_instr first.  Add memory clobber.
	(lll_mutex_unlock): Use __lll_test_and_set.
	From Paul Mackerras <paulus@samba.org>.

	* sysdeps/powerpc/tls.h (TLS_MULTIPLE_THREADS_IN_TCB): Define
	unconditionally.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h
	(SINGLE_THREAD_P):  Add `header.' prefix.
	From Paul Mackerras <paulus@samba.org>.

	* Versions (libpthread: GLIBC_2.3.2): Move pthread_tryjoin_np and
	pthread_timedjoin_np to ...
	(libpthread: GLIBC_2.3.3): ... here.
	(libpthread: GLIBC_2.2): Move pthread_barrierattr_getpshared there too.

	* sysdeps/pthread/pthread_cond_timedwait.c (__pthread_cond_timedwait):
	Avoid shadowing VAL variable.

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h (__lll_test_and_set):
	New macro.

2003-03-18  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cond11.
	* tst-cond11.c: New file.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Reorder
	struct passed to cleanup handler to eliminate one more
	instruction.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h
	(pthrad_cond_t): Replace __unused field with __clock.

	* sysdeps/pthread/pthread_cond_wait.c: Release condvar lock before
	waken all waiters in cleanup handler.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.

	* pthread_condattr_getclock.c: New file.
	* pthread_condattr_setclock.c: New file.
	* sysdeps/pthread/pthread.h: Declare these new functions.
	* Versions [GLIBC_2.3.3] (libpthread): Add the new functions.
	* Makefile (libpthread-routines): Add the new functions.
	* sysdeps/unix/sysv/linux/internaltypes.h (struct pthread_condattr):
	Renamed field to value.  Document use of the bits.
	* pthread_condattr_getpshared.c: Adjust for struct pthread_condattr
	change.
	* pthread_condattr_setpshared.c: Likewise.
	* pthread_cond_init.c (__pthread_cond_init): Initialized __clock field.
	* sysdeps/unix/sysv/linux/lowlevelcond.sym: Add cond_clock symbol.
	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_cond_t):
	Add __clock field.
	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S:
	Implement clock selection.
	* sysdeps/pthread/pthread_cond_timedwait.c: Likewise.
	* pthread-errnos.sym: Add ENOSYS.
	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Define
	_POSIX_CLOCK_SELECTION.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Remove
	invalid .size directive.

2003-03-17  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/lowlevellock.c (__lll_lock_wait):
	Formatting tweaks.

2003-03-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/pthread_once.c: Use __builtin_expect.
	Use __lll_add instead of spelling it out.  Use protected symbol names.
	* sysdeps/unix/sysv/linux/ia64/sem_post.c: Use __builtin_expect.
	Use __lll_add.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (__lll_compare_and_swap):
	Renamed from lll_compare_and_swap.  Use new name where necessary.
	(__lll_add): Defined.
	(__lll_dec_if_positive): Defined.
	(__lll_test_and_set): Defined.
	* sysdeps/ia64/pthread_spin_init.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/lowlevelmutex.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/sem_trywait.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/sem_wait.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/libc-lowlevellock.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/libc-lowlevelmutex.c: Removed.
	* sysdeps/unix/sysv/linux/ia64/sem_timedwait.c: Removed.
	* sysdeps/ia64/bits/atomic.h: Add __builtin_expect where appropriate.
	* sysdeps/ia64/pthread_spin_unlock.c (pthread_spin_unlock): Use
	__sync_lock_release_si.
	Patch by Jakub Jelinek.

	* sysdeps/unix/sysv/linux/lowlevellock.c (__lll_timedlock_wait):
	Fix timeout handling.
	(__lll_timedwait_tid): Likewise.
	(lll_unlock_wake_cb): Wake up other waiters if necessary.
	Patch by Jakub Jelinek.

	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h: Pretty printing.

2003-03-17  Roland McGrath  <roland@redhat.com>

	PowerPC port contributed by Paul Mackerras <paulus@samba.org>.
	* sysdeps/pthread/pthread_spin_init.c: New file.
	* sysdeps/pthread/pthread_spin_unlock.c: New file.
	* sysdeps/powerpc/Makefile: New file.
	* sysdeps/powerpc/pthread_spin_lock.c: New file.
	* sysdeps/powerpc/pthread_spin_trylock.c: New file.
	* sysdeps/powerpc/pthreaddef.h: New file.
	* sysdeps/powerpc/tcb-offsets.sym: New file.
	* sysdeps/powerpc/td_ta_map_lwp2thr.c: New file.
	* sysdeps/powerpc/tls.h: New file.
	* sysdeps/powerpc/bits/atomic.h: New file.
	* sysdeps/unix/sysv/linux/libc-lowlevelmutex.c: New file.
	* sysdeps/unix/sysv/linux/libc-lowlevellock.c: New file.
	* sysdeps/unix/sysv/linux/lowlevellock.c: New file.

	* sysdeps/unix/sysv/linux/lowlevelmutex.c: New file.
	* sysdeps/unix/sysv/linux/sem_post.c: New file.
	* sysdeps/unix/sysv/linux/sem_timedwait.c: New file.
	* sysdeps/unix/sysv/linux/sem_trywait.c: New file.
	* sysdeps/unix/sysv/linux/sem_wait.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/Makefile: New file.
	* sysdeps/unix/sysv/linux/powerpc/createthread.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/fork.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/powerpc/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/powerpc/pthread_once.c: New file.
	* sysdeps/unix/sysv/linux/powerpc/bits/pthreadtypes.h: New file.
	* sysdeps/unix/sysv/linux/powerpc/bits/semaphore.h: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep-cancel.h: New file.

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.c: Use __gettimeofday,
	not gettimeofday.
	* sysdeps/unix/sysv/linux/ia64/lowlevelmutex.c: Likewise.
	* sysdeps/unix/sysv/linux/ia64/sem_timedwait.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/lowlevelmutex.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c: Likewise.

2003-03-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_wait.c: Correct exit criteria.
	* sysdeps/pthread/pthread_cond_timedwait.c: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	Patch by Ewald Snel <ewald@rambo.its.tudelft.nl>.

2003-03-16  Roland McGrath  <roland@redhat.com>

	* tst-fork4.c: Include <string.h>.
	* tst-signal2.c: Likewise.
	* tst-mutex5.c (do_test): exit -> return.
	* tst-mutex2.c: Include <stdlib.h>.

2003-03-16  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S
	(__lll_mutex_timedlock_wait): Correct expected value after
	spurious wakeup.  Otherwise we would never wait again.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Work around red
	zone versus inline asm stupidity.  Use correct instructions.

	* tst-rwlock6.c: Add some more status output.

2003-03-15  Roland McGrath  <roland@redhat.com>

	* sysdeps/pthread/configure.in: New file.
	* sysdeps/pthread/configure: New file (generated).

2003-03-15  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (allocate_stack): Store the exact stack size of
	user allocated stacks.

2003-03-15  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h
	(SINGLE_THREAD): Use `header' prefix instead of `header.data'.
	* sysdeps/sh/tcb-offsets.sym (MULTIPLE_THREADS_OFFSET): Likewise.
	* sysdeps/sh/tls.h (TLS_MULTIPLE_THREADS_IN_TCB): Define.
	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h (SINGLE_THREAD_P):
	Use `header.' prefix.
	* sysdeps/ia64/tcb-offsets.sym (MULTIPLE_THREADS_OFFSET): Likewise.

2003-03-15  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/x86_64/pthreaddef.h (CURRENT_STACK_FRAME): Don't use
	__builtin_frame_address, use stack pointer.

	* sysdeps/unix/sysv/linux/jmp-unwind.c: Use CURRENT_STACK_FRAME
	instead of __builtin_frame_pointer.

2003-03-14  Ulrich Drepper  <drepper@redhat.com>

	* tst-basic1.c (do_test): Add cast to avoid warning.
	* tst-basic2.c (do_test): Likewise.

	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: Use correct
	amount of stack correction.

	* tst-fork4.c: Use test-skeleton.c.

2003-03-14  Roland McGrath  <roland@redhat.com>

	* init.c: Fix typo "#eli" for "#else".

2003-03-14  Steven Munroe  <sjmunroe@us.ibm.com>

	* allocatestack.c (__stack_user): Use hidden_data_def.
	* pthread_create.c (__pthread_keys): Likewise.

	* init.c [__powerpc__] (__NR_set_tid_address): Define it.

2003-03-14  Roland McGrath  <roland@redhat.com>

	* tst-fork4.c: New file.
	* Makefile (tests): Add it.

	* descr.h (struct pthread): Move the union out of [!TLS_DTV_AT_TP], so
	we always define the padding space.
	[!TLS_DTV_AT_TP]: Give tcbhead_t field a name, `header', since GCC
	stopped supporting its own extensions fully.
	[TLS_MULTIPLE_THREADS_IN_TCB]: Put `multiple_threads' inside a wrapper
	struct also called `header', so `header.multiple_threads' is the field
	name to use on all machines.
	* allocatestack.c (allocate_stack): Use `header.' prefix.
	* sysdeps/pthread/createthread.c (create_thread): Likewise.
	* pthread_create.c (__pthread_create_2_1): Likewise.
	* sysdeps/i386/tls.h (INSTALL_NEW_DTV, THREAD_DTV): Likewise.
	(THREAD_SELF): Likewise.
	* sysdeps/x86_64/tls.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h
	(SINGLE_THREAD_P): Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h
	(SINGLE_THREAD_P): Likewise.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h
	(SINGLE_THREAD_P): Likewise.

	* sysdeps/s390/td_ta_map_lwp2thr.c (td_ta_map_lwp2thr): Use REGS[18]
	value directly.

2003-03-14  Ulrich Drepper  <drepper@redhat.com>

	* pthread_create.c (start_thread): Use CALL_THREAD_FCT if defined.
	* sysdeps/i386/tls.h: Define CALL_THREAD_FCT.

	* pthread_create.c (start_thread): setjmp is expected to return 0.

	* sysdeps/x86_64/tls.h (THREAD_GETMEM): Mark asms volatile.
	(THREAD_GETMEM_NC): Likewise.

2003-03-13  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (allocate_stack): If MULTI_PAGE_ALIASING is defined
	and the size of the stack which must be allocated is a multiple,
	allocate one more page.
	* sysdeps/i386/i686/Makefile: Don't define COLORING_INCREMENT, but
	MULTI_PAGE_ALIASING.

2003-03-13  Roland McGrath  <roland@redhat.com>

	* pthread_create.c (start_thread): Set EXITING_BIT after the
	event-reporting (and destructors), not before.

2003-03-13  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h (lll_futex_timed_wait,
	lll_futex_wake): Declare register variables as long int instead of
	unsigned long int.  Patch by Ian Wienand <ianw@gelato.unsw.edu.au>.
	Make syscall arguments clobbered by the syscall.
	(lll_futex_wait): Define using lll_futex_timed_wait.

	* sysdeps/ia64/td_ta_map_lwp2thr.c (td_ta_map_lwp2thr): Cast regs[13]
	to void *.

	* sysdeps/unix/sysv/linux/fork.c (__libc_fork): Only declare and set
	PPID if [! NDEBUG].

	* allocatestack.c (nptl_ncreated): Only declare if
	COLORING_INCREMENT != 0.

	* pthreadP.h (__pthread_enable_asynccancel_2): New prototype.
	(__libc_enable_asynccancel_2): Remove prototype.

	* sysdeps/unix/sysv/linux/ia64/fork.c (ARCH_FORK): Swap ptid and
	ctid to match kernel.

2003-03-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/Makefile (sysdep_routines): Add
	libc_multiple_threads.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c: Move definition of
	__libc_multiple_threads to...
	* sysdeps/unix/sysv/linux/libc_multiple_threads.c: ...here.  New file.

	* sysdeps/unix/sysv/linux/x86_64/sem_post.S: Remove unnecessary
	versioning.
	* sysdeps/unix/sysv/linux/x86_64/sem_trywait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S
	(__pthread_once_internal): Define.

	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S: Use shlib-compat.h
	macros instead of .symver directly.
	* sysdeps/unix/sysv/linux/i386/i486/sem_trywait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_wait.S: Likewise.

	* sysdeps/x86_64/tls.h [__ASSEMBLER__]: Include tcb-offsets.h.
	* sysdeps/x86_64/tcb-offsets.sym: New file.
	* sysdeps/x86_64/Makefile: New file.

	* sysdeps/i386/tcb-offsets.sym: Add SELF.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: Use SELF
	to access own pthread_t in TCB.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: Likewise.

2003-03-12  Roland McGrath  <roland@redhat.com>

	* pthread-errnos.sym: New file.
	* Makefile (gen-as-const-headers): New variable, list that file.
	* sysdeps/unix/sysv/linux/i386/i486/sem_wait.S: Include generated
	header <pthread-errnos.h> instead of defining errno values here.
	* sysdeps/unix/sysv/linux/i386/i486/sem_trywait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_trywait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_post.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_trywait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_post.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedwrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedrdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/lowlevelmutex.S: Likewise.
	* sysdeps/i386/i486/pthread_spin_trylock.S: Likewise.
	* sysdeps/x86_64/pthread_spin_trylock.S: Likewise.
	* sysdeps/sh/pthread_spin_trylock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_wrlock.S: Likewise.

	* sysdeps/unix/sysv/linux/fork.c: Add an assert to check that
	CLONE_CHILD_SETTID worked.

2003-03-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedrdlock.S: New
	file.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_timedwrlock.S: New
	file.

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h
	(pthread_cond_t): Add padding.

	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_rdlock.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_wrlock.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/pthread_rwlock_unlock.S: New file.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S
	(__pthread_rwlock_timedwrlock): Add missing opcode suffix.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S
	(__pthread_rwlock_timedrdlock): Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S
	(__pthread_rwlock_wrlock): Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S
	(__pthread_rwlock_rdlock): Likewise.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: New file.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Return
	result of lock re-get if it fails.

2003-03-11  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: Fix asm syntax.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_post.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_trywait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: Likewise.

	* sysdeps/x86_64/tls.h (THREAD_SELF, THREAD_GETMEM, THREAD_GETMEM_NC,
	THREAD_SETMEM, THREAD_SETMEM_NC): Correct asm syntax.

	* allocatestack.c [! TLS_MULTIPLE_THREADS_IN_TCB] (allocate_stack):
	Initialize *__libc_multiple_threads_ptr not __libc_multiple_threads.
	* sysdeps/pthread/createthread.c [! TLS_MULTIPLE_THREADS_IN_TCB]
	(create_thread): Likewise.
	Define __pthread_multiple_threads and __libc_multiple_threads_ptr.
	* init.c (__pthread_initialize_minimal_internal): Initialize
	__libc_multiple_threads_ptr if necessary.
	* pthreadP.h: Adjust prototype for __libc_pthread_init.  Declare
	__pthread_multiple_threads and __libc_multiple_threads_ptr.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c: Define
	__libc_multiple_threads.
	(__libc_pthread_init): Return pointer to __libc_pthread_init if
	necessary.

	* sysdeps/i386/tls.h (THREAD_SETMEM): Fix one-byte variant.
	(THREAD_SETMEM_NC): Likewise.

	* sysdeps/x86_64/pthread_spin_trylock.c: Removed.
	* sysdeps/x86_64/pthread_spin_trylock.S: New file.
	* sysdeps/x86_64/pthread_spin_unlock.c: Removed.
	* sysdeps/x86_64/pthread_spin_unlock.S: New file.

	* sysdeps/i386/i486/pthread_spin_trylock.S (pthread_spin_trylock):
	Eliminate one entire instruction.

	* cancellation.c (__pthread_enable_asynccancel_2): New function.
	* pthreadP.h: Declare __pthread_enable_asynccancel_2.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S
	(__pthread_cond_timedwait): Use __pthread_enable_asynccancel_2
	instead of __pthread_enable_asynccancel.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S
	(__pthread_cond_wait): Likewise.
	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Likewise.
	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait): Likewise.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S
	(__condvar_cleanup): Wake up all waiters in case we got signaled
	after being woken up but before disabling asynchronous
	cancellation.
	* sysdeps/pthread/pthread_cond_wait.c (__condvar_cleanup): Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S
	(__condvar_cleanup): Likewise.

	* init.c (__NR_set_tid_address): If already defined, don't redefine.
	Make it an error if architecture has no #if case.  Add x86-64.

	* sysdeps/unix/sysv/linux/x86_64/Makefile: Add flags for
	pt-initfini.s generation.

	* sysdeps/x86_64/tls.h: Include <asm/prctl.h>.
	(TLS_INIT_TP): Fix typo.

2003-03-11  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/ia64/bits/atomic.h (atomic_exchange_and_add): Swap 2nd and
	3rd argument of __arch_compare_and_exchange_{32,64}_val_acq.

	* sysdeps/unix/sysv/linux/ia64/sem_post.c: Include semaphore.h.
	* sysdeps/unix/sysv/linux/ia64/sem_timedwait.c: Likewise.
	* sysdeps/unix/sysv/linux/ia64/sem_trywait.c: Likewise.
	* sysdeps/unix/sysv/linux/ia64/sem_wait.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_post.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_trywait.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_wait.c: Likewise.

2003-03-11  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Return the result of the final
	locking.  If it succeeds, the regular function return value.

	* sysdeps/pthread/pthread_cond_wait.c (__pthread_cond_wait):
	Return result of the final locking.
	* version.c (__nptl_main): Work around problems with the strange
	INTERNAL_SYSCALL macro on ppc32.
	* init.c (__pthread_initialize_minimal_internal): Unblock
	SIGCANCEL in case the parent blocked it.
	Reported by Paul Mackerras <paulus@samba.org>.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: New file.

2003-03-11  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread_cond_timedwait.c
	(__pthread_cond_timedwait): Unlock and fail if
	__pthread_mutex_unlock_internal failed.

	* sysdeps/pthread/createthread.c (ARCH_CLONE): Define if not defined.
	(create_thread): Only assert PD->tcb != NULL under [TLS_TCB_AT_TP].
	Use ARCH_CLONE.
	* allocatestack.c (ALLOCATE_STACK_PARMS): New macro.
	[NEED_SEPARATE_REGISTER_STACK] (STACK_VARIABLES,
	STACK_VARIABLES_ARGS, STACK_VARIABLES_PARMS, ALLOCATE_STACK_PARMS,
	ALLOCATE_STACK): New macros.
	(TLS_TPADJ): New macro.
	(get_cached_stack, queue_stack, __deallocate_stack): Use TLS_TPADJ.
	(allocate_stack): Handle TLS_DTV_AT_TP and
	NEED_SEPARATE_REGISTER_STACK.  Use TLS_TPADJ.
	* pthread_create.c (__pthread_create_2_1) [! TLS_TCB_AT_TP]:
	Don't set PD->self.
	* init.c [__ia64__] (__NR_set_tid_address): Define.

	* sysdeps/unix/sysv/linux/ia64/bits/pthreadtypes.h: New file.
	* sysdeps/unix/sysv/linux/ia64/bits/semaphore.h: New file.
	* sysdeps/unix/sysv/linux/ia64/fork.c: New file.
	* sysdeps/unix/sysv/linux/ia64/createthread.c: New file.
	* sysdeps/unix/sysv/linux/ia64/libc-lowlevellock.c: New file.
	* sysdeps/unix/sysv/linux/ia64/libc-lowlevelmutex.c: New file.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.c: New file.
	* sysdeps/unix/sysv/linux/ia64/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/ia64/lowlevelmutex.c: New file.
	* sysdeps/unix/sysv/linux/ia64/pt-initfini.c: New file.
	* sysdeps/unix/sysv/linux/ia64/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/ia64/pthread_once.c: New file.
	* sysdeps/unix/sysv/linux/ia64/sem_post.c: New file.
	* sysdeps/unix/sysv/linux/ia64/sem_timedwait.c: New file.
	* sysdeps/unix/sysv/linux/ia64/sem_trywait.c: New file.
	* sysdeps/unix/sysv/linux/ia64/sem_wait.c: New file.
	* sysdeps/unix/sysv/linux/ia64/sysdep-cancel.h: New file.
	* sysdeps/ia64/bits/atomic.h: New file.
	* sysdeps/ia64/Makefile: New file.
	* sysdeps/ia64/pthread_spin_init.c: New file.
	* sysdeps/ia64/pthread_spin_lock.c: New file.
	* sysdeps/ia64/pthread_spin_trylock.c: New file.
	* sysdeps/ia64/pthread_spin_unlock.c: New file.
	* sysdeps/ia64/pthreaddef.h: New file.
	* sysdeps/ia64/tcb-offsets.sym: New file.
	* sysdeps/ia64/td_ta_map_lwp2thr.c: New file.
	* sysdeps/ia64/tls.h: New file.

	* sysdeps/s390/pthreaddef.h (__exit_thread_inline): Pass 1 argument
	to syscall instead of no arguments.

2003-03-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/sem_post.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/sem_trywait.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: New file.

	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S: Fix error value in
	unused code.

	* sysdeps/unix/sysv/linux/x86_64/pthread_barrier_wait.S: New file

	* sysdeps/unix/sysv/linux/Makefile (gen-as-const-headers): Add
	lowlevelbarrier.sym.
	* sysdeps/unix/sysv/linux/lowlevelbarrier.sym: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S:
	Include lowlevelbarrier.h and don't define offsets locally.
	* sysdeps/unix/sysv/linux/sh/pthread_barrier_wait.S: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h
	(__lll_mutex_lock_wait): Reverse order of first two parameters.
	(__lll_mutex_timedlock_wait): Likewise.
	(lll_mutex_lock): Adjust asm for that.
	(lll_mutex_timedlock): Likewise.  Mark cx, cc, r10 as clobbered.
	(lll_lock): Adjust asm for operand order change.
	* sysdeps/unix/sysv/linux/x86_64/lowlevelmutex.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/libc-lowlevelmutex.S: New file.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (__lll_lock_wait):
	Reverse order of parameters.
	(__lll_timedwait_tid): Remove regparms attribute.
	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: New file.
	* sysdeps/unix/sysv/linux/x86_64/libc-lowlevellock.S: New file.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(__lll_timedwait_tid): Remove one unnecessary instruction.

	* sysdeps/unix/sysv/linux/sh/lowlevelmutex.S: Define
	__lll_mutex_timedlock_wait only for NOT_IN_libc.
	* sysdeps/unix/sysv/linux/sh/libc-lowlevelmutex.S: Include
	lowlevelmutex.S.

	* sysdeps/unix/sysv/linux/sh/lowlevellock.S: Define
	lll_unlock_wake_cb, __lll_wait_tid, and __lll_timedwait_tid only
	for NOT_IN_libc.
	* sysdeps/unix/sysv/linux/sh/libc-lowlevellock.S: Include
	lowlevellock.S.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S: Don't define
	LOCK is already defined.  Don't define __lll_mutex_timedlock_wait
	for libc.so.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevelmutex.S: Only
	define LOCK here (if UP is not defined).  The actual code is in
	lowlevelmutex.S.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S: Don't define
	LOCK is already defined.  Don't define lll_unlock_wake_cb and
	__lll_timedwait_tid for libc.so.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Only
	define LOCK here (if UP is not defined).  The actual code is in
	lowlevellock.S.

	* sysdeps/unix/sysv/linux/i386/lowlevelsem.h: Not needed anymore.
	* sysdeps/unix/sysv/linux/s390/lowlevelsem.h: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_post.c: Include lowlevellock.h
	instead of lowlevelsem.h.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_trywait.c: Likewise.
	* sysdeps/unix/sysv/linux/s390/sem_wait.c: Likewise.

	* sysdeps/unix/sysv/linux/Makefile (gen-as-const-headers): Add
	lowlevelrwlock.sym.
	* sysdeps/unix/sysv/linux/lowlevelrwlock.sym: New file.
	* sysdeps/unix/sysv/linux/i386/lowlevelrwlock.h: Removed.
	* sysdeps/unix/sysv/linux/sh/lowlevelrwlock.h: Removed.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_trylock): Fix
	register loading.
	* sysdeps/unix/sysv/linux/i386/lowlevellock.h (lll_trylock): Undo
	last changed.  D'oh.

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h: New file.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Remove declaration
	of __libc_locking_needed.
	(lll_trylock): Initialize %eax to zero.

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Update
	pthread_cond_t definition.

2003-03-10  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/lowlevelcond.sym: New file.
	* sysdeps/unix/sysv/linux/Makefile (gen-as-const-headers): Add it.
	* sysdeps/unix/sysv/linux/sh/lowlevelcond.h: File removed.
	* sysdeps/unix/sysv/linux/i386/lowlevelcond.h: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/lowlevelcond.h: Likewise.

	* allocatestack.c (allocate_stack) [!TLS_MULTIPLE_THREADS_IN_TCB]:
	Instead of setting PD->multiple_threads, set globals
	__pthread_multiple_threads and __libc_multiple_threads.
	* sysdeps/pthread/createthread.c (create_thread): Likewise.
	* sysdeps/i386/tls.h (TLS_MULTIPLE_THREADS_IN_TCB): Define it.
	* sysdeps/s390/tls.h (TLS_MULTIPLE_THREADS_IN_TCB): Likewise.

	* descr.h (struct pthread): Conditionalize first member on
	[!TLS_DTV_AT_TP].  Replace the `header' member with an anonymous union
	containing an anonymous tcbhead_t.  Move `list' member out.
	[TLS_MULTIPLE_THREADS_IN_TCB]: Define a `multiple_threads' member.
	* allocatestack.c: Remove use of `header.data.' prefix.
	* pthread_create.c: Likewise.
	* init.c (__pthread_initialize_minimal_internal): Likewise.
	* sysdeps/pthread/createthread.c (create_thread): Likewise.
	* sysdeps/i386/tls.h (INSTALL_DTV): Add parens.
	(THREAD_SELF, THREAD_DTV, INSTALL_NEW_DTV): No `header.data.' prefix.
	* sysdeps/x86_64/tls.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h
	(SINGLE_THREAD_P): Likewise.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h
	(SINGLE_THREAD_P): Likewise.
	* sysdeps/i386/tls.h (tcbhead_t): Remove `list' member.
	* sysdeps/s390/tls.h (tcbhead_t): Likewise.

2003-03-09  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevelcond.h: New file.

	* sysdeps/unix/sysv/linux/x86_64/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/x86_64/fork.c: New file.

	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: Fix many
	leftovers from the ia32 code.

	* sysdeps/unix/sysv/linux/i386/pthread_once.S: Remove unneccessary
	memory load.
	(clear_once_control): Don't load %esi.

	* sysdeps/x86_64/tls.h: Remove all traces of segment descriptor
	handling.

	* sysdeps/unix/sysv/linux/x86_64/fork.c: New file.

	* sysdeps/unix/sysv/linux/s390/createthread.c: Moved to...
	* sysdeps/unix/sysv/linux/createthread.c: ...here.

	* Makefile (tests): Add tst-cond10.
	* tst-cond10.c: New file.

2003-03-08  Ulrich Drepper  <drepper@redhat.com>

	* tst-tls2.c (do_test): Add TEMP_FAILURE_RETRY around sem_wait call.
	* tst-signal3.c (do_test): Likewise.
	* tst-sem5.c (do_test): Likewise.
	* tst-kill6.c (do_test): Likewise.
	* tst-tls3.c (do_test): Likewise.  Include <errno.h>.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Use add/sub instead
	of inc/dec.
	* sysdeps/unix/sysv/linux/i386/lowlevelsem.h: Likewise.
	* sysdeps/unix/sysv/linux/i386/pthread_once.S: Likewise
	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_unlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S: Likewise.

	* allocatestack.c (allocate_stack): If mprotect() fails free the
	TLS memory.

2003-03-07  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/i486/bits/atomic.h: Fix a few unused definitions.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Remove all trace of
	lll_wake_tid.  This was used only to work around kernel limits in
	the early days.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.h: Likewise.
	* sysdeps/unix/sysv/linux/sh/libc-lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.h: Likewise.

	* init.c (__static_tls_align_m1): Renamed from __static_tls_align.
	(__pthread_initialize_minimal_internal): Change initialization of
	__static_tls_align_m1 appropriately.
	* pthreadP.h (__static_tls_align_m1): Renamed from
	__static_tls_align.
	* allocatestack.c (allocate_stack): Use __static_tls_align_m1
	instead of __static_tls_align-1.

2003-03-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/x86_64/Makefile: New file.

	* pthread_create.c: Define __pthread_keys using nocommon
	attribute, not by placing it explicitly in bss.
	Remove DEFINE_DEALLOC definition.  Not needed anymore.

	* allocatestack.c: Define ARCH_MAP_FLAGS if not already defined.
	Use it in mmap call to allocate stacks.

	* sysdeps/pthread/createthread.c (create_thread): Fix comment.

	* pthread_create.c (start_thread): Use THREAD_SETMEM to store
	result of the thread function.

2003-03-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/s390/dl-sysdep.h: Removed.  The generic
	version is just fine.

	* sysdeps/unix/sysv/linux/libc_pthread_init.c
	(__pthread_child_handler): Renamed from pthread_child_handler,
	exported, and marked hidden.  Change all users.
	* sysdeps/unix/sysv/linux/register-atfork.c (free_mem): Do not
	free __pthread_child_handler from child list.

2003-03-03  Martin Schwidefsky  <schwidefsky@de.ibm.com>

	* atomic.h (atomic_exchange_and_add): Return newval, not oldval.

	* sysdeps/pthread/pthread_cond_timedwait.c (__pthread_cond_timedwait):
	Fix handling of cancellation and failing pthread_mutex_unlock call.
	* sysdeps/pthread/pthread_cond_wait.c (__condvar_cleanup): Likewise.
	(__pthread_cond_wait): Likewise.

	* sysdeps/pthread/pthread_rwlock_timedrdlock.c
	(pthread_rwlock_timedrdlock): Fix clobber of result variable by
	lll_futex_timed_wait call.
	* sysdeps/pthread/pthread_rwlock_timedwrlock.c
	(pthread_rwlock_timedwrlock): Likewise.

	* sysdeps/unix/sysv/linux/s390/libc-lowlevellock.c (___lll_lock):
	Don't define lll_unlock_wake_cb and ___lll_timedwait_tid in libc.so.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c: Remove XXX comments.

	* sysdeps/unix/sysv/linux/s390/sem_post.c (__new_sem_post): Fix
	check of lll_futex_wake return value.

2003-03-03  Roland McGrath  <roland@redhat.com>

	* forward.c: Fix typo in __pthread_attr_init_2_0 compat_symbol decl.

	* sysdeps/pthread/pthread-functions.h (struct pthread_functions):
	Argument to ptr___pthread_cleanup_upto is __jmp_buf, not jmp_buf.
	* sysdeps/unix/sysv/linux/jmp-unwind.c: Likewise.

2003-03-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/timer_create.c (timer_create): Return correct
	error for CPU clocks.

	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Define
	_POSIX_MONOTONIC_CLOCK.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Likewise.

	* tst-cancel4.c (tf_sleep): Lower sleep time a bit to not upset
	recent kernels.

2003-03-01  Ulrich Drepper  <drepper@redhat.com>

	* descr.h (struct pthread): Move cleanup field to the front.

2003-03-01  Roland McGrath  <roland@redhat.com>

	* sem_open.c (sem_open): Braino fix.

2003-03-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/tcb-offsets.sym: Add CLEANUP and CLEANUP_PREV.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Inline
	__pthread_cleanup_pop functionality.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.

	* descr.h (struct pthread): Move tid field to the front now that
	it is often used.

	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevelmutex.S
	(__lll_mutex_timedlock_wait): Remove.
	(__lll_mutex_unlock_wake): Don't save, load, and restore %esi.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S
	(__lll_mutex_unlock_wake): Don't save, load, and restore %esi.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(lll_unlock_wake_cb): Don't save and restore %esi.
	(__lll_unlock_wake): Add alignment.  Don't save, load, and restore
	%esi.
	(__lll_timedwait_tid): Add alignment.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S
	(__lll_unlock_wake): Add alignment.  Don't save, load, and restore
	%esi.
	(__lll_timedwait_tid): Removed.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S
	(__pthread_cond_broadcast): Don't save, load, and restore %esi.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S
	(pthread_barrier_wait): Don't save, load, and restore %esi for
	last thread.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S
	(__pthread_cond_signal): Don't save, load, and restore %esi.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_unlock.S
	(__pthread_rwlock_unlock): Don't save, load, and restore %esi.
	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S (__new_sem_post):
	Don't save, load, and restore %esi.

2003-02-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S:
	Release lock before waking up the waiters.

	* tst-exit1.c (do_test): Don't start more than one thread in parallel.

	* tst-rwlock9.c (writer_thread): Correct adding TIMEOUT.
	(reader_thread): Likewise.

	* sysdeps/pthread/pthread_rwlock_unlock.c
	(__pthread_rwlock_unlock): Release internal lock early.  Don't try
	to wake up readers if there are none.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_unlock.S:
	Release internal lock before wake threads.

2003-02-26  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-rwlock10 and tst-rwlock11.
	* tst-rwlock8.c: Initialize lock with INIT.  Allow INIT to be
	predefined.
	* tst-rwlock9.c: Likewise.
	* tst-rwlock10.c: New file.
	* tst-rwlock11.c: New file.

	* Makefile (tests): Add tst-dlsym1.
	* tst-dlsym1.c: New file.

	* init.c (__pthread_initialize_minimal_internal): Set
	GL(dl_error_catch_tsd) to __libc_dl_error_tsd.
	* Versions (libc:GLIBC_PRIVATE): Export __libc_dl_error_tsd.

2003-02-24  Ulrich Drepper  <drepper@redhat.com>

	* sem_open.c (sem_open): Fix handling of O_CREAT without O_EXCL.

	* tst-cond2.c: Fix sychronization with child.

	* tst-rwlock8.c (reader_thread): Remove unused variable.

	* Makefile: Add rules to build and run tst-tls3.
	* tst-tls3.c: New file.
	* tst-tls3mod.c: New file.

	* Makefile (tests): Add tst-rwlock8 and tst-rwlock9.
	* tst-rwlock8.c: New file.
	* tst-rwlock9.c: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: Fix
	complete broken rwlock implementation.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_unlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: Likewise.
	* sysdeps/pthread/pthread_rwlock_rdlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_timedrdlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_timedwrlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_unlock.c: Likewise.
	* sysdeps/pthread/pthread_rwlock_wrlock.c: Likewise.

2003-02-23  Roland McGrath  <roland@redhat.com>

	* Makefile (nptl-version): Change regexp so case sensitivity is ok.

2003-02-23  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-context1.
	* tst-context1.c: New file.

	* Makefile (tests): Add tst-tls1 and tst-tls2.
	* tst-tls1.c: New file.
	* tst-tls2.c: New file.

	* libc-cancellation.c (__libc_enable_asynccancel): Correct test
	for failed cmpxchg.

	* pthread_create.c (start_thread): Set EXITING_BIT early.

	* sysdeps/i386/tls.h (THREAD_GETMEM): Mark asm as volatile.
	(THREAD_GETMEM_NC): Likewise.

2003-02-22  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S: Shave
	off 3 more bytes by using offset-less instructions when possible.

	* Makefile: Add dependency for $(objpfx)version.d.

	* eintr.c (eintr_source): Add unnecessary return but the compiler
	insists.

	* tst-kill3.c: Include <unistd.h>.

2003-02-21  Roland McGrath  <roland@redhat.com>

	* pthread_create.c (start_thread): Call __libc_thread_freeres.

2003-02-21  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-eintr1.
	(distribute): Add eintr.c.
	* tst-eintr1.c: New file.
	* eintr.c: New file.

	* pthread_cancel.c (pthread_cancel): Use tkill directly.

	* sysdeps/unix/sysv/linux/pthread_kill.c (__pthread_kill):
	Disallow sending SIGCANCEL.

	* Makefile (tests): Remove tst-basic7.  Add tst-kill1, tst-kill2,
	tst-kill3, tst-kill4, tst-kill5, tst-kill6.
	* tst-kill1.c: New file.
	* tst-kill2.c: New file.
	* tst-kill3.c: New file.
	* tst-kill5.c: New file.
	* tst-kill6.c: New file.
	* tst-basic7.c: Renamed to...
	* tst-kill4.c: ...this.

2003-02-21  Roland McGrath  <roland@redhat.com>

	* Makefile (install-lib-ldscripts): New variable.

2003-02-21  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Define INVALID_TD_P and INVALID_NOT_TERMINATED_TD_P.
	* pthread_cancel.c: Use INVALID_TD_P.
	* pthread_detach.c: Likewise.
	* pthread_getschedparam.c: Likewise.
	* pthread_setschedparam.c: Likewise.
	* sysdeps/pthread/pthread_getcpuclockid.c: Likewise.
	* sysdeps/unix/sysv/linux/pthread_kill.c: Likewise.
	* pthread_join.c: Use INVALID_NOT_TERMINATED_TD_P.
	* pthread_timedjoin.c: Likewise.

	* tst-basic7.c: Include <signal.h>.

	* pthread_join.c (pthread_join): Limited checking for invalid
	descriptors.
	* pthread_timedjoin.c (pthread_timedjoin_np): Likewise.

2003-02-20  Ulrich Drepper  <drepper@redhat.com>

	* pthread_create.c (deallocate_tsd): Reset found_nonzero at the
	beginning of the loop.  Clear the entire first block of TSD.
	* Makefile (tests): Add tst-key4.
	* tst-key4.c: New file.

2003-02-18  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-basic7.
	* tst-basic7.c: New file.

	* pthread_create.c (deallocate_tsd): Mark as internal_function.
	Add some more __builtin_expect.

	* pthreadP.h: Define dummy version of DEBUGGING_P.

2003-02-17  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Remnove
	_POSIX_THREAD_PRIORITY_SCHEDULING.
	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: Remove
	_XOPEN_REALTIME_THREADS.
	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Likewise.

	* sysdeps/unix/sysv/linux/pthread_kill.c (__pthread_kill): The
	kernel returns EINVAL for PID <= 0, work around it.

	* Makefile (tests): Add tst-signal5.
	* tst-signal5.c: New file.

	* sysdeps/unix/sysv/linux/bits/local_lim.h: Define TTY_NAME_MAX
	and LOGIN_NAME_MAX.

	* tst-cancel1.c (tf): Block all signals.

	* Makefile (tests): Add tst-basic6.
	* tst-basic6.c: New file.

	* tst-basic1.c: Add test for process ID.

	* Makefile (tests): Add tst-cancel10.
	* tst-cancel10.c: New file.

	* Makefile (tests): Add tst-signal4.
	* tst-signal4.c: New file.

	* sysdeps/pthread/pthread_sigmask.c (pthread_sigmask): Use
	__sigismember instead of sigismember.  Add __builtin_expect.

2003-02-16  Ulrich Drepper  <drepper@redhat.com>

	* tst-attr1.c (do_test): Add tests for pthread_setcanceltype,
	pthread_setcancelstate, and pthread_rwlock_setpshared.

	* tst-cancel7.c (do_test): Make sure the pid file exists before
	canceling the thread.

	* tst-rwlock6.c: More pthread_rwlock_timedwrlock and
	pthread_rwlock_timedrdlock tests.
	* tst-rwlock7.c: More pthread_rwlock_timedwrlock tests.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	Check for invalid tv_nsec field.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	Likewise.

	* pthread_mutex_trylock.c (__pthread_mutex_trylock): Protect
	recursive mutex of overflow.

	* tst-attr1.c (do_test): Add test for pthread_mutexattr_setpshared.

	* libc-cancellation.c (__libc_enable_asynccancel): Rewrite to avoid
	going into an endless loop.
	* Makefile (tests): Add tst-cancel9.
	* tst-cancel9.c: New file.

	* pthread_cancel.c (pthread_cancel): Use the result of __pthread_kill.

2003-02-15  Ulrich Drepper  <drepper@redhat.com>

	* tst-mutex5.c (do_test): Add more timedlock tests.

	* tst-mutex2.c: Tests of trylock and unlock with ERROR mutexes.
	* tst-mutex3.c (do_test): Add tests for trylock with RECURSIVE mutexes.

	* sysdeps/unix/sysv/linux/pthread_kill.c (__pthread_kill): Don't
	use INLINE_SYSCALL.  Error number is returned, not -1.

	* pthreadP.h: Mark declarations of __find_in_stack_list, __free_tcb,
	and __deallocate_stack with internal_function.
	* pthread_create.c: Adjust definitions appropriately.
	* allocatestack.c: Likewise.

	* pthread_join.c: Add one more __builtin_expect.
	* pthread_timedjoin.c: Likewise.

	* pthread_getspecific.c (__pthread_getspecific): Clear data->data
	not data of sequence number does not match.
	Add one __builtin_expect.

	* Makefile (tests): Add tst-clock1.
	* tst-clock1.c: New file.

	* pthread_setconcurrency.c (pthread_setconcurrency): Fail for
	negative arguments.
	* Makefile (tests): Add tst-basic5.
	* tst-basic5.c: New file.

2003-02-14  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-basic4.
	* tst-basic4.c: New file.

	* pthreadP.h: Add declaraction for __nptl_nthreads.
	* pthread_create.c: Define __nptl_nthreads
	(start_thread): Increment __nptl_nthreads at beginning.  Decrement
	after thread is done.  If then zero, call exit(0).
	* sysdeps/pthread/pthread-functions.h (struct pthread_functions):
	Add ptr_nthreads.  Define HAVE_PTR_NTHREADS.
	* init.c (pthread_functions): Initialize ptr_nthreads.
	* allocatestack.c (nptl_nthreads): Remove definition and all uses.
	(__reclaim_stacks): Decrement __nptl_nthreads.
	* sysdeps/pthread/Makefile [$(subdir)==csu] (CFLAGS-libc-start.c):
	Define.
	* Makefile (tests): Add tst-basic3.
	* tst-basic3.c: New file.

	* descr.h: Define CANCELING_BIT and CANCELING_BITMASK.  Introduce
	after CANCELTYPE_BIT, move the other bits up.  Update CANCEL_RESTMASK.
	* init.c (sigcancel_handler): Also set CANCELING_BITMASK bit in newval.
	* pthread_cancel.c (pthread_cancel): Likewise.  Also set CANCELING_BIT
	if asynchronous canceling is enabled.
	* pthread_join.c (pthread_join): When recognizing circular joins,
	take into account the other thread might be already canceled.
	* Makefile (tests): Add tst-join5.
	* tst-join5.c: New file.

	* Makefile (tests): Add tst-join4.
	* tst-join4.c: New file.

2003-02-13  Ulrich Drepper  <drepper@redhat.com>

	* tst-cond4.c (main): Add test of pthread_attr_getpshared.

2003-02-13  Martin Schwidefsky  <schwidefsky@de.ibm.com>

	* sysdeps/s390/tls.h (THREAD_GETMEM, THREAD_GETMEM_NC, THREAD_SETMEM,
	THREAD_SETMEM_NC): Use passed descr instead of THREAD_SELF.
	* sysdeps/unix/sysv/linux/s390/jmp-unwind.c (_longjmp_unwind): Avoid
	warning.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c: Include <sys/time.h>
	to avoid warning.
	* sysdeps/unix/sysv/linux/s390/sem_post.c (__new_sem_post): Return
	error if lll_futex_wake failed.

2003-02-13  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Fix
	handling of cancellation and failung pthread_mutex_unlock call.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* Makefile (tests): Add tst-cond8 and tst-cond9.
	* tst-cond8.c: New file.
	* tst-cond9.c: New file.

	* tst-cond7.c (do_test): Unlock the mutex before canceling the thread.

	* sysdeps/pthread/pthread.h: Add missing initializers.  Protect
	non-standard initializers with __USE_GNU.

	* Makefile (tests): Add tst-cleanup3.
	* tst-cleanup3.c: New file.

2003-02-12  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-attr1 and tst-attr2.
	* tst-attr1.c: New file.
	* tst-attr2.c: New file.

	* Makefile: Add rules to build and run tst-atfork2 test.
	* tst-atfork2.c: New file.
	* tst-atfork2mod.c: New file.

	* sysdeps/unix/sysv/linux/unregister-atfork.c
	(__unregister_atfork): Free the memory allocated for the handlers
	after removing them from the lists.

	* sysdeps/unix/sysv/linux/register-atfork.c: Define memeory
	cleanup function.

	* tst-atfork1.c (do_test): Wait for the child we forked.
	Report error in child.

	* sysdeps/unix/sysv/linux/fork.c (__libc_fork): Fix comment.

	* sysdeps/pthread/Makefile: Define CFLAGS-confstr.c.

2003-02-10  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cancel8.
	* tst-cancel8.c: New file.

	* sysdeps/unix/sysv/linux/i386/pthread_once.S (clear_once_control): Fix
	clearing of control variable.
	* Makefile (tests): Add tst-once3 and tst-once4.
	* tst-once3.c: New file.
	* tst-once4.c: New file.

2003-02-08  kaz Kojima  <kkojima@rr.iij4u.or.jp>

	* sysdeps/sh/Makefile: New file.
	* sysdeps/sh/bits/atomic.h: New file.
	* sysdeps/sh/pthread_spin_init.c: New file.
	* sysdeps/sh/pthread_spin_lock.c: New file.
	* sysdeps/sh/pthread_spin_trylock.S: New file.
	* sysdeps/sh/pthread_spin_unlock.S: New file.
	* sysdeps/sh/pthreaddef.h: New file.
	* sysdeps/sh/tcb-offsets.sym: New file.
	* sysdeps/sh/td_ta_map_lwp2thr.c: New file.
	* sysdeps/sh/tls.h: New file.
	* sysdeps/unix/sysv/linux/sh/bits/pthreadtypes.h: New file.
	* sysdeps/unix/sysv/linux/sh/bits/semaphore.h: New file.
	* sysdeps/unix/sysv/linux/sh/createthread.c: New file.
	* sysdeps/unix/sysv/linux/sh/fork.c: New file.
	* sysdeps/unix/sysv/linux/sh/libc-lowlevellock.S: New file.
	* sysdeps/unix/sysv/linux/sh/libc-lowlevelmutex.S: New file.
	* sysdeps/unix/sysv/linux/sh/lowlevel-atomic.h: New file.
	* sysdeps/unix/sysv/linux/sh/lowlevelcond.h: New file.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.S: New file.
	* sysdeps/unix/sysv/linux/sh/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/sh/lowlevelmutex.S: New file.
	* sysdeps/unix/sysv/linux/sh/lowlevelrwlock.h: New file.
	* sysdeps/unix/sysv/linux/sh/pt-initfini.c: New file.
	* sysdeps/unix/sysv/linux/sh/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_barrier_wait.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_broadcast.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_signal.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_cond_wait.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_once.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_rdlock.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedrdlock.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_timedwrlock.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_unlock.S: New file.
	* sysdeps/unix/sysv/linux/sh/pthread_rwlock_wrlock.S: New file.
	* sysdeps/unix/sysv/linux/sh/sem_post.S: New file.
	* sysdeps/unix/sysv/linux/sh/sem_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/sh/sem_trywait.S: New file.
	* sysdeps/unix/sysv/linux/sh/sem_wait.S: New file.
	* sysdeps/unix/sysv/linux/sh/sysdep-cancel.h: New file.

2003-02-08  Ulrich Drepper  <drepper@redhat.com>

	* tst-cond2.c: Rearrange code to not rely on behavior undefined
	according to POSIX.

	* tst-basic2.c (do_test): Lock mutex before creating the thread.

2003-02-07  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/x86_64/tls.h: Remove unnecessary macros, left over from x86.
	(TLS_GET_FS): New #define.
	(TLS_SET_FS): New #define.
	Correct value of __NR_set_thread_area.

	* sysdeps/x86_64/td_ta_map_lwp2thr.c: New file.

2003-02-06  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-popen1.
	* tst-popen1.c: New file.

	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: Remove wrong
	but inactive generalization.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S: Likewise.
	Minor optimization, remove one instruction.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S: Likewise.

2003-02-04  Martin Schwidefsky  <schwidefsky@de.ibm.com>

	* sysdeps/unix/sysv/linux/s390/fork.c: Correct order of parameters.

2003-01-31  Martin Schwidefsky  <schwidefsky@de.ibm.com>

	* init.c (__NR_set_tid_address): Add #ifdef for s390.
	* sysdeps/pthread/pthread_barrier_wait.c: New file.
	* sysdeps/pthread/pthread_cond_broadcast.c: New file.
	* sysdeps/pthread/pthread_cond_signal.c: New file.
	* sysdeps/pthread/pthread_cond_timedwait.c: New file.
	* sysdeps/pthread/pthread_cond_wait.c: New file.
	* sysdeps/pthread/pthread_rwlock_rdlock.c: New file.
	* sysdeps/pthread/pthread_rwlock_timedrdlock.c: New file.
	* sysdeps/pthread/pthread_rwlock_timedwrlock.c: New file.
	* sysdeps/pthread/pthread_rwlock_unlock.c: New file.
	* sysdeps/pthread/pthread_rwlock_wrlock.c: New file.
	* sysdeps/s390/Makefile: New file.
	* sysdeps/s390/bits/atomic.h: New file.
	* sysdeps/s390/pthread_spin_init.c: New file.
	* sysdeps/s390/pthread_spin_lock.c: New file.
	* sysdeps/s390/pthread_spin_trylock.c: New file.
	* sysdeps/s390/pthread_spin_unlock.c: New file.
	* sysdeps/s390/pthreaddef.h: New file.
	* sysdeps/s390/tcb-offsets.sym: New file.
	* sysdeps/s390/td_ta_map_lwp2thr.c: New file.
	* sysdeps/s390/tls.h: New file.
	* sysdeps/unix/sysv/linux/s390/bits/pthreadtypes.h: New file.
	* sysdeps/unix/sysv/linux/s390/bits/semaphore.h: New file.
	* sysdeps/unix/sysv/linux/s390/createthread.c: New file.
	* sysdeps/unix/sysv/linux/s390/dl-sysdep.h: New file.
	* sysdeps/unix/sysv/linux/s390/fork.c: New file.
	* sysdeps/unix/sysv/linux/s390/jmp-unwind.c: New file.
	* sysdeps/unix/sysv/linux/s390/libc-lowlevellock.c: New file.
	* sysdeps/unix/sysv/linux/s390/libc-lowlevelmutex.c: New file.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.c: New file.
	* sysdeps/unix/sysv/linux/s390/lowlevellock.h: New file.
	* sysdeps/unix/sysv/linux/s390/lowlevelmutex.c: New file.
	* sysdeps/unix/sysv/linux/s390/lowlevelsem.h: New file.
	* sysdeps/unix/sysv/linux/s390/pthread_once.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-32/pt-initfini.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-32/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/s390/s390-32/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/pt-initfini.c: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/pt-vfork.S: New file.
	* sysdeps/unix/sysv/linux/s390/s390-64/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/s390/sem_post.c: New file.
	* sysdeps/unix/sysv/linux/s390/sem_timedwait.c: New file.
	* sysdeps/unix/sysv/linux/s390/libc-lowlevellock.c: New file.
	* sysdeps/unix/sysv/linux/s390/sem_wait.c: New file.

2003-02-04  Ulrich Drepper  <drepper@redhat.com>

	* atomic.h: Add a couple more default implementations.
	(atomic_compare_and_exchange_acq): Use
	__arch_compare_and_exchange_32_acq in return value definition.  It
	always exists.
	(atomic_bit_set): Renamed from atomic_set_bit.
	Add missing atomic_ prefixes.

	* sysdeps/pthread/bits/libc-lock.h (__libc_once): In case no
	thread library is available, use correct value to mark initialized
	once variable.

2003-02-03  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (allocate_stack): Use __getpagesize instead of
	__sysconf to determine pagesize.

	* pthread_create.c: Include <atomic.h>.
	* allocatestack.c (allocate_stack): Implement coloring of the
	allocated stack memory.  Rename pagesize to pagesize_m1.  It's the
	size minus one.  Adjust users.
	* sysdeps/i386/i686/Makefile: New file.

2003-02-02  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c: Improve comment throughout the file.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S
	(__lll_lock_wait): Add branch prediction.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S
	(__lll_lock_wait): Likewise.
	(lll_unlock_wake_cb): Removed.

2003-01-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Remove
	_POSIX_THREAD_PRIORITY_SCHEDULING.

2003-01-30  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread-functions.h (struct pthread_functions):
	Fix return type of ptr___pthread_getspecific.

2003-01-29  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-umask1.
	(tst-umask1-ARGS): Define.
	* tst-umask1.c: New file.

2003-01-28  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (libpthread-routines): Remove lowlevelrwlock.  Add
	pthread_rwlock_rdlock, pthread_rwlock_timedrdlock,
	pthread_rwlock_wrlock, pthread_rwlock_timedwrlock, and
	pthread_rwlock_unlock.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelrwlock.S: Removed
	* sysdeps/unix/sysv/linux/i386/i586/lowlevelrwlock.S: Removed
	* sysdeps/unix/sysv/linux/i386/i686/lowlevelrwlock.S: Removed
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_rdlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedrdlock.S:
	New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_wrlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_timedwrlock.S:
	New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_rwlock_unlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_rwlock_rdlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_rwlock_timedrdlock.S:
	New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_rwlock_wrlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_rwlock_timedwrlock.S:
	New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_rwlock_unlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_rwlock_rdlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_rwlock_timedrdlock.S:
	New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_rwlock_wrlock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_rwlock_timedwrlock.S:
	New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_rwlock_unlock.S: New file.

	* Makefile (libpthread-routines): Remove lowlevelcond and
	lowlevelsem.  Add sem_wait, sem_trywait, sem_timedwait, sem_post,
	pthread_cond_wait, pthread_cond_timedwait, pthread_cond_signal,
	and pthread_cond_broadcast.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelsem.S: Removed
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelcond.S: Removed
	* sysdeps/unix/sysv/linux/i386/i586/lowlevelsem.S: Removed
	* sysdeps/unix/sysv/linux/i386/i586/lowlevelcond.S: Removed
	* sysdeps/unix/sysv/linux/i386/i686/lowlevelsem.S: Removed
	* sysdeps/unix/sysv/linux/i386/i686/lowlevelcond.S: Removed
	* sysdeps/unix/sysv/linux/i386/i486/sem_wait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/sem_trywait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/sem_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/sem_post.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_wait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_signal.S: New file.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_cond_broadcast.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/sem_wait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/sem_trywait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/sem_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/sem_post.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_cond_wait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_cond_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_cond_signal.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/pthread_cond_broadcast.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/sem_wait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/sem_trywait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/sem_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/sem_post.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_cond_wait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_cond_timedwait.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_cond_signal.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/pthread_cond_broadcast.S: New file.
	* sysdeps/unix/sysv/linux/i386/lowlevelcond.h: New file.

	* sysdeps/unix/sysv/linux/i386/createthread.c: Define
	PREPARE_CREATE and TLS_VALUE with x86-specific bits.  All the rest
	of the code is moved to ...
	* sysdeps/pthread/createthread.c: ...here.  New file.

2003-01-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelsem.S
	(__new_sem_post): Clear %eax before returning.
	Reported by MAEDA Naoaki <maeda.naoaki@jp.fujitsu.com>.

	* Makefile (tests): Add tst-cleanup2.
	* tst-cleanup2.c: New file.

	* sysdeps/pthread/bits/libc-lock.h (__libc_cleanup_region_start):
	Interpret first parameter correctly.

2003-01-17  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (headers): Add bits/semaphore.h.

2003-01-16  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/i386/tls.h (INIT_SYSINFO): Initialize _head->sysinfo even
	if not SHARED.

2003-01-14  Ulrich Drepper  <drepper@redhat.com>

	* sem_open.c (sem_open): Return SEM_FAILED if existing semaphore
	must be used and mapping failed.
	Reported by Luke Elliott <luke.elliott@activfinancial.com>.

	* Makefile (CFLAGS-pthread_self.os): Define this, not
	CFLAGS-pthread_self.c.

2003-01-13  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Don't export
	lll_unlock_wake_cb.

	* Makefile (libpthread-routines): Add version.  Add rules to build
	version.os and banner.h.
	* version.c: New file.

2003-01-13  Jakub Jelinek  <jakub@redhat.com>

	* pthread_mutex_lock.c (__pthread_mutex_lock_internal): Make
	the alias unconditional.
	* pthread_mutex_unlock.c  (__pthread_mutex_unlock_internal): Likewise.

2003-01-13  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (CFLAGS-pthread_self.c): New definition.

2003-01-06  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/pthread_sigmask.c (pthread_sigmask): Add
	INTERNAL_SYSCALL_DECL, add err argument to INTERNAL_SYSCALL* macros.
	* sysdeps/unix/sysv/linux/raise.c (raise): Likewise.
	* init.c (__pthread_initialize_minimal_internal): Likewise.

2003-01-07  Jakub Jelinek  <jakub@redhat.com>

	* pthreadP.h (__pthread_cond_timedwait): Add prototype.

	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h
	(RTLD_CORRECT_DYNAMIC_WEAK): Remove.
	(DL_SYSINFO_IMPLEMENTATION): Change into .text section and back.
	* sysdeps/unix/sysv/linux/i386/i686/dl-sysdep.h
	(RTLD_CORRECT_DYNAMIC_WEAK): Remove.
	(DL_SYSINFO_IMPLEMENTATION): Change into .text section and back.

2003-01-06  Jakub Jelinek  <jakub@redhat.com>

	* pthreadP.h (LIBC_CANCEL_HANDLED): Define.
	* pt-system.c (LIBC_CANCEL_HANDLED): Add.
	* tst-cancel-wrappers.sh: Remove all exceptions.

2003-01-05  Ulrich Drepper  <drepper@redhat.com>

	* tst-cancel-wrappers.sh: Invoke gawk not awk since we use GNU awk
	features.  Reported by Marijn Ros <marijn@mad.scientist.com>.

	* sysdeps/unix/sysv/linux/jmp-unwind.c: Include <pthread-functions.h>.
	Use __libc_pthread_functions array if SHARED.

	* pthreadP.h: Move pthread_cond_2_0_t definition to...
	* sysdeps/unix/sysv/linux/internaltypes.h: ...here.

	* sysdeps/pthread/bits/libc-lock.h (__libc_ptf_call): New #define.
	(__libc_rwlock_rdlock, __libc_rwlock_wrlock, __libc_rwlock_unlock,
	__libc_key_create, __libc_getspecific, __libc_setspecific): Use
	__libc_ptf_call instead of __libc_maybe_call.
	(PTF): New #define.
	(__libc_cleanup_region_start): Wrap function name with PTF call.
	(__libc_cleanup_region_end): Likewise.
	(__libc_cleanup_end): Likewise.

	* pthread_getspecific.c: Add __pthread_getspecific_internal alias.
	* pthread_setspecific.c: Add __pthread_setspecific_internal alias.
	* pthread_key_create.c: Add __pthread_key_create_internal alias.
	* pthreadP.h: Add prototypes.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelrwlock.S: Add
	__pthread_rwlock_rdlock, __pthread_rwlock_wrlock, and
	__pthread_rwlock_unlock aliases.
	* pthreadP.h: Add prototypes for new aliases.

	* pthreadP.h (struct pthead_functions): Moved to...
	* sysdeps/pthread/pthread-functions.h: ...here.  New file.
	* init.c (pthread_functions): Add initializers for new elements.

	* cleanup_defer.c: Add __pthread_cleanup_push_defer and
	__pthread_cleanup_pop_restore aliases.
	* pthreadP.h: Add prototypes.

	* cleanup.c: Rename _GI_pthread_cleanup_push to __pthread_cleanup_push
	and _GI_pthread_cleanup_pop to __pthread_cleanup_pop.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelcond.S: Adjust caller.
	* sysdeps/unix/sysv/linux/i386/pthread_once.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: Likewise.
	* pthreadP.h: Adjust prototypes and callers.

2003-01-04  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cancel7.
	(tst-cancel7-ARGS): New variable.
	* tst-cancel7.c: New file.

	* old_pthread_cond_broadcast.c: Optimize initialization a bit to work
	around gcc defficiencies.
	* old_pthread_cond_signal.c: Likewise.
	* old_pthread_cond_timedwait.c: Likewise.
	* old_pthread_cond_wait.c: Likewise.

	* pthreadP.h (pthread_cond_2_0_t): Remove unneeded lock element.

2003-01-03  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cond7.
	* tst-cond7.c: New file.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelcond.S
	(condvar_cleanup): Get condvar address from the right place.

	* atomic.h: Correct definitions of atomic_full_barrier,
	atomic_read_barrier, atomic_write_barrier.

	* old_pthread_cond_broadcast.c: Make memory allocate and initialization
	race-free.
	* old_pthread_cond_signal.c: Likewise.
	* old_pthread_cond_timedwait.c: Likewise.
	* old_pthread_cond_wait.c: Likewise.

2003-01-03  Jakub Jelinek  <jakub@redhat.com>

	* Makefile ($(objpfx)libpthread.so): Depend on ld.so.

2003-01-03  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h (pthread_cond_2_0_t): New type.
	(struct pthread_functions): Use new type for 2.0 condvar callbacks.
	Use new type for the 2.0 condvar function prototypes.
	* forward.c: Use pthread_cond_2_0_t for 2.0 condvar functions.
	* old_pthread_cond_init.c: Use pthread_cond_2_0_t for condvar
	parameter.
	* old_pthread_cond_destroy.c: Likewise.
	* old_pthread_cond_broadcast.c: Likewise.  Lock appropriately.
	* old_pthread_cond_signal.c: Likewise.
	* old_pthread_cond_timedwait.c: Likewise.
	* old_pthread_cond_wait.c: Likewise.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelcond.S
	(__pthread_cond_wait): Don't save cancellation mode and seq value
	in same location.

	* herrno.c (__h_errno_location): Don't define as weak.

2003-01-02  Jakub Jelinek  <jakub@redhat.com>

	* Versions [libc] (GLIBC_2.3.2): Export pthread_cond_broadcast,
	pthread_cond_destroy, pthread_cond_init, pthread_cond_signal
	and pthread_cond_wait.
	* old_pthread_cond_broadcast.c (__old_pthread_cond_broadcast):
	Renamed to...
	(__pthread_cond_broadcast_2_0): ... this.
	* old_pthread_cond_destroy.c (__old_pthread_cond_destroy):
	Renamed to...
	(__pthread_cond_destroy_2_0): ... this.
	* old_pthread_cond_init.c (__old_pthread_cond_init):
	Renamed to...
	(__pthread_cond_init_2_0): ... this.
	* old_pthread_cond_signal.c (__old_pthread_cond_signal):
	Renamed to...
	(__pthread_cond_signal_2_0): ... this.
	* old_pthread_cond_wait.c (__old_pthread_cond_wait):
	Renamed to...
	(__pthread_cond_wait_2_0): ... this.
	* pthread_cond_destroy.c: Include shlib-compat.h.
	(pthread_cond_destroy): Change strong_alias into versioned_symbol.
	* pthread_cond_init.c: Include shlib-compat.h.
	(pthread_cond_init): Change strong_alias into versioned_symbol.
	* pthreadP.h (struct pthread_functions): Rename ptr_pthread_cond_*
	fields to ptr___pthread_cond_* and add ptr___pthread_cond_*_2_0
	fields.
	(__pthread_cond_broadcast_2_0, __pthread_cond_destroy_2_0,
	__pthread_cond_init_2_0, __pthread_cond_signal_2_0,
	__pthread_cond_wait_2_0): New prototypes.
	(__old_pthread_cond_broadcast, __old_pthread_cond_destroy,
	__old_pthread_cond_init, __old_pthread_cond_signal,
	__old_pthread_cond_wait): Removed.
	* init.c: Include shlib-compat.h.
	(pthread_functions): Guard ptr___pthread_attr_init_2_0
	initialization with SHLIB_COMPAT (GLIBC_2_0, GLIBC_2_1).
	Rename ptr_pthread_cond_* to ptr___pthread_cond_*, initialize
	ptr___pthread_cond_*_2_0 fields.
	* forward.c: Export both pthread_cond_*@@GLIBC_2.3.2 and
	pthread_cond_*@GLIBC_2.0 compatibility symbols.

	* sysdeps/pthread/sigaction.c (SIGCANCEL): Only define if
	LIBC_SIGACTION was not yet defined.
	[!defined LIBC_SIGACTION]: Define LIBC_SIGACTION, #include self.
	[!defined LIBC_SIGACTION] (__sigaction): New function and
	libc_hidden_weak.
	[!defined LIBC_SIGACTION] (sigaction): New weak_alias.
	[defined LIBC_SIGACTION]: #include_next <sigaction.c>.

2003-01-02  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (CFLAGS-pthread_atfork.c): Add -DNOT_IN_libc.

2003-01-02  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h (pthread_cond_t):
	New, larger type definition.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelcond.S: New condvar
	implementation.
	* Versions [libpthread]: Add definitions for new pthread_cond_*
	interfaces for version GLIBC_2.3.2.
	* pthread_cond_init.c: Update initialization for new type definition.
	* Makefile (libpthread-routines): Remove pthread_cond_wait,
	pthread_cond_timedwait, pthread_cond_signal, and
	pthread_cond_broadcast.  Add old_pthread_cond_init,
	old_pthread_cond_destroy, old_pthread_cond_wait,
	old_pthread_cond_timedwait, old_pthread_cond_signal, and
	old_pthread_cond_broadcast.
	* old_pthread_cond_broadcast.c: New file.
	* old_pthread_cond_destroy.c: New file.
	* old_pthread_cond_init.c: New file.
	* old_pthread_cond_signal.c: New file.
	* old_pthread_cond_timedwait.c: New file.
	* old_pthread_cond_wait.c: New file.
	* pthreadP.h: Add prototypes for the compatibility interfaces.

	* pthread_cond_destroy.c: Don't include <errno.h>.

2003-01-01  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelrwlock.S: Avoid
	unnecessary zero offset when addressing MUTEX.

2002-12-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/fork.h: Add libc_hidden_proto for
	__register_atfork.
	* sysdeps/unix/sysv/linux/register-atfork.c: Add libc_hidden_def
	for __register_atfork.

2002-12-31  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Use __ASSEMBLER__
	instead of ASSEMBLER test macro.

	* sysdeps/unix/sysv/linux/allocrtsig.c (__libc_current_sigrtmin,
	__libc_current_sigrtmax): Add libc_hidden_def.

	* sysdeps/pthread/list.h: Remove assert.h include.

2002-12-31  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pt-initfini.c (call_initialize_minimal): Use
	__pthread_initialize_minimal_internal not
	__pthread_initialize_minimal.

2002-12-30  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pt-initfini.c (call_initialize_minimal): Mark
	__pthread_initialize_minimal as hidden.

	* init.c (__pthread_initialize_minimal_internal): Don't mark as
	constructor.

2002-12-31  Jakub Jelinek  <jakub@redhat.com>

	* Makefile ($(inst_libdir)/libpthread.so): Depend on
	$(common-objpfx)format.lds, include that into the output script.
	Fix comment.
	(extra-B-pthread.so): Change linuxthreads/ into nptl/.

2002-12-28  Andreas Jaeger  <aj@suse.de>

	* sysdeps/unix/sysv/linux/xstatconv.c (xstat_conv): Adjust for
	nsec resolution changes.
	(xstat64_conv): Likewise.
	(xstat32_conv): Likewise.
	* sysdeps/unix/sysv/linux/kernel_stat.h: Add nsec resolution for
	struct kernel_stat.
	* sysdeps/unix/sysv/linux/bits/stat.h: Add nsec resolution for
	structs stat and stat64.
	* time/time.h (__timespec_defined): Define for __USE_MISC.
	* io/sys/stat.h [__USE_MISC]: Define __need_timespec for struct stat.

2002-12-30  Jakub Jelinek  <jakub@redhat.com>

	* forward.c (FORWARD2): Renamed from FORWARD3.  Remove unused export
	argument.
	(pthread_attr_init_2_0, pthread_attr_init_2_1): Use FORWARD macro.
	(pthread_exit): Use strong_alias to avoid warnings.
	* pthreadP.h (struct pthread_functions): Rename ptr_pthread_exit
	and ptr_pthread_attr_init_2_* to ptr___pthread_exit and
	ptr___pthread_attr_init_2_*.
	* init.c (pthread_functions): Adjust.

2002-12-29  Ulrich Drepper  <drepper@redhat.com>

	* forward.c: Make all functions available by default again.  It
	caused too much trouble.

	* pt-siglongjmp.c: Removed.

2002-12-28  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/i386/tls.h: Include tcb-offsets.h in assembler.
	(SYSINFO_OFFSET, MULTIPLE_THREADS_OFFSET): Remove.
	* sysdeps/i386/Makefile: New file.
	* sysdeps/i386/tcb-offsets.sym: New file.
	* sysdeps/pthread/tcb-offsets.h: New file.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c (__libc_pthread_init):
	Remove MULTIPLE_THREADS_OFFSET and SYSINFO_OFFSET checks.

	* sysdeps/unix/sysv/linux/Versions [libc] (GLIBC_PRIVATE): Move
	__register_atfork...
	(GLIBC_2.3.2): ...here.

2002-12-28  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h: Mark pthread_attr_getstackaddr and
	pthread_attr_setstackaddr with __attribute_deprecated__.

2002-12-27  Jakub Jelinek  <jakub@redhat.com>

	* pt-system.c (system): Remove cancellation handling.
	* tst-cancel-wrappers.sh: Allow pt-system.o* to not use the
	cancellation routines.

2002-12-28  Ulrich Drepper  <drepper@redhat.com>

	* descr.h: Include <dl-sysdep.h>.
	(struct pthread): Move header.data.list to the back of the struct.
	* sysdeps/i386/tls.h (tcbhead_t): Move list to the back of the struct.
	(MULTIPLE_THREADS_OFFSET): Adjust offset.
	(SYSINFO_OFFSEET): Likewise.

2002-12-27  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i686/dl-sysdep.h (USE_DL_SYSINFO):
	Define.
	(DL_SYSINFO_DEFAULT): Cast to uintptr_t to avoid warnings.
	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h (NEED_DL_SYSINFO,
	DL_SYSINFO_DEFAULT, DL_SYSINFO_IMPLEMENTATION): Define.
	(USE_DL_SYSINFO): Undef.

2002-12-22  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (tests-reverse): Use $(objpfx)../libc.so instead of
	$(common-objpfx)libc.so.
	* tst-cancel4.c (tf_write, tf_writev): Increase buf sizes so that
	it is bigger than pipe buffer size even on arches with bigger
	page size.
	(tf_usleep): Cast usleep argument to useconds_t to avoid warnings.

2002-12-25  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelsem.S: Implement
	correct errno access for case that USE___THREAD is not defined.

2002-12-24  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h: Add missing #endif.
	Patch by Marijn Ros <marijn@mad.scientist.com>.

2002-12-22  Roland McGrath  <roland@redhat.com>

	* Makefile (omit-deps): Add $(unix-syscalls:%=ptw-%).

2002-12-20  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/bits/stdio-lock.h (_IO_lock_inexpensive): Define.

2002-12-19  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h: Don't define
	NEED_DL_SYSINFO since no processor < i686 had the sysenter opcode.
	* sysdeps/unix/sysv/linux/i386/i686/dl-sysdep.h: New file.

	* sysdeps/unix/sysv/linux/i386/pthread_once.S: Use ENTER_KERNEL instead
	of int $0x80.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelcond.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevellock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelmutex.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelrwlock.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelsem.S: Likewise.
	* sysdeps/unix/sysv/linux/i386/i486/pthread_barrier_wait.S: Likewise.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Add support for using
	sysenter.
	* sysdeps/unix/sysv/linux/i386/lowlevelsem.h: Likewise.

	* sysdeps/i386/tls.h: Unconditionally include <dl-sysdep.h>.

	* allocatestack.c (allocate_stack) [NEED_DL_SYSINFO]: Set sysinfo
	in new TCB.
	* sysdeps/unix/sysv/linux/i386/createthread.c (create_thread): Check
	that sysinfo is properly initialized.
	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h: Define RTLD_PRIVATE_ERRNO
	to 1 only for ld.so.

	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h: Define
	RTLD_CORRECT_DYNAMIC_WEAK.

2002-12-19  Jakub Jelinek  <jakub@redhat.com>

	* forward.c (pthread_attr_init_2_0, pthread_attr_init_2_1):
	Use return 0 as 6th argument to FORWARD4.
	* pthread_equal.c: Include pthreadP.h instead of pthread.h.

2002-12-18  Ulrich Drepper  <drepper@redhat.com>

	* descr.h (struct pthread) [NEED_DL_SYSINFO]: Add sysinfo member.
	* sysdeps/i386/tls.h (tcbhead_t): Add sysinfo member.
	Define SYSINFO_OFFSEET if NEED_DL_SYSINFO is defined.
	(INIT_SYSINFO): New #define.
	(TLS_TP_INIT): Use INIT_SYSINFO.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c (__libc_pthread_init):
	At test to make sure SYSINFO_OFFSET value is correct.
	* sysdeps/unix/sysv/linux/i386/dl-sysdep.h: New file.

2002-12-18  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/flockfile.c (flockfile): Change into weak alias.
	* sysdeps/unix/sysv/linux/raise.c (gsignal): Add weak alias to raise.
	* Versions [libc: GLIBC_2.0]: Add pthread_attr_init.
	[libpthread: GLIBC_2.1]: Remove __pthread_rwlock_init,
	__pthread_rwlock_destroy, __pthread_rwlock_rdlock,
	__pthread_rwlock_wrlock, __pthread_rwlock_unlock,
	__pthread_rwlock_tryrdlock and __pthread_rwlock_trywrlock.

2002-12-18  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Use ENTER_KERNEL
	macro instead of using int $0x80 directly.

	* sysdeps/pthread/bits/stdio-lock.h: New file.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevelmutex.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/libc-lowlevelmutex.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/libc-lowlevelmutex.S: New file.
	* Makefile (routines): Add libc-lowlevelmutex.

	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Remove
	__i686.get_pc_thunk.dx.

2002-12-17  Jakub Jelinek  <jakub@redhat.com>

	* Makefile (libpthread-shared-only-routines): Add pt-allocrtsig.
	(tests): Depend on $(objpfx)tst-cancel-wrappers.out.
	($(objpfx)tst-cancel-wrappers.out): New rule.
	* tst-cancel-wrappers.sh: New test.
	* tst-locale1.c: Include signal.h.
	(uselocale): Test static linking of __libc_current_sigrt*.

2002-12-17  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cancel6.
	* tst-cancel6.c: New file

2002-12-17  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h (SINGLE_THREAD_P):
	Define meaningfully for assembler as well.
	* pthreadP.h (struct pthread_functions): Remove
	ptr_pthread_attr_init field.  Add ptr_pthread_attr_init_2_0
	and ptr_pthread_attr_init_2_1 fields.
	* init.c (pthread_functions): Initialize ptr_pthread_attr_init_2_0
	and ptr_pthread_attr_init_2_1 instead of ptr_pthread_attr_init.
	* forward.c (FORWARD4): Renamed from FORWARD3. Add export argument.
	(FORWARD3): Define using FORWARD4.
	(pthread_attr_init): Provide both @GLIBC_2.0 and @@GLIBC_2.1
	versions.
	* pt-system.c: Remove duplicate stdlib.h include.

2002-12-16  Ulrich Drepper  <drepper@redhat.com>

	* sem_init.c: Define sem_init@GLIBC_2.0.
	* sem_destroy.c: Define sem_destroy@GLIBC_2.0.
	* sem_getvalue.c: Define sem_getvalue@GLIBC_2.0.

	* flockfile.c: Moved to...
	* sysdeps/pthread/flockfile.c: ...here.  New file.
	* funlockfile.c: Moved to...
	* sysdeps/pthread/funlockfile.c: ...here.  New file.
	* ftrylockfile.c: Moved to...
	* sysdeps/pthread/ftrylockfile.c: ...here.  New file.

2002-12-16  Jakub Jelinek  <jakub@redhat.com>

	* libc-cancellation.c: Guard both function with
	#if !defined NOT_IN_libc.
	* Makefile (libpthread-routines): Use ptw-, not pt- prefix for the
	automatically provided pthread wrappers.
	* pthreadP.h (LIBC_CANCEL_ASYNC, LIBC_CANCEL_RESET): Define to
	CANCEL_* if IS_IN_libpthread and to dummy versions if not in libc
	nor in libpthread.
	* pt-open.c: Removed.
	* pt-fcntl.c: Removed.
	* pt-fsync.c: Removed.
	* pt-lseek.c: Removed.
	* pt-msgrcv.c: Removed.
	* pt-msgsnd.c: Removed.
	* pt-msync.c: Removed.
	* pt-nanosleep.c: Removed.
	* pt-open64.c: Removed.
	* pt-pause.c: Removed.
	* pt-pread.c: Removed.
	* pt-pread64.c: Removed.
	* pt-pwrite.c: Removed.
	* pt-pwrite64.c: Removed.
	* pt-read.c: Removed.
	* pt-recv.c: Removed.
	* pt-recvfrom.c: Removed.
	* pt-recvmsg.c: Removed.
	* pt-send.c: Removed.
	* pt-sendto.c: Removed.
	* pt-sigtimedwait.c: Removed.
	* pt-sigwait.c: Removed.
	* pt-wait.c: Removed.
	* pt-waitpid.c: Removed.
	* pt-write.c: Removed.
	* pt-accept.c: Removed.
	* pt-close.c: Removed.
	* pt-connect.c: Removed.
	* pt-lseek64.c: Removed.
	* pt-sendmsg.c: Removed.
	* pt-tcdrain.c: Removed.

2002-12-15  Ulrich Drepper  <drepper@redhat.com>

	* init.c (__pthread_initialize_minimal_internal): Renamed from
	__pthread_initialize_minimal.  Make old name an alias.  This
	converts a normal relocation into a relative relocation.

	* pt-fcntl.c (__fcntl): Use fcntl64 syscall, not fcntl.

	* Versions [libpthread: GLIBC_2.3.2]: Remove creat, poll, pselect,
	readv, select, sigpause, sigsuspend, sigwaitinfo, waitid, writev.
	* Makefile (libpthread-routines): Remove pt-creat, pt-poll,
	pt-pselect, pt-readv, pt-select, pt-sigpause, pt-sigsuspend,
	pt-sigwaitinfo, pt-waitid, and pt-writev.
	* pt-creat.c: Removed.
	* pt-poll.c: Removed.
	* pt-pselect.c: Removed.
	* pt-readv.c: Removed.
	* pt-select.c: Removed.
	* pt-sigpause.c: Removed.
	* pt-sigsuspend.c: Removed.
	* pt-sigwaitinfo.c: Removed.
	* pt-waitid.c: Removed.
	* pt-writev.c: Removed.

	* init.c (pthread_functions): New variable.
	(__pthread_initialize_minimal): Pass pointer to pthread_functions
	(or NULL) to __libc_pthread_init.
	* forward.c: Rewrite to use __libc:pthread_functions array to get
	function addresses.
	* sysdeps/unix/sysv/linux/fork.h: Remove __libc_pthread_init
	prototype.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c (__libc_pthread_init):
	Take new parameter.  Copy content of variable pointed to by it
	to __libc_pthread_init.

	* pthreadP.h (struct pthread_functions): New type.
	(__libc_pthread_init): Declare.

	* pthread_attr_destroy.c: Add namespace protected alias.
	* pthread_attr_getdetachstate.c: Likewise.
	* pthread_attr_getinheritsched.c: Likewise.
	* pthread_attr_getschedparam.c: Likewise.
	* pthread_attr_getschedpolicy.c: Likewise.
	* pthread_attr_getscope.c: Likewise.
	* pthread_attr_setdetachstate.c: Likewise.
	* pthread_attr_setinheritsched.c: Likewise.
	* pthread_attr_setschedparam.c: Likewise.
	* pthread_attr_setschedpolicy.c: Likewise.
	* pthread_attr_setscope.c: Likewise.
	* pthread_cond_broadcast.c: Likewise.
	* pthread_cond_destroy.c: Likewise.
	* pthread_cond_init.c: Likewise.
	* pthread_cond_signal.c: Likewise.
	* pthread_cond_wait.c: Likewise.
	* pthread_condattr_destroy.c: Likewise.
	* pthread_condattr_init.c: Likewise.
	* pthread_equal.c: Likewise.
	* pthread_exit.c: Likewise.
	* pthread_getschedparam.c: Likewise.
	* pthread_self.c: Likewise.
	* pthread_setcancelstate.c: Likewise.
	* pthread_setschedparam.c: Likewise.
	* pthread_mutex_destroy.c: Likewise.
	* pthread_mutex_init.c: Likewise.
	* pthreadP.h: Add prototypes for the aliases.

	* sysdeps/unix/sysv/linux/i386/createthread.c (create_thread): Set
	multiple_threads member in correct TCB to 1.

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: Define
	SINGLE_THREAD_P.  If in libc or libpthread examine multiple_thread
	member of thread decriptor, otherwise return unconditionally 1.

2002-12-14  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/pt-socket.S: Changes folded into the
	regular Linux version.  Remove file.
	* sysdeps/unix/sysv/linux/connect.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/llseek.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/msgrcv.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/msgsnd.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/open64.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/poll.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/pread.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/pread64.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/pselect.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/pwrite.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/pwrite64.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/readv.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/recv.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/recvfrom.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/recvmsg.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/send.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sendmsg.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sendto.S: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sigpause.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sigsuspend.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sigtimedwait.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sigwait.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/sigwaitinfo.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/system.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/tcdrain.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/wait.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/waitid.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/waitpid.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/writev.c: Likewise.  Remove file.
	* sysdeps/unix/sysv/linux/i386/fcntl.c: Likewise.  Remove file.

2002-12-14  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/i386/sysdep-cancel.h: New file.
	* sysdeps/unix/sysv/linux/open.c: Removed.
	* sysdeps/unix/sysv/linux/fsync.c: Removed.
	* sysdeps/unix/sysv/linux/lseek.c: Removed.
	* sysdeps/unix/sysv/linux/msync.c: Removed.
	* sysdeps/unix/sysv/linux/read.c: Removed.
	* sysdeps/unix/sysv/linux/close.c: Removed.
	* sysdeps/unix/sysv/linux/creat.c: Removed.
	* sysdeps/unix/sysv/linux/nanosleep.c: Removed.
	* sysdeps/unix/sysv/linux/pause.c: Removed.
	* sysdeps/unix/sysv/linux/select.c: Removed.
	* sysdeps/unix/sysv/linux/write.c: Removed.

2002-12-14  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/pt-socket.S: Check multiple_threads
	element in TCB to see whether locking is needed.

	* sysdeps/unix/sysv/linux/libc_pthread_init.c: Check that
	MULTIPLE_THREADS_OFFSET value is correct.

	* sysdeps/unix/sysv/linux/close.c: New file.
	* sysdeps/unix/sysv/linux/connect.S: New file.
	* sysdeps/unix/sysv/linux/creat.c: New file.
	* sysdeps/unix/sysv/linux/fsync.c: New file.
	* sysdeps/unix/sysv/linux/llseek.c: New file.
	* sysdeps/unix/sysv/linux/lseek.c: New file.
	* sysdeps/unix/sysv/linux/msgrcv.c: New file.
	* sysdeps/unix/sysv/linux/msgsnd.c: New file.
	* sysdeps/unix/sysv/linux/msync.c: New file.
	* sysdeps/unix/sysv/linux/nanosleep.c: New file.
	* sysdeps/unix/sysv/linux/open.c: New file.
	* sysdeps/unix/sysv/linux/open64.c: New file.
	* sysdeps/unix/sysv/linux/pause.c: New file.
	* sysdeps/unix/sysv/linux/poll.c: New file.
	* sysdeps/unix/sysv/linux/pread.c: New file.
	* sysdeps/unix/sysv/linux/pread64.c: New file.
	* sysdeps/unix/sysv/linux/pselect.c: New file.
	* sysdeps/unix/sysv/linux/pwrite.c: New file.
	* sysdeps/unix/sysv/linux/pwrite64.c: New file.
	* sysdeps/unix/sysv/linux/readv.c: New file.
	* sysdeps/unix/sysv/linux/recv.S: New file.
	* sysdeps/unix/sysv/linux/recvfrom.S: New file.
	* sysdeps/unix/sysv/linux/recvmsg.S: New file.
	* sysdeps/unix/sysv/linux/select.c: New file.
	* sysdeps/unix/sysv/linux/send.S: New file.
	* sysdeps/unix/sysv/linux/sendmsg.S: New file.
	* sysdeps/unix/sysv/linux/sendto.S: New file.
	* sysdeps/unix/sysv/linux/sigpause.c: New file.
	* sysdeps/unix/sysv/linux/sigsuspend.c: New file.
	* sysdeps/unix/sysv/linux/sigtimedwait.c: New file.
	* sysdeps/unix/sysv/linux/sigwait.c: New file.
	* sysdeps/unix/sysv/linux/sigwaitinfo.c: New file.
	* sysdeps/unix/sysv/linux/system.c: New file.
	* sysdeps/unix/sysv/linux/tcdrain.c: New file.
	* sysdeps/unix/sysv/linux/wait.c: New file.
	* sysdeps/unix/sysv/linux/waitid.c: New file.
	* sysdeps/unix/sysv/linux/waitpid.c: New file.
	* sysdeps/unix/sysv/linux/writev.c: New file.
	* sysdeps/unix/sysv/linux/i386/fcntl.c: New file.

	* pt-readv.c: Fix comment.

2002-12-14  Jakub Jelinek  <jakub@redhat.com>

	* tst-cleanup1.c: Include stdlib.h.

	* tst-cancel5.c: New test.
	* Makefile (tests): Add tst-cancel5.
	(tst-cancel5): Link against libc.so libpthread.so in that order.

2002-12-13  Ulrich Drepper  <drepper@redhat.com>

	* forward.c (test_loaded): Prevent recursive calls.

	* Makefile (routines): Add libc-cancellation.
	* libc-cancellation.c: New file.
	* descr.h (struct pthread): Add multiple_threads field.
	* allocatestack.c (allocate_stack): Initialize multiple_header field of
	new thread descriptor to 1.
	* sysdeps/unix/sysv/linux/i386/createthread.c (create_thread):
	Initialize multiple_thread field after successful thread creation.
	* cancellation.c (__do_cancel): Move to pthreadP.h.
	(__pthread_enable_asynccancel): Remove parameter from __do_cancel call.
	(__pthread_disable_asynccancel): Add internal_function attribute.
	* init.c (sigcancel_handler): Remove parameter from __do_cancel call.
	* pthread_setcancelstate.c: Likewise.
	* pthread_setcanceltype.c: Likewise.
	* pthread_exit.c: Likewise.
	* pthreadP.h (CANCELLATION_P): Likewise.
	(__do_cancel): Define as static inline.
	(LIBC_CANCEL_ASYNC, LIBC_CANCEL_RESET): New #defines.
	(__libc_enable_asynccancel, __libc_disable_asynccancel): New
	declarations.
	* sysdeps/i386/tls.h (tcbhead_t): Add list and multiple_threads
	fields.  Define MULTIPLE_THREADS_OFFSET.
	* sysdeps/pthread/bits/libc-lock.h: Remove __libc_locking_needed
	declaration.
	* sysdeps/unix/sysv/linux/accept.S: New file.
	* sysdeps/unix/sysv/linux/read.c: New file.
	* sysdeps/unix/sysv/linux/write.c: New file.
	* sysdeps/unix/sysv/linux/i386/pt-socket.S: New file.
	* sysdeps/unix/sysv/linux/libc_pthread_init.c: Remove definition and
	initialization of __libc_locking_needed.
	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Don't use
	__libc_locking_needed, use multiple_threads field in TCB.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Likewise.

2002-12-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i686/libc-lowlevellock.S: Use i486
	version.
	* sysdeps/unix/sysv/linux/i386/i586/libc-lowlevellock.S: Likewise.

	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Correct
	access to __libc_locking_needed for PIC.

2002-12-12  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/pthread/bits/libc-lock.h (__libc_locking_needed): Only
	declare for libc.so.
	(__libc_lock_init, __libc_lock_init_recursive): Change into comma
	expression.
	(__libc_lock_lock): Put into statement expression.
	(__libc_lock_unlock): Remove trailing semicolon.
	* sysdeps/unix/sysv/linux/fork.h (__libc_pthread_init): Fix typo.

2002-12-12  Roland McGrath  <roland@redhat.com>

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Use asm operand with
	"m" constraint to refer to __libc_locking_needed.  Declare it here.

2002-12-12  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/fork-gen.c: Renamed to...
	* sysdeps/unix/sysv/linux/libc_pthread_init.c: ...this.
	Initialize __libc_locking_needed.
	* init.c (__pthread_initialize_minimal): Call __libc_pthread_init
	instead of __register_pthread_fork_handler.
	* sysdeps/pthread/bits/libc-lock.h: Declare __libc_locking_needed.
	* sysdeps/unix/sysv/linux/Makefile (sysdep_routimes): Replace
	fork-gen with libc_pthread_init.
	* sysdeps/unix/sysv/linux/Versions: Use __libc_pthread_init instead
	of __register_pthread_fork_handler.
	* sysdeps/unix/sysv/linux/fork.h: Declare __libc_pthread_init instead
	of __register_pthread_fork_handler.
	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Use
	__libc_locking_needed to determine whether lock prefix can be avoided.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: Likewise.

2002-12-11  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-cleanup1.
	* tst-cleanup1.c: New file.
	* cancellation.c (__cleanup_thread): Removed.
	(__do_cancel): Remove call to __cleanup_thread.
	* pthreadP.h: Remove __cleanup_thread prorotype.

	* sysdeps/pthread/bits/libc-lock.h (__libc_cleanup_region_start):
	Remember function and argument even if cancellation handler
	function is not available.
	(__libc_cleanup_region_end): Execute registered function directly if
	pthread functions are not available.
	(__libc_cleanup_end): Likewise.

	* init.c (__pthread_initialize_minimal): Fix initialization in
	static lib by preventing gcc from being too clever.

2002-12-10  Ulrich Drepper  <drepper@redhat.com>

	* init.c (__pthread_initialize_minimal): Remove unneccesary
	sigaddset call.

	* Makefile (tests): We can run tst-locale2 now.

2002-12-09  Ulrich Drepper  <drepper@redhat.com>

	* Versions: Remove duplicated sigwait entry.

2002-12-08  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Enable pthread_cleanup_{push,pop} optimizations only
	inside libpthread.

	* pt-fcntl.c (__fcntl): Initialize oldtype to avoid warning.

	* pthreadP.h: Declare __pthread_enable_asynccancel and
	__pthread_disable_asynccancel.
	(CANCEL_ASYNC): Use __pthread_enable_asynccancel.
	(CANCEL_RESET): Use __pthread_disable_asynccancel.
	* cancellation.c (__pthread_enable_asynccancel): New function.
	(__pthread_disable_asynccancel): New function.
	* pt-accept.c: Adjust for CANCEL_ASYNC and CANCEL_RESET change.
	* pt-close.c: Likewise.
	* pt-connect.c: Likewise.
	* pt-creat.c: Likewise.
	* pt-fcntl.c: Likewise.
	* pt-fsync.c: Likewise.
	* pt-lseek.c: Likewise.
	* pt-lseek64.c: Likewise.
	* pt-msgrcv.c: Likewise.
	* pt-msgsnd.c: Likewise.
	* pt-msync.c: Likewise.
	* pt-nanosleep.c: Likewise.
	* pt-open.c: Likewise.
	* pt-open64.c: Likewise.
	* pt-pause.c: Likewise.
	* pt-poll.c: Likewise.
	* pt-pread.c: Likewise.
	* pt-pread64.c: Likewise.
	* pt-pselect.c: Likewise.
	* pt-pwrite.c: Likewise.
	* pt-pwrite64.c: Likewise.
	* pt-read.c: Likewise.
	* pt-readv.c: Likewise.
	* pt-recv.c: Likewise.
	* pt-recvfrom.c: Likewise.
	* pt-recvmsg.c: Likewise.
	* pt-select.c: Likewise.
	* pt-send.c: Likewise.
	* pt-sendmsg.c: Likewise.
	* pt-sendto.c: Likewise.
	* pt-sigpause.c: Likewise.
	* pt-sigsuspend.c: Likewise.
	* pt-sigtimedwait.c: Likewise.
	* pt-sigwait.c: Likewise.
	* pt-sigwaitinfo.c: Likewise.
	* pt-system.c: Likewise.
	* pt-tcdrain.c: Likewise.
	* pt-wait.c: Likewise.
	* pt-waitid.c: Likewise.
	* pt-waitpid.c: Likewise.
	* pt-write.c: Likewise.
	* pt-writev.c: Likewise.
	* pthread_join.c: Likewise.
	* pthread_timedjoin.c: Likewise.

	* pt-sigpause.c (sigsuspend): Call __sigsuspend.
	(__xpg_sigpause): New function.
	* Versions (libpthread:GLIBC_2.3.2): Add __xpg_sigpause.

2002-12-07  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (CFLAGS-ftrylockfile.c): Add -D_IO_MTSAFE_IO.

	* cleanup.c: Move declarations of _GI_pthread_cleanup_push and
	_GI_pthread_cleanup_pop to pthreadP.h.

	* ftrylockfile.c: Use _IO_lock_trylock instead of
	pthread_mutex_trylock.

	* pthreadP.h (CANCEL_ASYNC): Use __pthread_setcanceltype.
	(CANCEL_RESET): Likewise.
	(__pthread_setcanceltype_): Declare.
	(__pthread_mutex_lock_internal): Declare.
	(__pthread_mutex_unlock_internal): Declare.
	(__pthread_once_internal): Declare.
	(pthread_cleanup_push): Redefine using _GI_pthread_cleanup_push.
	(pthread_cleanup_pop): Redefine using _GI_pthread_cleanup_pop.

	* pthread_cond_timedwait.c: Use INTUSE is calls to pthread_mutex_lock
	and pthread_mutex_unlock.
	* pthread_cond_wait.c: Likewise.
	* pthread_mutex_lock.c: Use INTDEF to define alias if needed.
	* pthread_mutex_unlock.c: Likewise.

	* pthread_setcanceltype.c: Add additional alias
	__pthread_setcanceltype.

	* sem_unlink.c (sem_unlink): Use __pthread_once with INTDEF.
	* sem_open.c (sem_open): Likewise.
	Use __libc_open, __libc_write, and __libc_close instead of
	open, write, and close respectively.

	* sysdeps/pthread/bits/libc-lock.h (__libc_lock_trylock_internal):
	Rewrite as statement expression since it must return a value.

	* pthread_cancel.c: Use __pthread_kill instead of pthread_kill.
	* sysdeps/unix/sysv/linux/pthread_kill.c: Define additional alias
	__pthread_kill.

	* sysdeps/unix/sysv/linux/i386/pthread_once.S: Define additional
	alias __pthread_once_internal.

	* sysdeps/unix/sysv/linux/raise.c: Use libc_hidden_def for raise.

2002-12-06  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-stdio1 and tst-stdio2.
	* tst-stdio1.c: New file.
	* tst-stdio2.c: New file.

	* init.c (__pthread_initialize_minimal): Correct INIT_LIST_HEAD use.

	* Makefile (tests): Comment out tst-locale2 for now.
	(CFLAGS-flockfile.c, CFLAGS-funlockfile.c): Define to -D_IO_MTSAFE_IO.

	* sysdeps/unix/sysv/linux/Makefile: Define CFLAGS-fork.c to
	-D_IO_MTSAFE_IO.
	* sysdeps/unix/sysv/linux/fork.c: Include <bits/stdio-lock.h>.
	Use _IO_lock_init instead of explicit assignment.

	* sysdeps/pthread/bits/libc-lock.h: Define __rtld_lock_* macros.
	Define __libc_lock_* and __libc_lock_recursive macros with
	lowlevellock macros, not pthread mutexes.

	* flockfile.c: Include <bits/stdio-lock.h>.  Use _IO_lock_lock instead
	of pthread_mutex_lock.
	* funlockfile.c: Include <bits/stdio-lock.h>.  Use _IO_lock_unlock
	instead of pthread_mutex_unlock.

2002-12-06  Roland McGrath  <roland@redhat.com>

	* allocatestack.c (__stack_user): Use uninitialized defn.
	* init.c (__pthread_initialize_minimal): Initialize it here.

2002-12-05  Roland McGrath  <roland@redhat.com>

	* sysdeps/i386/tls.h (TLS_INIT_TP): Make it return zero or an error
	string.
	* sysdeps/x86_64/tls.h (TLS_INIT_TP): Likewise.

	* sysdeps/unix/sysv/linux/i386/createthread.c (create_thread): Add
	missing & here too.

2002-12-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/Makefile (sysdep_routines): Remove
	lowlevellock.
	* sysdeps/unix/sysv/linux/i386/i486/libc-lowlevellock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i586/libc-lowlevellock.S: New file.
	* sysdeps/unix/sysv/linux/i386/i686/libc-lowlevellock.S: New file.
	* sysdeps/pthread/bits/libc-lock.h: Use lowlevellock implementation
	for __libc_lock_* macros.
	* Makefile (routines): Add libc-lowlevellock.

2002-10-09  Roland McGrath  <roland@redhat.com>

	* sysdeps/pthread/bits/libc-lock.h (__libc_maybe_call): New macro.
	Under [__PIC__], call the function via the pointer fetched for
	comparison rather than a call by name that uses the PLT.
	(__libc_lock_init, __libc_rwlock_init, __libc_lock_fini)
	(__libc_rwlock_fini, __libc_lock_lock, __libc_rwlock_rdlock)
	(__libc_rwlock_wrlock, __libc_lock_trylock, __libc_rwlock_tryrdlock)
	(__libc_rwlock_trywrlock, __libc_lock_unlock, __libc_rwlock_unlock)
	(__libc_key_create, __libc_getspecific, __libc_setspecific): Use it.

2002-12-04  Roland McGrath  <roland@redhat.com>

	* forward.c (pthread_self): Use FORWARD3 macro to correct return type.

	* sysdeps/i386/td_ta_map_lwp2thr.c: Moved from ../nptl_db.
	* sysdeps/generic/td_ta_map_lwp2thr.c: New file.

	* pthread_create.c (start_thread): Add missing & on __nptl_last_event.

2002-12-04  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/bits/pthreadtypes.h: Make pthread_t
	a completely opaque, non-integer type.
	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Likewise.

2002-12-05  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/i386/tls.h: Include stdlib.h.
	* sysdeps/x86_64/tls.h: Likewise.

2002-12-04  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-locale2.
	(tests-static): Likewise.
	* tst-locale2.c: New file.

	* sysdeps/unix/sysv/linux/i386/lowlevellock.h: Mark asms as
	volatile and add memory clobbers to lock operations.

2002-12-03  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/i686/bits/atomic.h: Use i486 version.
	* sysdeps/i386/i486/bits/atomic.h: New file.
	* sysdeps/i386/i586/bits/atomic.h: New file.
	* sysdeps/i386/i686/pthread_spin_trylock.S: Define HAVE_CMOV and
	include i486 version.
	* sysdeps/i386/i486/pthread_spin_trylock.S: New file.
	* sysdeps/i386/i586/pthread_spin_trylock.S: New file.
	Patch by Marijn Ros <marijn@mad.scientist.com>.

	* allocatestack.c (get_cached_stack): Don't crash if we first
	found a stack with a larger size then needed.
	Reported by Hui Huang <hui.huang@sun.com>.

	* Makefile (tests): Add tst-sysconf.
	* tst-sysconf.c: New file.

	* sysdeps/unix/sysv/linux/bits/local_lim.h: Undefine
	PTHREAD_THREADS_MAX.

2002-12-02  Roland McGrath  <roland@redhat.com>

	* pthreadP.h (__stack_user, __nptl_create_event, __nptl_death_event):
	Declare using hidden_proto instead of attribute_hidden, so there are
	non-.hidden static symbols for gdb to find.
	(__pthread_keys): Likewise.
	* events.c (__nptl_create_event, __nptl_death_event): Add hidden_def.
	* allocatestack.c (__stack_user): Likewise.
	* pthread_create.c (__pthread_keys): Likewise.
	(__nptl_threads_events, __nptl_last_event): Make these static instead
	of hidden.
	* pthread_key_create.c (__pthread_pthread_keys_max,
	__pthread_pthread_key_2ndlevel_size): Renamed from __linuxthreads_*.

2002-12-02  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-locale1.  If buid-static is yes link
	statically.
	* tst-locale1.c: New file.

	* pthread_cond_timedwait.c: Include <stdlib.h>.

	* Makefile (tests): Add tst-fork2 and tst-fork3.
	* tst-fork2.c: New file.
	* tst-fork3.c: New file.

2002-11-28  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/bits/posix_opt.h: New file.

	* sysdeps/unix/sysv/linux/bits/posix_opt.h: Define macros which
	require it to 200112L.

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelrwlock.S: Use cmov
	instruction only if HAVE_CMOV is defined.
	* sysdeps/unix/sysv/linux/i386/i686/lowlevelrwlock.S: Define HAVE_CMOV.

	* sysdeps/unix/sysv/linux/x86_64/bits/semaphore.h: New file.

	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: New file.

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: New file.

	* sysdeps/unix/sysv/linux/x86_64/pt-vfork.S: New file.

2002-11-27  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/x86_64/bits/atomic.h: New file.

	* sysdeps/i386/i686/bits/atomic.h: Fix asm syntax for 8- and
	16-bit operations.

	* sysdeps/unix/sysv/linux/raise.c (raise): Use INTERNAL_SYSCALL if
	possible since gettid cannot fail.

	* sysdeps/x86_64/pthreaddef.h: New file.

	* sysdeps/i386/pthreaddef.h (gettid): Removed.

	* sysdeps/x86_64/pthread_spin_init.c: New file.
	* sysdeps/x86_64/pthread_spin_lock.c: New file.
	* sysdeps/x86_64/pthread_spin_trylock.c: New file.
	* sysdeps/x86_64/pthread_spin_unlock.c: New file.

	* sysdeps/i386/i686/pthread_spin_trylock.S (pthread_spin_trylock):
	Add missing lock prefix.  Minute optimization.

	* tst-spin2.c (main): Also check successful trylock call.

	* sysdeps/pthread/pthread_sigmask.c (pthread_sigmask): Use correct
	syscall.  Fix typo in case INTERNAL_SYSCALL is not used.

	* sysdeps/i386/pthread_spin_destroy.c: Moved to...
	* sysdeps/pthread/pthread_spin_destroy.c: ...here.  New file.

	* sysdeps/i386/pthread_sigmask.c: Removed.  Use the generic code.
	* sysdeps/pthread/pthread_sigmask.c (pthread_sigmask): Return correct
	value in case of an error.  Add support for INTERNAL_SYSCALL.

	* sysdeps/i386/pthread_sigmask.c (pthread_sigmask): Return correct
	value in case of an error.

	* sysdeps/x86_64/tls.h: New file.

2002-11-26  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/tls.h (THREAD_GETMEM_NC): Change interface.  It now
	takes the array member name and the index as parameters.
	(THREAD_SETMEM_NC): Likewise.
	* pthread_getspecific.c: Use new THREAD_GETMEM_NC interface.
	* pthread_setspecific.c: Use new THREAD_GETMEM_NC and THREAD_SETMEM_NC
	interfaces.

	* sysdeps/i386/tls.h (THREAD_SETMEM): Use size of member element
	to decide which code to use.
	(THREAD_SETMEM_NC): Likewise.

	* allocatestack.c (queue_stack): Don't remove stack from list here.
	Do it in the caller.  Correct condition to prematurely terminate
	loop to free stacks.
	(__deallocate_stack): Remove stack from list here.

2002-11-26  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-stack1.
	* tst-stack1.c: New file.

	* allocatestack.c (allocate_stack): Initialize the TCB on a user
	provided stack.

	* pthread_attr_getstack.c: Return bottom of the thread area.

2002-11-25  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (libpthread-routines): Add pt-allocrtsig and
	pthread_kill_other_threads.
	* pt-allocrtsig.c: New file.
	* pthread_kill_other_threads.c: New file.
	* sysdeps/unix/sysv/linux/allocrtsig.c: Add additional aliases for
	all three functions.
	* sysdeps/unix/sysv/linux/Makefile (sysdep_routines): Remove
	allocrtsig.
	* sysdeps/unix/sysv/linux/Versions (libc:GLIBC_PRIVATE): Export
	__libc_current_sigrtmin_private, __libc_current_sigrtmax_private,
	and __libc_allocate_rtsig_private.
	* Versions (libpthread): Export pthread_kill_other_threads_np,
	__libc_current_sigrtmin, and __libc_current_sigrtmax.

2002-11-24  Ulrich Drepper  <drepper@redhat.com>

	* allocatestack.c (allocate_stack): stackaddr in attribute points to
	the end of the stack.  Adjust computations.
	When mprotect call fails dequeue stack and free it.
	* pthread_attr_setstack.c: Store top of the stack in stackaddr
	attribute.
	* pthread_getattr_np.c: Likewise.

	* descr.h (IS_DETACHED): Add some more parenthesis to prevent
	surprises.

2002-11-23  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h (pthread_self): __THROW must come before
	attribute definitions.  Patch by Luca Barbieri <ldb@ldb.ods.org>.

2002-11-22  Ulrich Drepper  <drepper@redhat.com>

	* pthread_getspecific.c: Optimize access to first 2nd-level array.
	* pthread_setspecific.c: Likewise.

2002-11-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/createthread.c: Remove CLONE_ flags
	definitions.  Get them from the official place.
	* sysdeps/unix/sysv/linux/i386/fork.c: Likewise.

	* sysdeps/unix/sysv/linux/i386/createthread.c: Update CLONE_* flags.
	Use new CLONE_ flags in clone() calls.

	* sysdeps/unix/sysv/linux/fork.c: Use ARCH_FORK to actually fork.
	* sysdeps/unix/sysv/linux/i386/fork.c: New file.

	* Versions: Add pthread_* functions for libc.
	* forward.c: New file.

	* sysdeps/pthread/Makefile (libpthread-sysdeps_routines): Add
	errno-loc.
	* herrno.c: New file.
	* res.c: New file.

	* Makefile (libpthread-routines): Remove sem_post, sem_wait,
	sem_trywait, and sem_timedwait.  Add herrno and res.
	* sem_init.c: Don't initialize lock and waiters members.
	* sem_open.c: Likewise.
	* sem_post.c: Removed.
	* sem_wait.c: Removed.
	* sem_trywait.c: Removed.
	* sem_timedwait.c: Removed.
	* sysdeps/unix/sysv/linux/i386/i486/lowlevelsem.S: Complete rewrite.
	Includes full implementations of sem_post, sem_wait, sem_trywait,
	and sem_timedwait.
	* sysdeps/unix/sysv/linux/i386/lowlevelsem.h (lll_sem_post): Adjust
	for new implementation.
	* sysdeps/unix/sysv/linux/internaltypes.h (struct sem): Remove lock
	and waiters fields.

	* tst-sem3.c: Improve error message.
	* tst-signal3.c: Likewise.

	* init.c (__pthread_initialize_minimal): Use set_tid_address syscall
	to tell the kernel about the termination futex and to initialize tid
	member.  Don't initialize main_thread.
	* descr.h (struct pthread): Remove main_thread member.
	* cancelllation.c (__do_cancel): Remove code handling main thread.
	The main thread is not special anymore.

	* allocatestack.c (__reclaim_stacks): Mark stacks as unused.  Add
	size of the stacks to stack_cache_actsize.

	* pt-readv.c: Add missing "defined".
	* pt-sigwait.c: Likewise.
	* pt-writev.c: Likewise.

2002-11-09  Ulrich Drepper  <drepper@redhat.com>

	* Versions: Export __connect from libpthread.
	Patch by Luca Barbieri <ldb@ldb.ods.org>.

	* Makefile (libpthread-routines): Add pt-raise.
	* sysdeps/unix/sysv/linux/raise.c: New file.
	* sysdeps/unix/sysv/linux/pt-raise.c: New file.
	* sysdeps/generic/pt-raise.c: New file.

	* pthread_cond_init.c: Initialize all data elements of the condvar
	structure.  Patch by Luca Barbieri <ldb@ldb.ods.org>.

	* pthread_attr_init.c: Actually implement 2.0 compatibility version.
	* pthread_create.c: Likewise.

	* Makefile (tests): Add tst-key1, tst-key2, tst-key3.
	* tst-key1.c: New file.
	* tst-key2.c: New file.
	* tst-key3.c: New file.

	* Versions: Export pthread_detach for version GLIBC_2.0.
	Reported by Saurabh Desai <sdesai@austin.ibm.com>.

2002-11-08  Ulrich Drepper  <drepper@redhat.com>

	* pthread_key_create.c: Terminate search after an unused key was found.
	Patch by Luca Barbieri <ldb@ldb.ods.org>.

	* sysdeps/unix/sysv/linux/i386/pthread_once.S: Return zero.
	Patch by Luca Barbieri <ldb@ldb.ods.org>.

2002-10-10  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/i486/lowlevelsem.S: Use slow generic
	dynamic lookup for errno in PIC.

	* allocatestack.c (get_cached_stack): Rearrange code slightly to
	release the stack lock as soon as possible.
	Call _dl_allocate_tls_init for TCB from the cache to re-initialize
	the static TLS block.
	(allocate_stack): Call _dl_allocate_tls_init for user-provided stack.

	* cancellation.c: Renamed from cancelation.c.
	* Makefile: Adjust accordingly.
	* pthreadP.h (CANCELLATION_P): Renamed from CANCELATION_P.
	* cleanup_defer.c: Use CANCELLATION_P.
	* pthread_testcancel.c: Likewise.
	* descr.h: Fix spelling in comments.
	* init.c: Likewise.
	* pthread_getattr_np.c: Likewise.
	* pthread_getschedparam.c: Likewise.
	* pthread_setschedparam.c: Likewise.
	* Versions: Likewise.

	* pt-pselect.c: New file.
	* Makefile (libpthread-routines): Add pt-pselect.
	* Versions: Add pselect.

	* tst-cancel4.c: New file.
	* Makefile (tests): Add tst-cancel4.

2002-10-09  Ulrich Drepper  <drepper@redhat.com>

	* pthread_mutex_lock.c: Always record lock ownership.
	* pthread_mutex_timedlock.c: Likewise.
	* pthread_mutex_trylock.c: Likewise.

	* pt-readv.c: New file.
	* pt-writev.c: New file.
	* pt-creat.c: New file.
	* pt-msgrcv.c: New file.
	* pt-msgsnd.c: New file.
	* pt-poll.c: New file.
	* pt-select.c: New file.
	* pt-sigpause.c: New file.
	* pt-sigsuspend.c: New file.
	* pt-sigwait.c: New file.
	* pt-sigwaitinfo.c: New file.
	* pt-waitid.c: New file.
	* Makefile (libpthread-routines): Add pt-readv, pt-writev, pt-creat,
	pt-msgrcv, pt-msgsnd, pt-poll, pt-select, pt-sigpause, pt-sigsuspend,
	pt-sigwait, pt-sigwaitinfo, and pt-waitid.
	* Versions: Add all the new functions.

	* tst-exit1.c: New file.
	* Makefile (tests): Add tst-exit1.

	* sem_timedwait.c: Minor optimization for more optimal fastpath.

2002-10-08  Ulrich Drepper  <drepper@redhat.com>

	* pt-fcntl.c: Only enable asynchronous cancellation for F_SETLKW.

	* pthread_join.c: Enable asynchronous cancellation around lll_wait_tid
	call.  pthread_join is an official cancellation point.
	* pthread_timedjoin.c: Likewise.

	* pthread_cond_wait.c: Revert order in which internal lock are dropped
	and the condvar's mutex are retrieved.
	* pthread_cond_timedwait.c: Likewise.
	Reported by dice@saros.East.Sun.COM.

2002-10-07  Ulrich Drepper  <drepper@redhat.com>

	* pthreadP.h: Cut out all type definitions and move them...
	* sysdeps/unix/sysv/linux/internaltypes.h: ...here.  New file.
	* pthreadP.h: Include <internaltypes.h>.

	* sysdeps/unix/sysv/linux/i386/lowlevelsem.h (lll_sem_post): Little
	performance tweaks.

	* sem_trywait.c: Shuffle #includes around to get right order.
	* sem_timedwait.c: Likewise.
	* sem_post.c: Likewise.
	* sem_wait.c: Likewise.

	* nptl 0.3 released.

	* Makefile (tests): Add tst-signal3.
	* tst-signal3.c: New file.

2002-10-05  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/i386/lowlevelsem.h: Tell the compiler that
	the asms modify the sem object.
	(__lll_sem_timedwait): Now takes struct sem* as first parameter.

	* sysdeps/unix/sysv/linux/i386/bits/semaphore.h (sem_t): Don't expose
	the actual members.
	* pthreadP.h (struct sem): New type.  Actual semaphore type.
	* semaphoreP.h: Include pthreadP.h.
	* sem_getvalue.c: Adjust to sem_t change.
	* sem_init.c: Likewise.
	* sem_open.c: Likewise.
	* sem_post.c: Likewise.
	* sem_timedwait.c: Likewise.
	* sem_trywait.c: Likewise.
	* sem_wait.c: Likewise.

2002-10-04  Ulrich Drepper  <drepper@redhat.com>

	* Makefile (tests): Add tst-basic2, tst-exec1, tst-exec3, tst-exec3.
	* tst-basic2.c: New file.
	* tst-exec1.c: New file.
	* tst-exec2.c: New file.
	* tst-exec3.c: New file.

	* tst-fork1.c: Remove extra */.

	* nptl 0.2 released.  The API for IA-32 is complete.
